/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x1000004b generated on 2024-01-16 15:19:49.830143
/// Generated using solver transform6d
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "Kinematics_Controller/ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x1000004b);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.03) // 5D IK has some crazy degenerate cases, but can rely on jacobian refinment to make better, just need good starting point
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

template <typename T> struct ComplexLess
{
    bool operator()(const complex<T>& lhs, const complex<T>& rhs) const
    {
        if (real(lhs) < real(rhs)) {
            return true;
        }
        if (real(lhs) > real(rhs)) {
            return false;
        }
        return imag(lhs) < imag(rhs);
    }
};

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[4]);
x6=IKcos(j[3]);
x7=IKsin(j[3]);
x8=IKsin(j[0]);
x9=IKsin(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((0.6)*x1);
x13=((0.8)*x9);
x14=((0.083)*x7);
x15=((0.083)*x6);
x16=((0.066)*x3);
x17=((0.8)*x2);
x18=((0.24)*x8);
x19=((0.8)*x6);
x20=((0.8)*x7);
x21=((0.6)*x9);
x22=((1.0)*x8);
x23=((0.066)*x8);
x24=((1.0)*x0);
x25=((0.6)*x6);
x26=((0.6)*x7);
x27=(x0*x1);
x28=(x1*x3);
x29=(x3*x4);
x30=(x0*x9);
x31=(x2*x4);
x32=(x1*x2);
x33=(x8*x9);
x34=(x1*x8);
x35=((((-1.0)*x31))+(((1.0)*x28)));
x36=((((0.8)*x28))+(((-1.0)*x17*x4)));
x37=((((-1.0)*x12*x3))+(((0.6)*x31)));
x38=((((1.0)*x29))+(((1.0)*x32)));
x39=((((-1.0)*x1*x17))+(((-0.8)*x29)));
x40=(((x12*x2))+(((0.6)*x29)));
x41=(x35*x7);
x42=(x37*x6);
x43=(x40*x7);
x44=(x38*x6);
x45=(x39*x7);
x46=(x24*(((((-1.0)*x31))+x28)));
x47=(x22*(((((-1.0)*x31))+x28)));
x48=(x24*(((((-1.0)*x32))+(((-1.0)*x29)))));
x49=(x22*(((((-1.0)*x32))+(((-1.0)*x29)))));
x50=(x46*x6);
x51=(((x26*x35))+((x25*x38)));
x52=(((x19*x38))+((x20*x35)));
x53=(x51*x9);
x54=(x52*x9);
x55=(((x26*x39))+((x25*x36))+((x21*x51)));
x56=(((x20*x40))+((x13*x52))+((x19*x37)));
eerot[0]=(x33+((x5*((x50+((x48*x7)))))));
eerot[1]=((((((((((((-0.48)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.8)*(((((-0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((-0.8)*(((((0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.64)*(IKcos(j[4]))*(IKsin(j[0]))))))*(IKsin(j[5]))))+(((((((((((0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((((((-0.6)*(((((0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.6)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.6)*(((((-0.6)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.48)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.36)*(IKcos(j[4]))*(IKsin(j[0]))))))*(IKsin(j[5]))))+(((((((((((-0.64)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((0.64)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.64)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.64)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((-0.48)*(IKcos(j[4]))*(IKsin(j[0]))))+(((((((0.8)*(((((0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.6)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.8)*(((((-0.6)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKcos(j[5]))))+(((((((((((-0.36)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.36)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((((((0.36)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((-0.36)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.48)*(IKcos(j[4]))*(IKsin(j[0]))))+(((((((-0.6)*(((((-0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((-0.6)*(((((0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))))*(IKcos(j[5])))));
eerot[2]=((((((((((((-0.48)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.8)*(((((-0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))+(((-0.8)*(((((0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((-0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((0.64)*(IKcos(j[4]))*(IKsin(j[0]))))))*(IKcos(j[5]))))+(((((((((((0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((((((-0.6)*(((((0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.6)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.6)*(((((-0.6)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.48)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))))*(IKsin(j[3]))))+(((0.36)*(IKcos(j[4]))*(IKsin(j[0]))))))*(IKcos(j[5]))))+(((((((((((-0.8)*(((((-0.6)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.8)*(((((0.6)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.6)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((0.64)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.64)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.64)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((0.64)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.48)*(IKcos(j[4]))*(IKsin(j[0]))))))*(IKsin(j[5]))))+(((((((((((0.6)*(((((0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.6)*(((((-0.8)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((0.36)*(IKcos(j[0]))*(IKcos(j[2]))*(IKsin(j[1]))))+(((0.36)*(IKcos(j[0]))*(IKcos(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.48)*(IKcos(j[4]))*(IKsin(j[0]))))+(((((((-0.36)*(IKcos(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.36)*(IKcos(j[0]))*(IKcos(j[1]))*(IKcos(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[5])))));
IkReal x57=((1.0)*x16);
IkReal x58=(x0*x31);
eetrans[0]=((((0.325)*x27))+((x5*((((x15*x46))+((x14*x48))))))+((x6*(((((-0.066)*x2*x27))+(((-1.0)*x0*x4*x57))))))+(((0.083)*x33))+(((0.24)*x27*x3))+(((-0.24)*x58))+((x7*(((((0.066)*x58))+(((-1.0)*x27*x57)))))));
eerot[3]=(x5*(((((-1.0)*x41))+(((-1.0)*x44)))));
eerot[4]=(((x11*(((((-0.8)*x36*x6))+(((-0.8)*x53))+(((-0.8)*x45))))))+((x11*((((x26*x40))+((x25*x37))+((x21*x52))))))+((x10*x56))+((x10*x55)));
eerot[5]=(((x10*(((((-0.6)*x54))+(((-0.6)*x43))+(((-0.6)*x42))))))+((x11*x56))+((x11*x55))+((x10*((((x13*x51))+((x19*x36))+((x20*x39)))))));
eetrans[1]=((0.126)+((x6*(((((-1.0)*x1*x16))+(((0.066)*x31))))))+(((-0.325)*x4))+(((-0.24)*x29))+((x7*((((x16*x4))+(((0.066)*x32))))))+((x5*(((((-1.0)*x14*x35))+(((-1.0)*x15*x38))))))+(((-0.24)*x32)));
eerot[6]=(((x5*((((x47*x6))+((x49*x7))))))+(((-1.0)*x24*x9)));
eerot[7]=((((((((((((-0.8)*(((((-0.8)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.8)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))+(((-0.8)*(((((-0.8)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((-0.64)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((0.48)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((-0.48)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKsin(j[3]))))+(((((((-0.48)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.48)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[5]))))+(((((((-0.36)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((-0.6)*(((((-0.6)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.6)*(((((0.6)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.6)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((0.48)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.48)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.48)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((0.48)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[5]))))+(((((((-0.48)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((-0.36)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.36)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.36)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((0.36)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.6)*(((((-0.8)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.8)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))+(((-0.6)*(((((-0.8)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKcos(j[5]))))+(((((((((((0.8)*(((((0.6)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.6)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.8)*(((((-0.6)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((((((-0.64)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((0.64)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((-0.64)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.64)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[4]))))))*(IKcos(j[5])))));
eerot[8]=((((((((-0.48)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((0.64)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.64)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.64)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((0.64)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((-0.8)*(((((0.6)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.6)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((-0.8)*(((((-0.6)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((((((((((0.36)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))+(((0.36)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))))*(IKcos(j[3]))))+(((0.48)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((-0.36)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.36)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKsin(j[3]))))+(((((((0.6)*(((((-0.8)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.8)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))+(((0.6)*(((((-0.8)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((((((-0.36)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((-0.6)*(((((-0.6)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.6)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((-0.6)*(((((0.6)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.6)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[4]))))+(((((((0.48)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))+(((-0.48)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((0.48)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((0.48)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((((((((((-0.8)*(((((-0.8)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((0.8)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKcos(j[3]))))+(((-0.8)*(((((-0.8)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))+(((-0.8)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))))*(IKsin(j[3]))))))*(IKsin(j[4]))))+(((-0.64)*(IKcos(j[0]))*(IKcos(j[4]))))+(((((((0.48)*(IKsin(j[0]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((-0.48)*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[0]))))))*(IKsin(j[3]))))+(((((((-0.48)*(IKcos(j[2]))*(IKsin(j[0]))*(IKsin(j[1]))))+(((-0.48)*(IKcos(j[1]))*(IKsin(j[0]))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5])))));
IkReal x59=((1.0)*x16);
eetrans[2]=(((x18*x28))+(((-1.0)*x18*x31))+(((0.325)*x34))+((x7*(((((-1.0)*x34*x59))+((x23*x31))))))+(((-0.083)*x30))+((x6*(((((-1.0)*x4*x59*x8))+(((-1.0)*x23*x32))))))+((x5*((((x15*x47))+((x14*x49)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API const int* GetFreeIndices() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((-0.6)*r01))+(((-0.8)*r02)));
new_r01=((((-0.6)*r02))+(((0.8)*r01)));
new_r02=r00;
new_px=(px+(((-0.083)*r00)));
new_r10=((((-0.8)*r22))+(((-0.6)*r21)));
new_r11=((((-0.6)*r22))+(((0.8)*r21)));
new_r12=r20;
new_py=((((-0.083)*r20))+pz);
new_r20=((((0.6)*r11))+(((0.8)*r12)));
new_r21=((((0.6)*r12))+(((-0.8)*r11)));
new_r22=((-1.0)*r10);
new_pz=((0.126)+(((-1.0)*py))+(((0.083)*r10)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x60=((1.0)*px);
IkReal x61=((1.0)*pz);
IkReal x62=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x62))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x61)));
rxp0_2=((((-1.0)*r10*x60))+((py*r00)));
rxp1_0=((((-1.0)*r21*x62))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x61)));
rxp1_2=((((-1.0)*r11*x60))+((py*r01)));
rxp2_0=(((pz*r12))+(((-1.0)*r22*x62)));
rxp2_1=(((px*r22))+(((-1.0)*r02*x61)));
rxp2_2=((((-1.0)*r12*x60))+((py*r02)));
IkReal op[6+1], zeror[6];
int numroots;
IkReal x63=((2.112)*rxp1_2);
IkReal x64=((2.112)*rxp0_2);
IkReal x65=(npy*r20*rxp2_2);
IkReal x66=(npx*r21*rxp2_2);
IkReal x67=((0.528)*x65);
IkReal x68=((0.528)*x66);
IkReal x69=(((npz*r20*x63))+((npy*r22*x64))+(((1.584)*x66)));
IkReal x70=(((npz*r21*x64))+((npx*r22*x63))+(((1.584)*x65)));
op[0]=(x68+(((-1.0)*x67)));
op[1]=0;
op[2]=(x70+(((-1.0)*x69)));
op[3]=0;
op[4]=((((-1.0)*x70))+x69);
op[5]=0;
op[6]=(x67+(((-1.0)*x68)));
polyroots6(op,zeror,numroots);
IkReal j4array[6], cj4array[6], sj4array[6], tempj4array[1];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ++ij4)
{
IkReal htj4 = zeror[ij4];
tempj4array[0]=((2.0)*(atan(htj4)));
for(int kj4 = 0; kj4 < 1; ++kj4)
{
j4array[numsolutions] = tempj4array[kj4];
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
numsolutions++;
}
}
bool j4valid[6]={true,true,true,true,true,true};
_nj4 = 6;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
htj4 = IKtan(j4/2);

_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
{
IkReal j5eval[5];
IkReal x71=cj4*cj4;
IkReal x72=r22*r22;
IkReal x73=npz*npz;
IkReal x74=((((-1.0)*npy*r20*x71))+((npx*r21*x71)));
j5eval[0]=x74;
j5eval[1]=cj4;
j5eval[2]=sj4;
j5eval[3]=((((-2.0)*npz*pz*r22))+((x72*(npx*npx)))+x73+((x72*(npy*npy)))+((x72*x73)));
j5eval[4]=IKsign(x74);
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x75=cj4*cj4;
IkReal x76=(npx*r21);
IkReal x77=(npy*r20);
IkReal x78=(cj4*sj4);
IkReal x79=(r20*rxp1_2);
IkReal x80=(r21*rxp0_2);
IkReal x81=(pz*x75);
j5eval[0]=((((-15.1515151515152)*x76*x81))+((x78*x80))+(((-1.0)*x78*x79))+(((15.1515151515152)*x77*x81)));
j5eval[1]=IKsign(((((2.0)*x77*x81))+(((-0.132)*x78*x79))+(((0.132)*x78*x80))+(((-2.0)*x76*x81))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
IkReal x82=cj4*cj4;
IkReal x83=((229.568411386593)*pp);
IkReal x84=(npy*r20*x82);
IkReal x85=(cj4*npy*rxp0_2*sj4);
IkReal x86=(npx*r21*x82);
IkReal x87=(cj4*npx*rxp1_2*sj4);
j5eval[0]=((((-1.0)*x83*x86))+x84+(((-1.0)*x86))+(((30.3030303030303)*x85))+((x83*x84))+(((-30.3030303030303)*x87)));
j5eval[1]=IKsign(((((-1.0)*pp*x86))+((pp*x84))+(((-0.004356)*x86))+(((0.132)*x85))+(((-0.132)*x87))+(((0.004356)*x84))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
evalcond[1]=r22;
evalcond[2]=npz;
if( IKabs(evalcond[0]) < 0.0000050000000000  && IKabs(evalcond[1]) < 0.0000050000000000  && IKabs(evalcond[2]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=1.0;
cj4=0;
j4=1.5707963267949;
j5eval[0]=((rxp1_2*rxp1_2)+(rxp0_2*rxp0_2));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((rxp1_2*rxp1_2)+(rxp0_2*rxp0_2));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[4], cj5array[4], sj5array[4];
bool j5valid[4]={false};
_nj5 = 4;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=1.5707963267949;
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
j5array[2]=3.14159265358979;
sj5array[2]=IKsin(j5array[2]);
cj5array[2]=IKcos(j5array[2]);
j5array[3]=-1.5707963267949;
sj5array[3]=IKsin(j5array[3]);
cj5array[3]=IKcos(j5array[3]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
if( j5array[2] > IKPI )
{
    j5array[2]-=IK2PI;
}
else if( j5array[2] < -IKPI )
{    j5array[2]+=IK2PI;
}
j5valid[2] = true;
if( j5array[3] > IKPI )
{
    j5array[3]-=IK2PI;
}
else if( j5array[3] < -IKPI )
{    j5array[3]+=IK2PI;
}
j5valid[3] = true;
for(int ij5 = 0; ij5 < 4; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 4; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x88=(cj4*cj5);
IkReal x89=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x88))+(((-1.0)*r11*x88))+(((-1.0)*r10*x89))+(((1.33333333333333)*r11*x89)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x90=(cj4*sj5);
IkReal x91=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r01*x91))+((r00*x90))+(((1.33333333333333)*r00*x91))+(((-1.33333333333333)*r01*x90)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x92=((40.4040404040404)*sj4);
IkReal x93=((30.3030303030303)*sj5);
IkReal x94=(r12*sj4);
IkReal x95=((382.614018977655)*pp);
IkReal x96=(cj5*npy);
IkReal x97=(cj4*sj5);
IkReal x98=((30.3030303030303)*cj5);
IkReal x99=((612.182430364248)*py);
IkReal x100=(cj4*cj5);
IkReal x101=((459.136822773186)*py);
IkReal x102=(pp*x100);
j0eval[0]=((1.66666666666667)+(((50.5050505050505)*cj4*rxp2_1))+((npy*x97*x99))+(((-1.0)*x94*x95))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((rxp1_1*sj4*x98))+((r10*x97))+(((1.33333333333333)*r10*x100))+(((-306.091215182124)*pp*r11*x97))+(((-40.4040404040404)*x96))+((rxp0_1*sj4*x93))+(((-1.66666666666667)*x94))+(((-1.0)*rxp1_1*sj5*x92))+(((-1.0)*npx*x100*x99))+(((306.091215182124)*r10*x102))+((r11*x100))+(((-1.0)*npx*x101*x97))+(((229.568411386593)*pp*r10*x97))+x95+(((-1.0)*npy*x93))+(((-1.0)*cj4*x101*x96))+(((229.568411386593)*r11*x102))+(((-1.33333333333333)*r11*x97))+((npx*x98))+((cj5*rxp0_1*x92)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x103=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x103.valid){
continue;
}
CheckValue<IkReal> x104=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x104.valid){
continue;
}
CheckValue<IkReal> x105=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x105.valid){
continue;
}
CheckValue<IkReal> x106=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x106.valid){
continue;
}
CheckValue<IkReal> x107=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x107.valid){
continue;
}
CheckValue<IkReal> x108=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x108.valid){
continue;
}
CheckValue<IkReal> x109=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x109.valid){
continue;
}
CheckValue<IkReal> x110=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x110.valid){
continue;
}
CheckValue<IkReal> x111=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x111.valid){
continue;
}
CheckValue<IkReal> x112=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x112.valid){
continue;
}
CheckValue<IkReal> x113=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x113.valid){
continue;
}
CheckValue<IkReal> x114=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x114.valid){
continue;
}
CheckValue<IkReal> x115=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x115.valid){
continue;
}
CheckValue<IkReal> x116=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x116.valid){
continue;
}
CheckValue<IkReal> x117=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x117.valid){
continue;
}
CheckValue<IkReal> x118=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x118.valid){
continue;
}
CheckValue<IkReal> x119=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x119.valid){
continue;
}
CheckValue<IkReal> x120=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x120.valid){
continue;
}
CheckValue<IkReal> x121=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x121.valid){
continue;
}
CheckValue<IkReal> x122=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x122.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x103.value)))+(((-1.2)*cj4*npx*px*sj5*(x104.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x105.value)))+(((0.6)*cj4*cj5*pp*r01*(x106.value)))+(((0.0026136)*cj4*cj5*r01*(x107.value)))+(((0.0026136)*cj4*r00*sj5*(x108.value)))+(((-1.2)*cj4*cj5*npy*px*(x109.value)))+(((-1.6)*cj4*cj5*npx*px*(x110.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x111.value)))+(((-0.004356)*r02*sj4*(x112.value)))+(((0.132)*cj4*rxp2_0*(x113.value)))+(((-0.0034848)*cj4*r01*sj5*(x114.value)))+(((0.0034848)*cj4*cj5*r00*(x115.value)))+(((1.6)*cj4*npy*px*sj5*(x116.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x117.value)))+(((-0.8)*cj4*pp*r01*sj5*(x118.value)))+(((2.0)*npz*px*sj4*(x119.value)))+(((0.6)*cj4*pp*r00*sj5*(x120.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x121.value)))+(((0.8)*cj4*cj5*pp*r00*(x122.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1160=((0.8)*cj4);
IkReal x1161=((1.0)*sj4);
IkReal x1162=((0.6)*cj4);
CheckValue<IkReal> x1169=IKPowWithIntegerCheck(((((-1.0)*r02*x1161))+((r00*sj5*x1162))+((cj5*r00*x1160))+(((-1.0)*r01*sj5*x1160))+((cj5*r01*x1162))),-1);
if(!x1169.valid){
continue;
}
IkReal x1163=x1169.value;
IkReal x1164=(sj5*x1163);
IkReal x1165=(r11*x1163);
IkReal x1166=((1.0)*x1163);
IkReal x1167=(r10*x1163);
IkReal x1168=(cj5*x1163);
CheckValue<IkReal> x1170=IKPowWithIntegerCheck(((((-1.0)*r02*x1161))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1160))+(((-1.0)*r01*sj5*x1160))),-1);
if(!x1170.valid){
continue;
}
CheckValue<IkReal> x1171=IKPowWithIntegerCheck(((((-1.0)*r02*x1161))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1160))+(((-1.0)*r01*sj5*x1160))),-1);
if(!x1171.valid){
continue;
}
CheckValue<IkReal> x1172=IKPowWithIntegerCheck(((((-1.0)*r02*sj4))+((r00*sj5*x1162))+((cj5*r00*x1160))+(((-1.0)*r01*sj5*x1160))+((cj5*r01*x1162))),-1);
if(!x1172.valid){
continue;
}
CheckValue<IkReal> x1173=IKPowWithIntegerCheck(((((-1.0)*r02*x1161))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1162))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1162))),-1);
if(!x1173.valid){
continue;
}
CheckValue<IkReal> x1174=IKPowWithIntegerCheck(((((-1.0)*r02*x1161))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1162))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1162))),-1);
if(!x1174.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r11*x1162*(x1170.value)))+((r10*sj5*x1162*(x1171.value)))+(((-1.0)*r12*x1161*(x1172.value)))+(((-1.0)*r11*sj5*x1160*(x1173.value)))+((cj5*r10*x1160*(x1174.value)))+(((-1.0)*x1166))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1175=((0.6)*cj4);
IkReal x1176=((0.8)*cj4*sj5);
IkReal x1177=((0.8)*cj4*cj5);
CheckValue<IkReal> x1184=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1175))+((r12*sj4))+((r11*x1176))+(((-1.0)*cj5*r11*x1175))+(((-1.0)*r10*x1177))),-1);
if(!x1184.valid){
continue;
}
IkReal x1178=x1184.value;
IkReal x1179=(r01*x1178);
IkReal x1180=((0.8)*cj4*x1178);
IkReal x1181=(cj4*sj5*x1178);
IkReal x1182=(cj4*r00*x1178);
CheckValue<IkReal> x1185=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+((r11*x1176))+(((-0.6)*cj4*cj5*r11))+(((-1.0)*r10*x1177))),-1);
if(!x1185.valid){
continue;
}
IkReal x1183=(x1175*(x1185.value));
CheckValue<IkReal> x1186=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1175))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*cj5*r11*x1175))+(((-1.0)*r10*x1177))),-1);
if(!x1186.valid){
continue;
}
CheckValue<IkReal> x1187=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x1175))+((r12*sj4))+((r11*x1176))+(((-1.0)*cj5*r11*x1175))),-1);
if(!x1187.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*sj5*x1183))+(((-1.0)*r01*x1176*(x1186.value)))+((r00*x1177*(x1187.value)))+(((-1.0)*r02*sj4*x1178))+((cj5*r01*x1183))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1189 = IKatan2WithCheck(IkReal(((((-0.1056)*rxp0_2))+(((-0.0792)*rxp1_2)))),IkReal(((((0.1056)*rxp1_2))+(((-0.0792)*rxp0_2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1189.valid){
continue;
}
IkReal x1188=x1189.value;
j5array[0]=((-1.0)*x1188);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1188)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x1190=(cj4*cj5);
IkReal x1191=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x1190))+(((1.33333333333333)*r11*x1191))+(((-1.0)*r10*x1191))+(((-1.0)*r11*x1190)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1192=(cj4*sj5);
IkReal x1193=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x1192))+((r01*x1193))+(((-1.66666666666667)*r02*sj4))+((r00*x1192))+(((1.33333333333333)*r00*x1193)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1194=((40.4040404040404)*sj4);
IkReal x1195=((30.3030303030303)*sj5);
IkReal x1196=(r12*sj4);
IkReal x1197=((382.614018977655)*pp);
IkReal x1198=(cj5*npy);
IkReal x1199=(cj4*sj5);
IkReal x1200=((30.3030303030303)*cj5);
IkReal x1201=((612.182430364248)*py);
IkReal x1202=(cj4*cj5);
IkReal x1203=((459.136822773186)*py);
IkReal x1204=(pp*x1202);
j0eval[0]=((1.66666666666667)+x1197+(((306.091215182124)*r10*x1204))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*npy*x1195))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((r10*x1199))+(((1.33333333333333)*r10*x1202))+((rxp0_1*sj4*x1195))+((r11*x1202))+(((-1.0)*npx*x1201*x1202))+((cj5*rxp0_1*x1194))+(((-40.4040404040404)*x1198))+(((-1.0)*x1196*x1197))+(((-1.66666666666667)*x1196))+((npx*x1200))+(((-1.0)*npx*x1199*x1203))+(((229.568411386593)*pp*r10*x1199))+(((-1.0)*cj4*x1198*x1203))+(((-1.33333333333333)*r11*x1199))+(((-306.091215182124)*pp*r11*x1199))+(((-1.0)*rxp1_1*sj5*x1194))+(((229.568411386593)*r11*x1204))+((rxp1_1*sj4*x1200))+((npy*x1199*x1201)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1205=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1205.valid){
continue;
}
CheckValue<IkReal> x1206=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1206.valid){
continue;
}
CheckValue<IkReal> x1207=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1207.valid){
continue;
}
CheckValue<IkReal> x1208=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1208.valid){
continue;
}
CheckValue<IkReal> x1209=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1209.valid){
continue;
}
CheckValue<IkReal> x1210=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1210.valid){
continue;
}
CheckValue<IkReal> x1211=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1211.valid){
continue;
}
CheckValue<IkReal> x1212=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1212.valid){
continue;
}
CheckValue<IkReal> x1213=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1213.valid){
continue;
}
CheckValue<IkReal> x1214=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1214.valid){
continue;
}
CheckValue<IkReal> x1215=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1215.valid){
continue;
}
CheckValue<IkReal> x1216=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1216.valid){
continue;
}
CheckValue<IkReal> x1217=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1217.valid){
continue;
}
CheckValue<IkReal> x1218=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1218.valid){
continue;
}
CheckValue<IkReal> x1219=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1219.valid){
continue;
}
CheckValue<IkReal> x1220=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1220.valid){
continue;
}
CheckValue<IkReal> x1221=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1221.valid){
continue;
}
CheckValue<IkReal> x1222=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1222.valid){
continue;
}
CheckValue<IkReal> x1223=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1223.valid){
continue;
}
CheckValue<IkReal> x1224=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1224.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1205.value)))+(((-1.2)*cj4*npx*px*sj5*(x1206.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1207.value)))+(((0.6)*cj4*cj5*pp*r01*(x1208.value)))+(((0.0026136)*cj4*cj5*r01*(x1209.value)))+(((0.0026136)*cj4*r00*sj5*(x1210.value)))+(((-1.2)*cj4*cj5*npy*px*(x1211.value)))+(((-1.6)*cj4*cj5*npx*px*(x1212.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1213.value)))+(((-0.004356)*r02*sj4*(x1214.value)))+(((0.132)*cj4*rxp2_0*(x1215.value)))+(((-0.0034848)*cj4*r01*sj5*(x1216.value)))+(((0.0034848)*cj4*cj5*r00*(x1217.value)))+(((1.6)*cj4*npy*px*sj5*(x1218.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1219.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1220.value)))+(((2.0)*npz*px*sj4*(x1221.value)))+(((0.6)*cj4*pp*r00*sj5*(x1222.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1223.value)))+(((0.8)*cj4*cj5*pp*r00*(x1224.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1225=((0.8)*cj4);
IkReal x1226=((1.0)*sj4);
IkReal x1227=((0.6)*cj4);
CheckValue<IkReal> x1234=IKPowWithIntegerCheck((((r00*sj5*x1227))+(((-1.0)*r01*sj5*x1225))+((cj5*r01*x1227))+(((-1.0)*r02*x1226))+((cj5*r00*x1225))),-1);
if(!x1234.valid){
continue;
}
IkReal x1228=x1234.value;
IkReal x1229=(sj5*x1228);
IkReal x1230=(r11*x1228);
IkReal x1231=((1.0)*x1228);
IkReal x1232=(r10*x1228);
IkReal x1233=(cj5*x1228);
CheckValue<IkReal> x1235=IKPowWithIntegerCheck((((r00*sj5*x1227))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1227))+(((-1.0)*r02*x1226))),-1);
if(!x1235.valid){
continue;
}
CheckValue<IkReal> x1236=IKPowWithIntegerCheck((((r00*sj5*x1227))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1227))+(((-1.0)*r02*x1226))),-1);
if(!x1236.valid){
continue;
}
CheckValue<IkReal> x1237=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1225))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x1226))+((cj5*r00*x1225))),-1);
if(!x1237.valid){
continue;
}
CheckValue<IkReal> x1238=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1225))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x1226))+((cj5*r00*x1225))),-1);
if(!x1238.valid){
continue;
}
CheckValue<IkReal> x1239=IKPowWithIntegerCheck((((r00*sj5*x1227))+(((-1.0)*r01*sj5*x1225))+(((-1.0)*r02*sj4))+((cj5*r01*x1227))+((cj5*r00*x1225))),-1);
if(!x1239.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*x1231))+(((-1.0)*r11*sj5*x1225*(x1235.value)))+((cj5*r10*x1225*(x1236.value)))+((cj5*r11*x1227*(x1237.value)))+((r10*sj5*x1227*(x1238.value)))+(((-1.0)*r12*x1226*(x1239.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1240=((0.6)*cj4);
IkReal x1241=((0.8)*cj4*sj5);
IkReal x1242=((0.8)*cj4*cj5);
CheckValue<IkReal> x1249=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x1242))+(((-1.0)*r10*sj5*x1240))+((r12*sj4))+((r11*x1241))+(((-1.0)*cj5*r11*x1240))),-1);
if(!x1249.valid){
continue;
}
IkReal x1243=x1249.value;
IkReal x1244=(r01*x1243);
IkReal x1245=((0.8)*cj4*x1243);
IkReal x1246=(cj4*sj5*x1243);
IkReal x1247=(cj4*r00*x1243);
CheckValue<IkReal> x1250=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x1242))+((r12*sj4))+((r11*x1241))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1250.valid){
continue;
}
IkReal x1248=(x1240*(x1250.value));
CheckValue<IkReal> x1251=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x1240))+((r12*sj4))+((r11*x1241))+(((-1.0)*cj5*r11*x1240))),-1);
if(!x1251.valid){
continue;
}
CheckValue<IkReal> x1252=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*x1242))+(((-1.0)*r10*sj5*x1240))+((r12*sj4))+(((-1.0)*cj5*r11*x1240))),-1);
if(!x1252.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1243))+((cj5*r01*x1248))+((r00*x1242*(x1251.value)))+(((-1.0)*r01*x1241*(x1252.value)))+((r00*sj5*x1248))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=-1.0;
cj4=0;
j4=-1.5707963267949;
j5eval[0]=((rxp1_2*rxp1_2)+(rxp0_2*rxp0_2));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((rxp1_2*rxp1_2)+(rxp0_2*rxp0_2));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[4], cj5array[4], sj5array[4];
bool j5valid[4]={false};
_nj5 = 4;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=1.5707963267949;
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
j5array[2]=3.14159265358979;
sj5array[2]=IKsin(j5array[2]);
cj5array[2]=IKcos(j5array[2]);
j5array[3]=-1.5707963267949;
sj5array[3]=IKsin(j5array[3]);
cj5array[3]=IKcos(j5array[3]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
if( j5array[2] > IKPI )
{
    j5array[2]-=IK2PI;
}
else if( j5array[2] < -IKPI )
{    j5array[2]+=IK2PI;
}
j5valid[2] = true;
if( j5array[3] > IKPI )
{
    j5array[3]-=IK2PI;
}
else if( j5array[3] < -IKPI )
{    j5array[3]+=IK2PI;
}
j5valid[3] = true;
for(int ij5 = 0; ij5 < 4; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 4; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x1253=(cj4*cj5);
IkReal x1254=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.0)*r10*x1254))+(((1.66666666666667)*r12*sj4))+(((1.33333333333333)*r11*x1254))+(((-1.0)*r11*x1253))+(((-1.33333333333333)*r10*x1253)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1255=(cj4*sj5);
IkReal x1256=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x1255))+(((1.33333333333333)*r00*x1256))+((r00*x1255))+((r01*x1256)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1257=((40.4040404040404)*sj4);
IkReal x1258=((30.3030303030303)*sj5);
IkReal x1259=(r12*sj4);
IkReal x1260=((382.614018977655)*pp);
IkReal x1261=(cj5*npy);
IkReal x1262=(cj4*sj5);
IkReal x1263=((30.3030303030303)*cj5);
IkReal x1264=((612.182430364248)*py);
IkReal x1265=(cj4*cj5);
IkReal x1266=((459.136822773186)*py);
IkReal x1267=(pp*x1265);
j0eval[0]=((1.66666666666667)+(((1.33333333333333)*r10*x1265))+((npx*x1263))+((r11*x1265))+x1260+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*npx*sj5))+(((-40.4040404040404)*x1261))+(((765.228037955311)*npz*py*sj4))+((r10*x1262))+(((-1.33333333333333)*r11*x1262))+((cj5*rxp0_1*x1257))+(((-306.091215182124)*pp*r11*x1262))+(((-1.0)*npy*x1258))+((rxp1_1*sj4*x1263))+(((-1.0)*npx*x1262*x1266))+((rxp0_1*sj4*x1258))+(((229.568411386593)*r11*x1267))+(((-1.0)*npx*x1264*x1265))+(((-1.66666666666667)*x1259))+(((229.568411386593)*pp*r10*x1262))+((npy*x1262*x1264))+(((-1.0)*x1259*x1260))+(((306.091215182124)*r10*x1267))+(((-1.0)*rxp1_1*sj5*x1257))+(((-1.0)*cj4*x1261*x1266)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1268=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1268.valid){
continue;
}
CheckValue<IkReal> x1269=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1269.valid){
continue;
}
CheckValue<IkReal> x1270=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1270.valid){
continue;
}
CheckValue<IkReal> x1271=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1271.valid){
continue;
}
CheckValue<IkReal> x1272=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1272.valid){
continue;
}
CheckValue<IkReal> x1273=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1273.valid){
continue;
}
CheckValue<IkReal> x1274=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1274.valid){
continue;
}
CheckValue<IkReal> x1275=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1275.valid){
continue;
}
CheckValue<IkReal> x1276=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1276.valid){
continue;
}
CheckValue<IkReal> x1277=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1277.valid){
continue;
}
CheckValue<IkReal> x1278=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1278.valid){
continue;
}
CheckValue<IkReal> x1279=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1279.valid){
continue;
}
CheckValue<IkReal> x1280=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1280.valid){
continue;
}
CheckValue<IkReal> x1281=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1281.valid){
continue;
}
CheckValue<IkReal> x1282=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1282.valid){
continue;
}
CheckValue<IkReal> x1283=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1283.valid){
continue;
}
CheckValue<IkReal> x1284=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1284.valid){
continue;
}
CheckValue<IkReal> x1285=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1285.valid){
continue;
}
CheckValue<IkReal> x1286=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1286.valid){
continue;
}
CheckValue<IkReal> x1287=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1287.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1268.value)))+(((-1.2)*cj4*npx*px*sj5*(x1269.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1270.value)))+(((0.6)*cj4*cj5*pp*r01*(x1271.value)))+(((0.0026136)*cj4*cj5*r01*(x1272.value)))+(((0.0026136)*cj4*r00*sj5*(x1273.value)))+(((-1.2)*cj4*cj5*npy*px*(x1274.value)))+(((-1.6)*cj4*cj5*npx*px*(x1275.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1276.value)))+(((-0.004356)*r02*sj4*(x1277.value)))+(((0.132)*cj4*rxp2_0*(x1278.value)))+(((-0.0034848)*cj4*r01*sj5*(x1279.value)))+(((0.0034848)*cj4*cj5*r00*(x1280.value)))+(((1.6)*cj4*npy*px*sj5*(x1281.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1282.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1283.value)))+(((2.0)*npz*px*sj4*(x1284.value)))+(((0.6)*cj4*pp*r00*sj5*(x1285.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1286.value)))+(((0.8)*cj4*cj5*pp*r00*(x1287.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1288=((0.8)*cj4);
IkReal x1289=((1.0)*sj4);
IkReal x1290=((0.6)*cj4);
CheckValue<IkReal> x1297=IKPowWithIntegerCheck(((((-1.0)*r02*x1289))+((cj5*r01*x1290))+((r00*sj5*x1290))+(((-1.0)*r01*sj5*x1288))+((cj5*r00*x1288))),-1);
if(!x1297.valid){
continue;
}
IkReal x1291=x1297.value;
IkReal x1292=(sj5*x1291);
IkReal x1293=(r11*x1291);
IkReal x1294=((1.0)*x1291);
IkReal x1295=(r10*x1291);
IkReal x1296=(cj5*x1291);
CheckValue<IkReal> x1298=IKPowWithIntegerCheck((((cj5*r01*x1290))+(((-1.0)*r02*sj4))+((r00*sj5*x1290))+(((-1.0)*r01*sj5*x1288))+((cj5*r00*x1288))),-1);
if(!x1298.valid){
continue;
}
CheckValue<IkReal> x1299=IKPowWithIntegerCheck(((((-1.0)*r02*x1289))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1288))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1288))),-1);
if(!x1299.valid){
continue;
}
CheckValue<IkReal> x1300=IKPowWithIntegerCheck(((((-1.0)*r02*x1289))+((cj5*r01*x1290))+((r00*sj5*x1290))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1300.valid){
continue;
}
CheckValue<IkReal> x1301=IKPowWithIntegerCheck(((((-1.0)*r02*x1289))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1288))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1288))),-1);
if(!x1301.valid){
continue;
}
CheckValue<IkReal> x1302=IKPowWithIntegerCheck(((((-1.0)*r02*x1289))+((cj5*r01*x1290))+((r00*sj5*x1290))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1302.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*x1294))+(((-1.0)*r12*x1289*(x1298.value)))+((r10*sj5*x1290*(x1299.value)))+(((-1.0)*r11*sj5*x1288*(x1300.value)))+((cj5*r11*x1290*(x1301.value)))+((cj5*r10*x1288*(x1302.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1303=((0.6)*cj4);
IkReal x1304=((0.8)*cj4*sj5);
IkReal x1305=((0.8)*cj4*cj5);
CheckValue<IkReal> x1312=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x1303))+(((-1.0)*r10*x1305))+((r11*x1304))+(((-1.0)*r10*sj5*x1303))+((r12*sj4))),-1);
if(!x1312.valid){
continue;
}
IkReal x1306=x1312.value;
IkReal x1307=(r01*x1306);
IkReal x1308=((0.8)*cj4*x1306);
IkReal x1309=(cj4*sj5*x1306);
IkReal x1310=(cj4*r00*x1306);
CheckValue<IkReal> x1313=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x1305))+((r11*x1304))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1313.valid){
continue;
}
IkReal x1311=(x1303*(x1313.value));
CheckValue<IkReal> x1314=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x1303))+((r11*x1304))+(((-1.0)*r10*sj5*x1303))+((r12*sj4))),-1);
if(!x1314.valid){
continue;
}
CheckValue<IkReal> x1315=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x1303))+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*x1305))+(((-1.0)*r10*sj5*x1303))+((r12*sj4))),-1);
if(!x1315.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*x1305*(x1314.value)))+(((-1.0)*r02*sj4*x1306))+((cj5*r01*x1311))+((r00*sj5*x1311))+(((-1.0)*r01*x1304*(x1315.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1317 = IKatan2WithCheck(IkReal(((((0.0792)*rxp1_2))+(((0.1056)*rxp0_2)))),IkReal(((((0.0792)*rxp0_2))+(((-0.1056)*rxp1_2)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1317.valid){
continue;
}
IkReal x1316=x1317.value;
j5array[0]=((-1.0)*x1316);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1316)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x1318=(cj4*cj5);
IkReal x1319=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.0)*r10*x1319))+(((-1.0)*r11*x1318))+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x1318))+(((1.33333333333333)*r11*x1319)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1320=(cj4*sj5);
IkReal x1321=(cj4*cj5);
j0eval[0]=(((r01*x1321))+((r00*x1320))+(((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x1320))+(((1.33333333333333)*r00*x1321)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1322=((40.4040404040404)*sj4);
IkReal x1323=((30.3030303030303)*sj5);
IkReal x1324=(r12*sj4);
IkReal x1325=((382.614018977655)*pp);
IkReal x1326=(cj5*npy);
IkReal x1327=(cj4*sj5);
IkReal x1328=((30.3030303030303)*cj5);
IkReal x1329=((612.182430364248)*py);
IkReal x1330=(cj4*cj5);
IkReal x1331=((459.136822773186)*py);
IkReal x1332=(pp*x1330);
j0eval[0]=((1.66666666666667)+x1325+(((-1.0)*rxp1_1*sj5*x1322))+(((50.5050505050505)*cj4*rxp2_1))+((npy*x1327*x1329))+((r11*x1330))+(((-1.0)*x1324*x1325))+(((-40.4040404040404)*npx*sj5))+(((-40.4040404040404)*x1326))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*npy*x1323))+(((229.568411386593)*r11*x1332))+((cj5*rxp0_1*x1322))+(((-306.091215182124)*pp*r11*x1327))+(((-1.33333333333333)*r11*x1327))+((r10*x1327))+(((306.091215182124)*r10*x1332))+(((-1.66666666666667)*x1324))+((rxp1_1*sj4*x1328))+(((-1.0)*cj4*x1326*x1331))+(((-1.0)*npx*x1327*x1331))+(((-1.0)*npx*x1329*x1330))+(((229.568411386593)*pp*r10*x1327))+((rxp0_1*sj4*x1323))+(((1.33333333333333)*r10*x1330))+((npx*x1328)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1333=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1333.valid){
continue;
}
CheckValue<IkReal> x1334=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1334.valid){
continue;
}
CheckValue<IkReal> x1335=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1335.valid){
continue;
}
CheckValue<IkReal> x1336=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1336.valid){
continue;
}
CheckValue<IkReal> x1337=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1337.valid){
continue;
}
CheckValue<IkReal> x1338=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1338.valid){
continue;
}
CheckValue<IkReal> x1339=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1339.valid){
continue;
}
CheckValue<IkReal> x1340=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1340.valid){
continue;
}
CheckValue<IkReal> x1341=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1341.valid){
continue;
}
CheckValue<IkReal> x1342=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1342.valid){
continue;
}
CheckValue<IkReal> x1343=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1343.valid){
continue;
}
CheckValue<IkReal> x1344=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1344.valid){
continue;
}
CheckValue<IkReal> x1345=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1345.valid){
continue;
}
CheckValue<IkReal> x1346=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1346.valid){
continue;
}
CheckValue<IkReal> x1347=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1347.valid){
continue;
}
CheckValue<IkReal> x1348=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1348.valid){
continue;
}
CheckValue<IkReal> x1349=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1349.valid){
continue;
}
CheckValue<IkReal> x1350=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1350.valid){
continue;
}
CheckValue<IkReal> x1351=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1351.valid){
continue;
}
CheckValue<IkReal> x1352=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1352.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1333.value)))+(((-1.2)*cj4*npx*px*sj5*(x1334.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1335.value)))+(((0.6)*cj4*cj5*pp*r01*(x1336.value)))+(((0.0026136)*cj4*cj5*r01*(x1337.value)))+(((0.0026136)*cj4*r00*sj5*(x1338.value)))+(((-1.2)*cj4*cj5*npy*px*(x1339.value)))+(((-1.6)*cj4*cj5*npx*px*(x1340.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1341.value)))+(((-0.004356)*r02*sj4*(x1342.value)))+(((0.132)*cj4*rxp2_0*(x1343.value)))+(((-0.0034848)*cj4*r01*sj5*(x1344.value)))+(((0.0034848)*cj4*cj5*r00*(x1345.value)))+(((1.6)*cj4*npy*px*sj5*(x1346.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1347.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1348.value)))+(((2.0)*npz*px*sj4*(x1349.value)))+(((0.6)*cj4*pp*r00*sj5*(x1350.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1351.value)))+(((0.8)*cj4*cj5*pp*r00*(x1352.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1353=((0.8)*cj4);
IkReal x1354=((1.0)*sj4);
IkReal x1355=((0.6)*cj4);
CheckValue<IkReal> x1362=IKPowWithIntegerCheck((((cj5*r00*x1353))+((cj5*r01*x1355))+(((-1.0)*r02*x1354))+(((-1.0)*r01*sj5*x1353))+((r00*sj5*x1355))),-1);
if(!x1362.valid){
continue;
}
IkReal x1356=x1362.value;
IkReal x1357=(sj5*x1356);
IkReal x1358=(r11*x1356);
IkReal x1359=((1.0)*x1356);
IkReal x1360=(r10*x1356);
IkReal x1361=(cj5*x1356);
CheckValue<IkReal> x1363=IKPowWithIntegerCheck((((cj5*r01*x1355))+(((-1.0)*r02*x1354))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((r00*sj5*x1355))),-1);
if(!x1363.valid){
continue;
}
CheckValue<IkReal> x1364=IKPowWithIntegerCheck((((cj5*r00*x1353))+((cj5*r01*x1355))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x1353))+((r00*sj5*x1355))),-1);
if(!x1364.valid){
continue;
}
CheckValue<IkReal> x1365=IKPowWithIntegerCheck((((cj5*r00*x1353))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1354))+(((-1.0)*r01*sj5*x1353))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1365.valid){
continue;
}
CheckValue<IkReal> x1366=IKPowWithIntegerCheck((((cj5*r00*x1353))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1354))+(((-1.0)*r01*sj5*x1353))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1366.valid){
continue;
}
CheckValue<IkReal> x1367=IKPowWithIntegerCheck((((cj5*r01*x1355))+(((-1.0)*r02*x1354))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((r00*sj5*x1355))),-1);
if(!x1367.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r11*sj5*x1353*(x1363.value)))+(((-1.0)*x1359))+(((-1.0)*r12*x1354*(x1364.value)))+((r10*sj5*x1355*(x1365.value)))+((cj5*r11*x1355*(x1366.value)))+((cj5*r10*x1353*(x1367.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1368=((0.6)*cj4);
IkReal x1369=((0.8)*cj4*sj5);
IkReal x1370=((0.8)*cj4*cj5);
CheckValue<IkReal> x1377=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1368))+(((-1.0)*cj5*r11*x1368))+(((-1.0)*r10*x1370))+((r11*x1369))+((r12*sj4))),-1);
if(!x1377.valid){
continue;
}
IkReal x1371=x1377.value;
IkReal x1372=(r01*x1371);
IkReal x1373=((0.8)*cj4*x1371);
IkReal x1374=(cj4*sj5*x1371);
IkReal x1375=(cj4*r00*x1371);
CheckValue<IkReal> x1378=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x1370))+((r11*x1369))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1378.valid){
continue;
}
IkReal x1376=(x1368*(x1378.value));
CheckValue<IkReal> x1379=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1368))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x1368))+(((-1.0)*r10*x1370))+((r12*sj4))),-1);
if(!x1379.valid){
continue;
}
CheckValue<IkReal> x1380=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1368))+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x1368))+((r11*x1369))+((r12*sj4))),-1);
if(!x1380.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1371))+((r00*sj5*x1376))+((cj5*r01*x1376))+(((-1.0)*r01*x1369*(x1379.value)))+((r00*x1370*(x1380.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j4))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
sj4=0;
cj4=1.0;
j4=0;
IkReal x1381=(npy*pz*r20);
IkReal x1382=(npx*pz*r21);
j5eval[0]=(x1381+(((-1.0)*x1382)));
j5eval[1]=1089.0;
j5eval[2]=rxp2_2;
j5eval[3]=((1.0)+(((-1.0)*(r22*r22))));
j5eval[4]=IKsign(((((500.0)*x1381))+(((-500.0)*x1382))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[5];
sj4=0;
cj4=1.0;
j4=0;
IkReal x1383=(npy*r20);
IkReal x1384=((229.568411386593)*pp);
IkReal x1385=(npx*r21);
IkReal x1386=((250.0)*pp);
j5eval[0]=(x1383+(((-1.0)*x1384*x1385))+(((-1.0)*x1385))+((x1383*x1384)));
j5eval[1]=IKsign(((((1.089)*x1383))+(((-1.089)*x1385))+(((-1.0)*x1385*x1386))+((x1383*x1386))));
j5eval[2]=1089.0;
j5eval[3]=rxp2_2;
j5eval[4]=((npx*npx)+(npy*npy));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((npx*npx)+(npy*npy));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=1.0;
j4=0;
npx=0;
npy=0;
j5eval[0]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj4=0;
cj4=1.0;
j4=0;
npx=0;
npy=0;
IkReal x1387=r20*r20;
IkReal x1388=r21*r21;
IkReal x1389=pp*pp;
IkReal x1390=r22*r22;
IkReal x1391=((459.136822773186)*pp);
IkReal x1392=((52701.6555065641)*x1389);
j5eval[0]=(x1388+x1387+((x1388*x1391))+((x1388*x1392))+((x1387*x1392))+((x1387*x1391)));
j5eval[1]=((1.0)+x1392+x1391+(((-1.0)*x1390*x1391))+(((-1.0)*x1390*x1392))+(((-1.0)*x1390)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1393=(pp*r21);
IkReal x1394=(pp*r20);
IkReal x1395=((((-0.6)*x1394))+(((0.0034848)*r21))+(((-0.0026136)*r20))+(((0.8)*x1393)));
IkReal x1396=((((-0.8)*x1394))+(((-0.6)*x1393))+(((-0.0026136)*r21))+(((-0.0034848)*r20)));
CheckValue<IkReal> x1399 = IKatan2WithCheck(IkReal(x1396),IkReal(x1395),IKFAST_ATAN2_MAGTHRESH);
if(!x1399.valid){
continue;
}
IkReal x1397=((1.0)*(x1399.value));
if((((x1395*x1395)+(x1396*x1396))) < -0.00001)
continue;
CheckValue<IkReal> x1400=IKPowWithIntegerCheck(IKabs(IKsqrt(((x1395*x1395)+(x1396*x1396)))),-1);
if(!x1400.valid){
continue;
}
if( (((0.132)*rxp2_2*(x1400.value))) < -1-IKFAST_SINCOS_THRESH || (((0.132)*rxp2_2*(x1400.value))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1398=IKasin(((0.132)*rxp2_2*(x1400.value)));
j5array[0]=(x1398+(((-1.0)*x1397)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1398))+(((-1.0)*x1397)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1401=IKcos(j5);
IkReal x1402=IKsin(j5);
evalcond[0]=((((-0.8)*r20*x1401))+(((-0.6)*r21*x1401))+(((0.8)*r21*x1402))+(((-0.6)*r20*x1402)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1403=(cj4*cj5);
IkReal x1404=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x1403))+(((1.33333333333333)*r11*x1404))+(((-1.33333333333333)*r10*x1403))+(((-1.0)*r10*x1404)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1405=(cj4*sj5);
IkReal x1406=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x1405))+((r00*x1405))+((r01*x1406))+(((1.33333333333333)*r00*x1406)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1407=((40.4040404040404)*sj4);
IkReal x1408=((30.3030303030303)*sj5);
IkReal x1409=(r12*sj4);
IkReal x1410=((382.614018977655)*pp);
IkReal x1411=(cj5*npy);
IkReal x1412=(cj4*sj5);
IkReal x1413=((30.3030303030303)*cj5);
IkReal x1414=((612.182430364248)*py);
IkReal x1415=(cj4*cj5);
IkReal x1416=((459.136822773186)*py);
IkReal x1417=(pp*x1415);
j0eval[0]=((1.66666666666667)+(((229.568411386593)*r11*x1417))+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*cj4*x1411*x1416))+(((-1.33333333333333)*r11*x1412))+(((-1.66666666666667)*x1409))+((rxp1_1*sj4*x1413))+(((-1.0)*npy*x1408))+(((306.091215182124)*r10*x1417))+(((-40.4040404040404)*x1411))+((r11*x1415))+((cj5*rxp0_1*x1407))+(((-1.0)*npx*x1412*x1416))+((rxp0_1*sj4*x1408))+x1410+(((-1.0)*npx*x1414*x1415))+(((-1.0)*x1409*x1410))+(((1.33333333333333)*r10*x1415))+((npy*x1412*x1414))+((r10*x1412))+(((229.568411386593)*pp*r10*x1412))+(((-1.0)*rxp1_1*sj5*x1407))+(((-306.091215182124)*pp*r11*x1412))+((npx*x1413)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1418=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1418.valid){
continue;
}
CheckValue<IkReal> x1419=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1419.valid){
continue;
}
CheckValue<IkReal> x1420=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1420.valid){
continue;
}
CheckValue<IkReal> x1421=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1421.valid){
continue;
}
CheckValue<IkReal> x1422=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1422.valid){
continue;
}
CheckValue<IkReal> x1423=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1423.valid){
continue;
}
CheckValue<IkReal> x1424=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1424.valid){
continue;
}
CheckValue<IkReal> x1425=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1425.valid){
continue;
}
CheckValue<IkReal> x1426=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1426.valid){
continue;
}
CheckValue<IkReal> x1427=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1427.valid){
continue;
}
CheckValue<IkReal> x1428=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1428.valid){
continue;
}
CheckValue<IkReal> x1429=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1429.valid){
continue;
}
CheckValue<IkReal> x1430=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1430.valid){
continue;
}
CheckValue<IkReal> x1431=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1431.valid){
continue;
}
CheckValue<IkReal> x1432=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1432.valid){
continue;
}
CheckValue<IkReal> x1433=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1433.valid){
continue;
}
CheckValue<IkReal> x1434=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1434.valid){
continue;
}
CheckValue<IkReal> x1435=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1435.valid){
continue;
}
CheckValue<IkReal> x1436=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1436.valid){
continue;
}
CheckValue<IkReal> x1437=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1437.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1418.value)))+(((-1.2)*cj4*npx*px*sj5*(x1419.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1420.value)))+(((0.6)*cj4*cj5*pp*r01*(x1421.value)))+(((0.0026136)*cj4*cj5*r01*(x1422.value)))+(((0.0026136)*cj4*r00*sj5*(x1423.value)))+(((-1.2)*cj4*cj5*npy*px*(x1424.value)))+(((-1.6)*cj4*cj5*npx*px*(x1425.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1426.value)))+(((-0.004356)*r02*sj4*(x1427.value)))+(((0.132)*cj4*rxp2_0*(x1428.value)))+(((-0.0034848)*cj4*r01*sj5*(x1429.value)))+(((0.0034848)*cj4*cj5*r00*(x1430.value)))+(((1.6)*cj4*npy*px*sj5*(x1431.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1432.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1433.value)))+(((2.0)*npz*px*sj4*(x1434.value)))+(((0.6)*cj4*pp*r00*sj5*(x1435.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1436.value)))+(((0.8)*cj4*cj5*pp*r00*(x1437.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1438=((0.8)*cj4);
IkReal x1439=((1.0)*sj4);
IkReal x1440=((0.6)*cj4);
CheckValue<IkReal> x1447=IKPowWithIntegerCheck((((r00*sj5*x1440))+(((-1.0)*r01*sj5*x1438))+((cj5*r00*x1438))+(((-1.0)*r02*x1439))+((cj5*r01*x1440))),-1);
if(!x1447.valid){
continue;
}
IkReal x1441=x1447.value;
IkReal x1442=(sj5*x1441);
IkReal x1443=(r11*x1441);
IkReal x1444=((1.0)*x1441);
IkReal x1445=(r10*x1441);
IkReal x1446=(cj5*x1441);
CheckValue<IkReal> x1448=IKPowWithIntegerCheck((((r00*sj5*x1440))+(((-1.0)*r02*x1439))+((cj5*r01*x1440))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1448.valid){
continue;
}
CheckValue<IkReal> x1449=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1438))+((cj5*r00*x1438))+(((-1.0)*r02*x1439))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1449.valid){
continue;
}
CheckValue<IkReal> x1450=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1438))+((cj5*r00*x1438))+(((-1.0)*r02*x1439))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1450.valid){
continue;
}
CheckValue<IkReal> x1451=IKPowWithIntegerCheck((((r00*sj5*x1440))+(((-1.0)*r01*sj5*x1438))+((cj5*r00*x1438))+(((-1.0)*r02*sj4))+((cj5*r01*x1440))),-1);
if(!x1451.valid){
continue;
}
CheckValue<IkReal> x1452=IKPowWithIntegerCheck((((r00*sj5*x1440))+(((-1.0)*r02*x1439))+((cj5*r01*x1440))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1452.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r11*sj5*x1438*(x1448.value)))+((r10*sj5*x1440*(x1449.value)))+((cj5*r11*x1440*(x1450.value)))+(((-1.0)*x1444))+(((-1.0)*r12*x1439*(x1451.value)))+((cj5*r10*x1438*(x1452.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1453=((0.6)*cj4);
IkReal x1454=((0.8)*cj4*sj5);
IkReal x1455=((0.8)*cj4*cj5);
CheckValue<IkReal> x1462=IKPowWithIntegerCheck(((-1.0)+((r11*x1454))+(((-1.0)*r10*sj5*x1453))+((r12*sj4))+(((-1.0)*r10*x1455))+(((-1.0)*cj5*r11*x1453))),-1);
if(!x1462.valid){
continue;
}
IkReal x1456=x1462.value;
IkReal x1457=(r01*x1456);
IkReal x1458=((0.8)*cj4*x1456);
IkReal x1459=(cj4*sj5*x1456);
IkReal x1460=(cj4*r00*x1456);
CheckValue<IkReal> x1463=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r11*x1454))+((r12*sj4))+(((-1.0)*r10*x1455))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1463.valid){
continue;
}
IkReal x1461=(x1453*(x1463.value));
CheckValue<IkReal> x1464=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x1453))+((r12*sj4))+(((-1.0)*r10*x1455))+(((-1.0)*cj5*r11*x1453))),-1);
if(!x1464.valid){
continue;
}
CheckValue<IkReal> x1465=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x1454))+(((-1.0)*r10*sj5*x1453))+((r12*sj4))+(((-1.0)*cj5*r11*x1453))),-1);
if(!x1465.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x1461))+(((-1.0)*r01*x1454*(x1464.value)))+((r00*sj5*x1461))+((r00*x1455*(x1465.value)))+(((-1.0)*r02*sj4*x1456))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1467 = IKatan2WithCheck(IkReal(((((-0.8)*r20))+(((-0.6)*r21)))),IkReal(((((-0.6)*r20))+(((0.8)*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1467.valid){
continue;
}
IkReal x1466=x1467.value;
j5array[0]=((-1.0)*x1466);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1466)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1468=IKsin(j5);
IkReal x1469=IKcos(j5);
IkReal x1470=(pp*x1468);
IkReal x1471=(r21*x1469);
IkReal x1472=(r20*x1469);
evalcond[0]=((((-0.0034848)*x1472))+(((-0.0026136)*r20*x1468))+(((-0.0026136)*x1471))+(((0.0034848)*r21*x1468))+(((-0.6)*r20*x1470))+(((-0.8)*pp*x1472))+(((-0.6)*pp*x1471))+(((-0.132)*rxp2_2))+(((0.8)*r21*x1470)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1473=(cj4*cj5);
IkReal x1474=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x1473))+(((-1.0)*r11*x1473))+(((1.33333333333333)*r11*x1474))+(((-1.0)*r10*x1474)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1475=(cj4*sj5);
IkReal x1476=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x1475))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x1476))+((r01*x1476))+((r00*x1475)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1477=((40.4040404040404)*sj4);
IkReal x1478=((30.3030303030303)*sj5);
IkReal x1479=(r12*sj4);
IkReal x1480=((382.614018977655)*pp);
IkReal x1481=(cj5*npy);
IkReal x1482=(cj4*sj5);
IkReal x1483=((30.3030303030303)*cj5);
IkReal x1484=((612.182430364248)*py);
IkReal x1485=(cj4*cj5);
IkReal x1486=((459.136822773186)*py);
IkReal x1487=(pp*x1485);
j0eval[0]=((1.66666666666667)+(((-1.0)*npx*x1484*x1485))+(((229.568411386593)*r11*x1487))+(((-1.0)*npy*x1478))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*x1479*x1480))+(((-1.0)*cj4*x1481*x1486))+((r10*x1482))+((cj5*rxp0_1*x1477))+(((-40.4040404040404)*npx*sj5))+(((-1.0)*npx*x1482*x1486))+((npx*x1483))+(((-1.66666666666667)*x1479))+(((765.228037955311)*npz*py*sj4))+((rxp1_1*sj4*x1483))+(((-1.0)*rxp1_1*sj5*x1477))+(((306.091215182124)*r10*x1487))+(((-1.33333333333333)*r11*x1482))+(((-306.091215182124)*pp*r11*x1482))+((npy*x1482*x1484))+((r11*x1485))+x1480+(((-40.4040404040404)*x1481))+((rxp0_1*sj4*x1478))+(((229.568411386593)*pp*r10*x1482))+(((1.33333333333333)*r10*x1485)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1488=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1488.valid){
continue;
}
CheckValue<IkReal> x1489=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1489.valid){
continue;
}
CheckValue<IkReal> x1490=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1490.valid){
continue;
}
CheckValue<IkReal> x1491=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1491.valid){
continue;
}
CheckValue<IkReal> x1492=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1492.valid){
continue;
}
CheckValue<IkReal> x1493=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1493.valid){
continue;
}
CheckValue<IkReal> x1494=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1494.valid){
continue;
}
CheckValue<IkReal> x1495=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1495.valid){
continue;
}
CheckValue<IkReal> x1496=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1496.valid){
continue;
}
CheckValue<IkReal> x1497=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1497.valid){
continue;
}
CheckValue<IkReal> x1498=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1498.valid){
continue;
}
CheckValue<IkReal> x1499=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1499.valid){
continue;
}
CheckValue<IkReal> x1500=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1500.valid){
continue;
}
CheckValue<IkReal> x1501=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1501.valid){
continue;
}
CheckValue<IkReal> x1502=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1502.valid){
continue;
}
CheckValue<IkReal> x1503=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1503.valid){
continue;
}
CheckValue<IkReal> x1504=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1504.valid){
continue;
}
CheckValue<IkReal> x1505=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1505.valid){
continue;
}
CheckValue<IkReal> x1506=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1506.valid){
continue;
}
CheckValue<IkReal> x1507=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1507.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1488.value)))+(((-1.2)*cj4*npx*px*sj5*(x1489.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1490.value)))+(((0.6)*cj4*cj5*pp*r01*(x1491.value)))+(((0.0026136)*cj4*cj5*r01*(x1492.value)))+(((0.0026136)*cj4*r00*sj5*(x1493.value)))+(((-1.2)*cj4*cj5*npy*px*(x1494.value)))+(((-1.6)*cj4*cj5*npx*px*(x1495.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1496.value)))+(((-0.004356)*r02*sj4*(x1497.value)))+(((0.132)*cj4*rxp2_0*(x1498.value)))+(((-0.0034848)*cj4*r01*sj5*(x1499.value)))+(((0.0034848)*cj4*cj5*r00*(x1500.value)))+(((1.6)*cj4*npy*px*sj5*(x1501.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1502.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1503.value)))+(((2.0)*npz*px*sj4*(x1504.value)))+(((0.6)*cj4*pp*r00*sj5*(x1505.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1506.value)))+(((0.8)*cj4*cj5*pp*r00*(x1507.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1508=((0.8)*cj4);
IkReal x1509=((1.0)*sj4);
IkReal x1510=((0.6)*cj4);
CheckValue<IkReal> x1517=IKPowWithIntegerCheck((((cj5*r01*x1510))+((cj5*r00*x1508))+(((-1.0)*r02*x1509))+((r00*sj5*x1510))+(((-1.0)*r01*sj5*x1508))),-1);
if(!x1517.valid){
continue;
}
IkReal x1511=x1517.value;
IkReal x1512=(sj5*x1511);
IkReal x1513=(r11*x1511);
IkReal x1514=((1.0)*x1511);
IkReal x1515=(r10*x1511);
IkReal x1516=(cj5*x1511);
CheckValue<IkReal> x1518=IKPowWithIntegerCheck((((cj5*r01*x1510))+(((-1.0)*r02*x1509))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1510))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1518.valid){
continue;
}
CheckValue<IkReal> x1519=IKPowWithIntegerCheck((((cj5*r01*x1510))+((cj5*r00*x1508))+(((-1.0)*r02*sj4))+((r00*sj5*x1510))+(((-1.0)*r01*sj5*x1508))),-1);
if(!x1519.valid){
continue;
}
CheckValue<IkReal> x1520=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x1508))+(((-1.0)*r02*x1509))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x1508))),-1);
if(!x1520.valid){
continue;
}
CheckValue<IkReal> x1521=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x1508))+(((-1.0)*r02*x1509))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x1508))),-1);
if(!x1521.valid){
continue;
}
CheckValue<IkReal> x1522=IKPowWithIntegerCheck((((cj5*r01*x1510))+(((-1.0)*r02*x1509))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1510))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1522.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*x1514))+((cj5*r10*x1508*(x1518.value)))+(((-1.0)*r12*x1509*(x1519.value)))+((r10*sj5*x1510*(x1520.value)))+((cj5*r11*x1510*(x1521.value)))+(((-1.0)*r11*sj5*x1508*(x1522.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1523=((0.6)*cj4);
IkReal x1524=((0.8)*cj4*sj5);
IkReal x1525=((0.8)*cj4*cj5);
CheckValue<IkReal> x1532=IKPowWithIntegerCheck(((-1.0)+((r11*x1524))+(((-1.0)*r10*sj5*x1523))+((r12*sj4))+(((-1.0)*cj5*r11*x1523))+(((-1.0)*r10*x1525))),-1);
if(!x1532.valid){
continue;
}
IkReal x1526=x1532.value;
IkReal x1527=(r01*x1526);
IkReal x1528=((0.8)*cj4*x1526);
IkReal x1529=(cj4*sj5*x1526);
IkReal x1530=(cj4*r00*x1526);
CheckValue<IkReal> x1533=IKPowWithIntegerCheck(((-1.0)+((r11*x1524))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+(((-1.0)*r10*x1525))),-1);
if(!x1533.valid){
continue;
}
IkReal x1531=(x1523*(x1533.value));
CheckValue<IkReal> x1534=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x1523))+((r12*sj4))+(((-1.0)*cj5*r11*x1523))+(((-1.0)*r10*x1525))),-1);
if(!x1534.valid){
continue;
}
CheckValue<IkReal> x1535=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x1524))+(((-1.0)*r10*sj5*x1523))+((r12*sj4))+(((-1.0)*cj5*r11*x1523))),-1);
if(!x1535.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1526))+(((-1.0)*r01*x1524*(x1534.value)))+((cj5*r01*x1531))+((r00*x1525*(x1535.value)))+((r00*sj5*x1531))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x1536=((-1.0)*py);
sj4=0;
cj4=1.0;
j4=0;
pz=0;
pp=((px*px)+(py*py));
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(((px*r02))+((py*r12)));
rxp0_0=(r20*x1536);
rxp0_1=(px*r20);
rxp1_0=(r21*x1536);
rxp1_1=(px*r21);
rxp2_0=(r22*x1536);
rxp2_1=(px*r22);
IkReal x1537=py*py;
IkReal x1538=px*px*px;
IkReal x1539=py*py*py;
IkReal x1540=px*px;
IkReal x1541=((250.0)*r02);
IkReal x1542=((229.568411386593)*r02);
IkReal x1543=(py*x1540);
IkReal x1544=(r12*x1538);
IkReal x1545=(px*r12*x1537);
j5eval[0]=((((-1.0)*rxp2_2))+(((-1.0)*x1539*x1542))+(((-1.0)*x1542*x1543))+(((229.568411386593)*x1545))+(((229.568411386593)*x1544)));
j5eval[1]=IKsign(((((-1.089)*rxp2_2))+(((250.0)*x1545))+(((250.0)*x1544))+(((-1.0)*x1539*x1541))+(((-1.0)*x1541*x1543))));
j5eval[2]=1089.0;
j5eval[3]=rxp2_2;
j5eval[4]=((((-2.0)*px*py*r02*r12))+(((-1.0)*x1537*(r12*r12)))+x1540+x1537+(((-1.0)*x1540*(r02*r02))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(px))+(IKabs(py)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=1.0;
j4=0;
pz=0;
pp=0;
npx=0;
npy=0;
npz=0;
rxp0_0=0;
rxp0_1=0;
rxp1_0=0;
rxp1_1=0;
rxp2_0=0;
rxp2_1=0;
px=0;
py=0;
rxp0_2=0;
rxp1_2=0;
rxp2_2=0;
j5eval[0]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x1547 = IKatan2WithCheck(IkReal(((((-0.8)*r20))+(((-0.6)*r21)))),IkReal(((((-0.6)*r20))+(((0.8)*r21)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1547.valid){
continue;
}
IkReal x1546=x1547.value;
j5array[0]=((-1.0)*x1546);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1546)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1548=IKsin(j5);
IkReal x1549=IKcos(j5);
evalcond[0]=((((0.0034848)*r21*x1548))+(((-0.0034848)*r20*x1549))+(((-0.0026136)*r20*x1548))+(((-0.0026136)*r21*x1549)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1550=(cj4*cj5);
IkReal x1551=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x1550))+(((-1.0)*r10*x1551))+(((-1.0)*r11*x1550))+(((1.33333333333333)*r11*x1551)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1552=(cj4*sj5);
IkReal x1553=(cj4*cj5);
j0eval[0]=(((r00*x1552))+((r01*x1553))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x1553))+(((-1.33333333333333)*r01*x1552)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1554=((40.4040404040404)*sj4);
IkReal x1555=((30.3030303030303)*sj5);
IkReal x1556=(r12*sj4);
IkReal x1557=((382.614018977655)*pp);
IkReal x1558=(cj5*npy);
IkReal x1559=(cj4*sj5);
IkReal x1560=((30.3030303030303)*cj5);
IkReal x1561=((612.182430364248)*py);
IkReal x1562=(cj4*cj5);
IkReal x1563=((459.136822773186)*py);
IkReal x1564=(pp*x1562);
j0eval[0]=((1.66666666666667)+((npx*x1560))+((cj5*rxp0_1*x1554))+(((-1.0)*npx*x1561*x1562))+(((50.5050505050505)*cj4*rxp2_1))+(((229.568411386593)*pp*r10*x1559))+(((-40.4040404040404)*x1558))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-306.091215182124)*pp*r11*x1559))+(((-1.0)*cj4*x1558*x1563))+(((229.568411386593)*r11*x1564))+(((306.091215182124)*r10*x1564))+(((-1.0)*rxp1_1*sj5*x1554))+(((-1.0)*npx*x1559*x1563))+((r11*x1562))+x1557+((rxp0_1*sj4*x1555))+(((-1.0)*x1556*x1557))+((npy*x1559*x1561))+(((-1.33333333333333)*r11*x1559))+(((-1.66666666666667)*x1556))+((rxp1_1*sj4*x1560))+((r10*x1559))+(((1.33333333333333)*r10*x1562))+(((-1.0)*npy*x1555)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1565=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1565.valid){
continue;
}
CheckValue<IkReal> x1566=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1566.valid){
continue;
}
CheckValue<IkReal> x1567=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1567.valid){
continue;
}
CheckValue<IkReal> x1568=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1568.valid){
continue;
}
CheckValue<IkReal> x1569=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1569.valid){
continue;
}
CheckValue<IkReal> x1570=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1570.valid){
continue;
}
CheckValue<IkReal> x1571=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1571.valid){
continue;
}
CheckValue<IkReal> x1572=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1572.valid){
continue;
}
CheckValue<IkReal> x1573=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1573.valid){
continue;
}
CheckValue<IkReal> x1574=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1574.valid){
continue;
}
CheckValue<IkReal> x1575=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1575.valid){
continue;
}
CheckValue<IkReal> x1576=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1576.valid){
continue;
}
CheckValue<IkReal> x1577=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1577.valid){
continue;
}
CheckValue<IkReal> x1578=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1578.valid){
continue;
}
CheckValue<IkReal> x1579=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1579.valid){
continue;
}
CheckValue<IkReal> x1580=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1580.valid){
continue;
}
CheckValue<IkReal> x1581=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1581.valid){
continue;
}
CheckValue<IkReal> x1582=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1582.valid){
continue;
}
CheckValue<IkReal> x1583=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1583.valid){
continue;
}
CheckValue<IkReal> x1584=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1584.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1565.value)))+(((-1.2)*cj4*npx*px*sj5*(x1566.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1567.value)))+(((0.6)*cj4*cj5*pp*r01*(x1568.value)))+(((0.0026136)*cj4*cj5*r01*(x1569.value)))+(((0.0026136)*cj4*r00*sj5*(x1570.value)))+(((-1.2)*cj4*cj5*npy*px*(x1571.value)))+(((-1.6)*cj4*cj5*npx*px*(x1572.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1573.value)))+(((-0.004356)*r02*sj4*(x1574.value)))+(((0.132)*cj4*rxp2_0*(x1575.value)))+(((-0.0034848)*cj4*r01*sj5*(x1576.value)))+(((0.0034848)*cj4*cj5*r00*(x1577.value)))+(((1.6)*cj4*npy*px*sj5*(x1578.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1579.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1580.value)))+(((2.0)*npz*px*sj4*(x1581.value)))+(((0.6)*cj4*pp*r00*sj5*(x1582.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1583.value)))+(((0.8)*cj4*cj5*pp*r00*(x1584.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1585=((0.8)*cj4);
IkReal x1586=((1.0)*sj4);
IkReal x1587=((0.6)*cj4);
CheckValue<IkReal> x1594=IKPowWithIntegerCheck((((cj5*r00*x1585))+((r00*sj5*x1587))+((cj5*r01*x1587))+(((-1.0)*r01*sj5*x1585))+(((-1.0)*r02*x1586))),-1);
if(!x1594.valid){
continue;
}
IkReal x1588=x1594.value;
IkReal x1589=(sj5*x1588);
IkReal x1590=(r11*x1588);
IkReal x1591=((1.0)*x1588);
IkReal x1592=(r10*x1588);
IkReal x1593=(cj5*x1588);
CheckValue<IkReal> x1595=IKPowWithIntegerCheck((((cj5*r00*x1585))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1585))+(((-1.0)*r02*x1586))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1595.valid){
continue;
}
CheckValue<IkReal> x1596=IKPowWithIntegerCheck((((cj5*r00*x1585))+((r00*sj5*x1587))+((cj5*r01*x1587))+(((-1.0)*r01*sj5*x1585))+(((-1.0)*r02*sj4))),-1);
if(!x1596.valid){
continue;
}
CheckValue<IkReal> x1597=IKPowWithIntegerCheck((((r00*sj5*x1587))+((cj5*r01*x1587))+(((-1.0)*r02*x1586))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1597.valid){
continue;
}
CheckValue<IkReal> x1598=IKPowWithIntegerCheck((((r00*sj5*x1587))+((cj5*r01*x1587))+(((-1.0)*r02*x1586))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1598.valid){
continue;
}
CheckValue<IkReal> x1599=IKPowWithIntegerCheck((((cj5*r00*x1585))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1585))+(((-1.0)*r02*x1586))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1599.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x1587*(x1595.value)))+((r12*x1586*(x1596.value)))+((r11*sj5*x1585*(x1597.value)))+x1591+(((-1.0)*cj5*r10*x1585*(x1598.value)))+(((-1.0)*cj5*r11*x1587*(x1599.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1600=((0.6)*cj4);
IkReal x1601=((0.8)*cj4*sj5);
IkReal x1602=((0.8)*cj4*cj5);
CheckValue<IkReal> x1609=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1600))+((r11*x1601))+(((-1.0)*cj5*r11*x1600))+((r12*sj4))+(((-1.0)*r10*x1602))),-1);
if(!x1609.valid){
continue;
}
IkReal x1603=x1609.value;
IkReal x1604=(r01*x1603);
IkReal x1605=((0.8)*cj4*x1603);
IkReal x1606=(cj4*sj5*x1603);
IkReal x1607=(cj4*r00*x1603);
CheckValue<IkReal> x1610=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r11*x1601))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+(((-1.0)*r10*x1602))),-1);
if(!x1610.valid){
continue;
}
IkReal x1608=(x1600*(x1610.value));
CheckValue<IkReal> x1611=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x1600))+((r11*x1601))+(((-1.0)*cj5*r11*x1600))+((r12*sj4))),-1);
if(!x1611.valid){
continue;
}
CheckValue<IkReal> x1612=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1600))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x1600))+((r12*sj4))+(((-1.0)*r10*x1602))),-1);
if(!x1612.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*x1602*(x1611.value)))+((r00*sj5*x1608))+(((-1.0)*r02*sj4*x1603))+((cj5*r01*x1608))+(((-1.0)*r01*x1601*(x1612.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1613=(py*rxp2_2);
IkReal x1614=((250.0)*r12);
IkReal x1615=((250.0)*r02);
IkReal x1616=((26.4)*px*rxp2_2);
IkReal x1617=((19.8)*px*rxp2_2);
CheckValue<IkReal> x1618 = IKatan2WithCheck(IkReal(((((-1.0)*r01*x1617))+(((-1.0)*r00*x1616))+(((-19.8)*r11*x1613))+(((-26.4)*r10*x1613)))),IkReal(((((-26.4)*r11*x1613))+((r00*x1617))+(((-1.0)*r01*x1616))+(((19.8)*r10*x1613)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1618.valid){
continue;
}
CheckValue<IkReal> x1619=IKPowWithIntegerCheck(IKsign(((((-1.0)*x1615*(py*py*py)))+((px*x1614*(py*py)))+(((-1.089)*rxp2_2))+((x1614*(px*px*px)))+(((-1.0)*py*x1615*(px*px))))),-1);
if(!x1619.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x1618.value)+(((1.5707963267949)*(x1619.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1620=IKcos(j5);
IkReal x1621=IKsin(j5);
IkReal x1622=py*py;
IkReal x1623=px*px;
IkReal x1624=(px*r01);
IkReal x1625=(px*r00);
IkReal x1626=((0.8)*x1621);
IkReal x1627=(r21*x1623);
IkReal x1628=(r21*x1620);
IkReal x1629=(py*x1620);
IkReal x1630=((0.6)*x1621);
IkReal x1631=((0.6)*x1620);
IkReal x1632=(r20*x1630);
IkReal x1633=((0.8)*r20*x1620);
evalcond[0]=((((-0.6)*x1628))+((r21*x1626))+(((-1.0)*x1632))+(((-1.0)*x1633)));
evalcond[1]=((((-1.0)*py*r10*x1630))+(((-0.8)*r10*x1629))+(((-1.0)*x1624*x1631))+(((-0.6)*r11*x1629))+(((-1.0)*x1625*x1630))+(((-0.8)*x1620*x1625))+((x1624*x1626))+((py*r11*x1626)));
evalcond[2]=(((r21*x1622*x1626))+(((-0.0026136)*x1628))+((x1626*x1627))+(((-1.0)*x1622*x1632))+(((-1.0)*x1622*x1633))+(((-0.6)*x1622*x1628))+(((-1.0)*x1623*x1632))+(((-1.0)*x1623*x1633))+(((-0.0026136)*r20*x1621))+(((-0.0034848)*r20*x1620))+(((0.0034848)*r21*x1621))+(((-0.132)*rxp2_2))+(((-1.0)*x1627*x1631)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1634=(cj4*cj5);
IkReal x1635=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r10*x1635))+(((-1.0)*r11*x1634))+(((1.33333333333333)*r11*x1635))+(((-1.33333333333333)*r10*x1634)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1636=(cj4*sj5);
IkReal x1637=(cj4*cj5);
j0eval[0]=((((1.33333333333333)*r00*x1637))+(((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x1636))+((r01*x1637))+((r00*x1636)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1638=((40.4040404040404)*sj4);
IkReal x1639=((30.3030303030303)*sj5);
IkReal x1640=(r12*sj4);
IkReal x1641=((382.614018977655)*pp);
IkReal x1642=(cj5*npy);
IkReal x1643=(cj4*sj5);
IkReal x1644=((30.3030303030303)*cj5);
IkReal x1645=((612.182430364248)*py);
IkReal x1646=(cj4*cj5);
IkReal x1647=((459.136822773186)*py);
IkReal x1648=(pp*x1646);
j0eval[0]=((1.66666666666667)+(((1.33333333333333)*r10*x1646))+(((229.568411386593)*pp*r10*x1643))+(((50.5050505050505)*cj4*rxp2_1))+((r11*x1646))+((npx*x1644))+(((-1.66666666666667)*x1640))+((r10*x1643))+((rxp1_1*sj4*x1644))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+x1641+(((306.091215182124)*r10*x1648))+(((-1.0)*x1640*x1641))+(((-40.4040404040404)*x1642))+(((-1.33333333333333)*r11*x1643))+(((-1.0)*npx*x1643*x1647))+(((-1.0)*rxp1_1*sj5*x1638))+(((-1.0)*npy*x1639))+(((-1.0)*npx*x1645*x1646))+((cj5*rxp0_1*x1638))+(((-1.0)*cj4*x1642*x1647))+((rxp0_1*sj4*x1639))+(((-306.091215182124)*pp*r11*x1643))+((npy*x1643*x1645))+(((229.568411386593)*r11*x1648)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1649=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1649.valid){
continue;
}
CheckValue<IkReal> x1650=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1650.valid){
continue;
}
CheckValue<IkReal> x1651=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1651.valid){
continue;
}
CheckValue<IkReal> x1652=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1652.valid){
continue;
}
CheckValue<IkReal> x1653=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1653.valid){
continue;
}
CheckValue<IkReal> x1654=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1654.valid){
continue;
}
CheckValue<IkReal> x1655=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1655.valid){
continue;
}
CheckValue<IkReal> x1656=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1656.valid){
continue;
}
CheckValue<IkReal> x1657=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1657.valid){
continue;
}
CheckValue<IkReal> x1658=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1658.valid){
continue;
}
CheckValue<IkReal> x1659=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1659.valid){
continue;
}
CheckValue<IkReal> x1660=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1660.valid){
continue;
}
CheckValue<IkReal> x1661=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1661.valid){
continue;
}
CheckValue<IkReal> x1662=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1662.valid){
continue;
}
CheckValue<IkReal> x1663=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1663.valid){
continue;
}
CheckValue<IkReal> x1664=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1664.valid){
continue;
}
CheckValue<IkReal> x1665=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1665.valid){
continue;
}
CheckValue<IkReal> x1666=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1666.valid){
continue;
}
CheckValue<IkReal> x1667=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1667.valid){
continue;
}
CheckValue<IkReal> x1668=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1668.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1649.value)))+(((-1.2)*cj4*npx*px*sj5*(x1650.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1651.value)))+(((0.6)*cj4*cj5*pp*r01*(x1652.value)))+(((0.0026136)*cj4*cj5*r01*(x1653.value)))+(((0.0026136)*cj4*r00*sj5*(x1654.value)))+(((-1.2)*cj4*cj5*npy*px*(x1655.value)))+(((-1.6)*cj4*cj5*npx*px*(x1656.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1657.value)))+(((-0.004356)*r02*sj4*(x1658.value)))+(((0.132)*cj4*rxp2_0*(x1659.value)))+(((-0.0034848)*cj4*r01*sj5*(x1660.value)))+(((0.0034848)*cj4*cj5*r00*(x1661.value)))+(((1.6)*cj4*npy*px*sj5*(x1662.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1663.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1664.value)))+(((2.0)*npz*px*sj4*(x1665.value)))+(((0.6)*cj4*pp*r00*sj5*(x1666.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1667.value)))+(((0.8)*cj4*cj5*pp*r00*(x1668.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1669=((0.8)*cj4);
IkReal x1670=((1.0)*sj4);
IkReal x1671=((0.6)*cj4);
CheckValue<IkReal> x1678=IKPowWithIntegerCheck((((r00*sj5*x1671))+(((-1.0)*r02*x1670))+((cj5*r00*x1669))+(((-1.0)*r01*sj5*x1669))+((cj5*r01*x1671))),-1);
if(!x1678.valid){
continue;
}
IkReal x1672=x1678.value;
IkReal x1673=(sj5*x1672);
IkReal x1674=(r11*x1672);
IkReal x1675=((1.0)*x1672);
IkReal x1676=(r10*x1672);
IkReal x1677=(cj5*x1672);
CheckValue<IkReal> x1679=IKPowWithIntegerCheck((((r00*sj5*x1671))+(((-1.0)*r02*x1670))+((cj5*r01*x1671))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1679.valid){
continue;
}
CheckValue<IkReal> x1680=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1670))+((cj5*r00*x1669))+(((-1.0)*r01*sj5*x1669))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1680.valid){
continue;
}
CheckValue<IkReal> x1681=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1670))+((cj5*r00*x1669))+(((-1.0)*r01*sj5*x1669))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1681.valid){
continue;
}
CheckValue<IkReal> x1682=IKPowWithIntegerCheck((((r00*sj5*x1671))+(((-1.0)*r02*x1670))+((cj5*r01*x1671))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1682.valid){
continue;
}
CheckValue<IkReal> x1683=IKPowWithIntegerCheck((((r00*sj5*x1671))+((cj5*r00*x1669))+(((-1.0)*r01*sj5*x1669))+(((-1.0)*r02*sj4))+((cj5*r01*x1671))),-1);
if(!x1683.valid){
continue;
}
j0array[0]=((-2.0)*(atan((((r11*sj5*x1669*(x1679.value)))+(((-1.0)*cj5*r11*x1671*(x1680.value)))+(((-1.0)*r10*sj5*x1671*(x1681.value)))+x1675+(((-1.0)*cj5*r10*x1669*(x1682.value)))+((r12*x1670*(x1683.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1684=((0.6)*cj4);
IkReal x1685=((0.8)*cj4*sj5);
IkReal x1686=((0.8)*cj4*cj5);
CheckValue<IkReal> x1693=IKPowWithIntegerCheck(((-1.0)+((r11*x1685))+(((-1.0)*r10*x1686))+((r12*sj4))+(((-1.0)*cj5*r11*x1684))+(((-1.0)*r10*sj5*x1684))),-1);
if(!x1693.valid){
continue;
}
IkReal x1687=x1693.value;
IkReal x1688=(r01*x1687);
IkReal x1689=((0.8)*cj4*x1687);
IkReal x1690=(cj4*sj5*x1687);
IkReal x1691=(cj4*r00*x1687);
CheckValue<IkReal> x1694=IKPowWithIntegerCheck(((-1.0)+((r11*x1685))+(((-1.0)*r10*x1686))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1694.valid){
continue;
}
IkReal x1692=(x1684*(x1694.value));
CheckValue<IkReal> x1695=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x1686))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*cj5*r11*x1684))+(((-1.0)*r10*sj5*x1684))),-1);
if(!x1695.valid){
continue;
}
CheckValue<IkReal> x1696=IKPowWithIntegerCheck(((-1.0)+((r11*x1685))+(((-0.8)*cj4*cj5*r10))+((r12*sj4))+(((-1.0)*cj5*r11*x1684))+(((-1.0)*r10*sj5*x1684))),-1);
if(!x1696.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x1685*(x1695.value)))+((cj5*r01*x1692))+((r00*sj5*x1692))+(((-1.0)*r02*sj4*x1687))+((r00*x1686*(x1696.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x1697=((-1.0)*pz);
sj4=0;
cj4=1.0;
j4=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1697);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1697);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=(pp+(((-1.0)*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x1698=((-1.0)*pz);
sj4=0;
cj4=1.0;
j4=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x1698);
rxp1_0=(pz*r11);
rxp1_1=(r01*x1698);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=4.0;
j5eval[1]=pz;
j5eval[2]=(pp+(((-1.0)*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=1.0;
j4=0;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=0;
rxp0_0=0;
rxp0_1=0;
rxp1_0=0;
rxp1_1=0;
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
pz=0;
pp=((px*px)+(py*py));
j5eval[0]=((px*px)+(py*py));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1699=(py*r10);
IkReal x1700=(px*r01);
IkReal x1701=(px*r00);
IkReal x1702=(py*r11);
CheckValue<IkReal> x1704 = IKatan2WithCheck(IkReal(((((-0.8)*x1699))+(((-0.6)*x1702))+(((-0.6)*x1700))+(((-0.8)*x1701)))),IkReal(((((0.8)*x1700))+(((0.8)*x1702))+(((-0.6)*x1701))+(((-0.6)*x1699)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1704.valid){
continue;
}
IkReal x1703=x1704.value;
j5array[0]=((-1.0)*x1703);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1703)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x1705=(cj4*cj5);
IkReal x1706=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.33333333333333)*r11*x1706))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r10*x1706))+(((-1.33333333333333)*r10*x1705))+(((-1.0)*r11*x1705)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1707=(cj4*sj5);
IkReal x1708=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r01*x1708))+(((1.33333333333333)*r00*x1708))+((r00*x1707))+(((-1.33333333333333)*r01*x1707)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1709=((40.4040404040404)*sj4);
IkReal x1710=((30.3030303030303)*sj5);
IkReal x1711=(r12*sj4);
IkReal x1712=((382.614018977655)*pp);
IkReal x1713=(cj5*npy);
IkReal x1714=(cj4*sj5);
IkReal x1715=((30.3030303030303)*cj5);
IkReal x1716=((612.182430364248)*py);
IkReal x1717=(cj4*cj5);
IkReal x1718=((459.136822773186)*py);
IkReal x1719=(pp*x1717);
j0eval[0]=((1.66666666666667)+(((50.5050505050505)*cj4*rxp2_1))+((rxp1_1*sj4*x1715))+(((-306.091215182124)*pp*r11*x1714))+((r11*x1717))+(((-40.4040404040404)*npx*sj5))+x1712+(((-1.0)*rxp1_1*sj5*x1709))+(((765.228037955311)*npz*py*sj4))+(((-1.33333333333333)*r11*x1714))+(((-40.4040404040404)*x1713))+((rxp0_1*sj4*x1710))+(((1.33333333333333)*r10*x1717))+(((-1.0)*cj4*x1713*x1718))+(((-1.0)*npx*x1716*x1717))+(((-1.0)*x1711*x1712))+(((306.091215182124)*r10*x1719))+(((-1.0)*npy*x1710))+(((-1.66666666666667)*x1711))+((r10*x1714))+(((229.568411386593)*pp*r10*x1714))+((npy*x1714*x1716))+(((229.568411386593)*r11*x1719))+((npx*x1715))+(((-1.0)*npx*x1714*x1718))+((cj5*rxp0_1*x1709)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1720=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1720.valid){
continue;
}
CheckValue<IkReal> x1721=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1721.valid){
continue;
}
CheckValue<IkReal> x1722=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1722.valid){
continue;
}
CheckValue<IkReal> x1723=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1723.valid){
continue;
}
CheckValue<IkReal> x1724=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1724.valid){
continue;
}
CheckValue<IkReal> x1725=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1725.valid){
continue;
}
CheckValue<IkReal> x1726=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1726.valid){
continue;
}
CheckValue<IkReal> x1727=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1727.valid){
continue;
}
CheckValue<IkReal> x1728=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1728.valid){
continue;
}
CheckValue<IkReal> x1729=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1729.valid){
continue;
}
CheckValue<IkReal> x1730=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1730.valid){
continue;
}
CheckValue<IkReal> x1731=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1731.valid){
continue;
}
CheckValue<IkReal> x1732=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1732.valid){
continue;
}
CheckValue<IkReal> x1733=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1733.valid){
continue;
}
CheckValue<IkReal> x1734=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1734.valid){
continue;
}
CheckValue<IkReal> x1735=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1735.valid){
continue;
}
CheckValue<IkReal> x1736=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1736.valid){
continue;
}
CheckValue<IkReal> x1737=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1737.valid){
continue;
}
CheckValue<IkReal> x1738=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1738.valid){
continue;
}
CheckValue<IkReal> x1739=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1739.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1720.value)))+(((-1.2)*cj4*npx*px*sj5*(x1721.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1722.value)))+(((0.6)*cj4*cj5*pp*r01*(x1723.value)))+(((0.0026136)*cj4*cj5*r01*(x1724.value)))+(((0.0026136)*cj4*r00*sj5*(x1725.value)))+(((-1.2)*cj4*cj5*npy*px*(x1726.value)))+(((-1.6)*cj4*cj5*npx*px*(x1727.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1728.value)))+(((-0.004356)*r02*sj4*(x1729.value)))+(((0.132)*cj4*rxp2_0*(x1730.value)))+(((-0.0034848)*cj4*r01*sj5*(x1731.value)))+(((0.0034848)*cj4*cj5*r00*(x1732.value)))+(((1.6)*cj4*npy*px*sj5*(x1733.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1734.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1735.value)))+(((2.0)*npz*px*sj4*(x1736.value)))+(((0.6)*cj4*pp*r00*sj5*(x1737.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1738.value)))+(((0.8)*cj4*cj5*pp*r00*(x1739.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1740=((0.8)*cj4);
IkReal x1741=((1.0)*sj4);
IkReal x1742=((0.6)*cj4);
CheckValue<IkReal> x1749=IKPowWithIntegerCheck((((r00*sj5*x1742))+(((-1.0)*r01*sj5*x1740))+((cj5*r00*x1740))+((cj5*r01*x1742))+(((-1.0)*r02*x1741))),-1);
if(!x1749.valid){
continue;
}
IkReal x1743=x1749.value;
IkReal x1744=(sj5*x1743);
IkReal x1745=(r11*x1743);
IkReal x1746=((1.0)*x1743);
IkReal x1747=(r10*x1743);
IkReal x1748=(cj5*x1743);
CheckValue<IkReal> x1750=IKPowWithIntegerCheck((((r00*sj5*x1742))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1742))+(((-1.0)*r02*x1741))),-1);
if(!x1750.valid){
continue;
}
CheckValue<IkReal> x1751=IKPowWithIntegerCheck(((((-1.0)*r02*sj4))+((r00*sj5*x1742))+(((-1.0)*r01*sj5*x1740))+((cj5*r00*x1740))+((cj5*r01*x1742))),-1);
if(!x1751.valid){
continue;
}
CheckValue<IkReal> x1752=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x1740))+((cj5*r00*x1740))+(((-1.0)*r02*x1741))),-1);
if(!x1752.valid){
continue;
}
CheckValue<IkReal> x1753=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x1740))+((cj5*r00*x1740))+(((-1.0)*r02*x1741))),-1);
if(!x1753.valid){
continue;
}
CheckValue<IkReal> x1754=IKPowWithIntegerCheck((((r00*sj5*x1742))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1742))+(((-1.0)*r02*x1741))),-1);
if(!x1754.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r10*x1740*(x1750.value)))+(((-1.0)*r12*x1741*(x1751.value)))+((r10*sj5*x1742*(x1752.value)))+(((-1.0)*x1746))+((cj5*r11*x1742*(x1753.value)))+(((-1.0)*r11*sj5*x1740*(x1754.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1755=((0.6)*cj4);
IkReal x1756=((0.8)*cj4*sj5);
IkReal x1757=((0.8)*cj4*cj5);
CheckValue<IkReal> x1764=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1755))+(((-1.0)*r10*x1757))+((r12*sj4))+(((-1.0)*cj5*r11*x1755))+((r11*x1756))),-1);
if(!x1764.valid){
continue;
}
IkReal x1758=x1764.value;
IkReal x1759=(r01*x1758);
IkReal x1760=((0.8)*cj4*x1758);
IkReal x1761=(cj4*sj5*x1758);
IkReal x1762=(cj4*r00*x1758);
CheckValue<IkReal> x1765=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x1757))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x1756))),-1);
if(!x1765.valid){
continue;
}
IkReal x1763=(x1755*(x1765.value));
CheckValue<IkReal> x1766=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1755))+(((-0.8)*cj4*cj5*r10))+((r12*sj4))+(((-1.0)*cj5*r11*x1755))+((r11*x1756))),-1);
if(!x1766.valid){
continue;
}
CheckValue<IkReal> x1767=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1755))+(((-1.0)*r10*x1757))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*cj5*r11*x1755))),-1);
if(!x1767.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1758))+((cj5*r01*x1763))+((r00*x1757*(x1766.value)))+(((-1.0)*r01*x1756*(x1767.value)))+((r00*sj5*x1763))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1768=(py*pz*r10);
IkReal x1769=(py*pz*r11);
IkReal x1770=(px*pz*r00);
IkReal x1771=(px*pz*r01);
CheckValue<IkReal> x1773 = IKatan2WithCheck(IkReal(((((1.6)*x1770))+(((1.6)*x1768))+(((1.2)*x1771))+(((1.2)*x1769)))),IkReal(((((-1.6)*x1771))+(((-1.6)*x1769))+(((1.2)*x1770))+(((1.2)*x1768)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1773.valid){
continue;
}
IkReal x1772=x1773.value;
j5array[0]=((-1.0)*x1772);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1772)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1774=IKsin(j5);
IkReal x1775=IKcos(j5);
IkReal x1776=(py*r11);
IkReal x1777=(px*r00);
IkReal x1778=(py*r10);
IkReal x1779=(px*r01);
IkReal x1780=((0.8)*x1774);
IkReal x1781=((0.6)*x1774);
IkReal x1782=((0.6)*x1775);
IkReal x1783=((0.8)*x1775);
evalcond[0]=((((-1.0)*x1777*x1781))+(((-1.0)*x1777*x1783))+((x1779*x1780))+(((-1.0)*x1779*x1782))+((x1776*x1780))+(((-1.0)*x1778*x1781))+(((-1.0)*x1778*x1783))+(((-1.0)*x1776*x1782)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1784=(cj4*cj5);
IkReal x1785=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x1784))+(((-1.0)*r11*x1784))+(((1.66666666666667)*r12*sj4))+(((1.33333333333333)*r11*x1785))+(((-1.0)*r10*x1785)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1786=(cj4*sj5);
IkReal x1787=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x1786))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x1787))+((r00*x1786))+((r01*x1787)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1788=((40.4040404040404)*sj4);
IkReal x1789=((30.3030303030303)*sj5);
IkReal x1790=(r12*sj4);
IkReal x1791=((382.614018977655)*pp);
IkReal x1792=(cj5*npy);
IkReal x1793=(cj4*sj5);
IkReal x1794=((30.3030303030303)*cj5);
IkReal x1795=((612.182430364248)*py);
IkReal x1796=(cj4*cj5);
IkReal x1797=((459.136822773186)*py);
IkReal x1798=(pp*x1796);
j0eval[0]=((1.66666666666667)+(((50.5050505050505)*cj4*rxp2_1))+((r10*x1793))+(((-1.0)*x1790*x1791))+(((-40.4040404040404)*npx*sj5))+x1791+(((765.228037955311)*npz*py*sj4))+(((229.568411386593)*r11*x1798))+(((229.568411386593)*pp*r10*x1793))+(((-306.091215182124)*pp*r11*x1793))+(((-1.33333333333333)*r11*x1793))+((npx*x1794))+(((-1.0)*npx*x1795*x1796))+((cj5*rxp0_1*x1788))+((rxp1_1*sj4*x1794))+(((-1.0)*cj4*x1792*x1797))+(((306.091215182124)*r10*x1798))+(((-1.0)*rxp1_1*sj5*x1788))+((r11*x1796))+(((1.33333333333333)*r10*x1796))+(((-1.66666666666667)*x1790))+((npy*x1793*x1795))+(((-40.4040404040404)*x1792))+(((-1.0)*npx*x1793*x1797))+(((-1.0)*npy*x1789))+((rxp0_1*sj4*x1789)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1799=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1799.valid){
continue;
}
CheckValue<IkReal> x1800=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1800.valid){
continue;
}
CheckValue<IkReal> x1801=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1801.valid){
continue;
}
CheckValue<IkReal> x1802=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1802.valid){
continue;
}
CheckValue<IkReal> x1803=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1803.valid){
continue;
}
CheckValue<IkReal> x1804=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1804.valid){
continue;
}
CheckValue<IkReal> x1805=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1805.valid){
continue;
}
CheckValue<IkReal> x1806=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1806.valid){
continue;
}
CheckValue<IkReal> x1807=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1807.valid){
continue;
}
CheckValue<IkReal> x1808=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1808.valid){
continue;
}
CheckValue<IkReal> x1809=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1809.valid){
continue;
}
CheckValue<IkReal> x1810=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1810.valid){
continue;
}
CheckValue<IkReal> x1811=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1811.valid){
continue;
}
CheckValue<IkReal> x1812=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1812.valid){
continue;
}
CheckValue<IkReal> x1813=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1813.valid){
continue;
}
CheckValue<IkReal> x1814=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1814.valid){
continue;
}
CheckValue<IkReal> x1815=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1815.valid){
continue;
}
CheckValue<IkReal> x1816=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1816.valid){
continue;
}
CheckValue<IkReal> x1817=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1817.valid){
continue;
}
CheckValue<IkReal> x1818=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1818.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1799.value)))+(((-1.2)*cj4*npx*px*sj5*(x1800.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1801.value)))+(((0.6)*cj4*cj5*pp*r01*(x1802.value)))+(((0.0026136)*cj4*cj5*r01*(x1803.value)))+(((0.0026136)*cj4*r00*sj5*(x1804.value)))+(((-1.2)*cj4*cj5*npy*px*(x1805.value)))+(((-1.6)*cj4*cj5*npx*px*(x1806.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1807.value)))+(((-0.004356)*r02*sj4*(x1808.value)))+(((0.132)*cj4*rxp2_0*(x1809.value)))+(((-0.0034848)*cj4*r01*sj5*(x1810.value)))+(((0.0034848)*cj4*cj5*r00*(x1811.value)))+(((1.6)*cj4*npy*px*sj5*(x1812.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1813.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1814.value)))+(((2.0)*npz*px*sj4*(x1815.value)))+(((0.6)*cj4*pp*r00*sj5*(x1816.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1817.value)))+(((0.8)*cj4*cj5*pp*r00*(x1818.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1819=((0.8)*cj4);
IkReal x1820=((1.0)*sj4);
IkReal x1821=((0.6)*cj4);
CheckValue<IkReal> x1828=IKPowWithIntegerCheck((((cj5*r01*x1821))+((cj5*r00*x1819))+(((-1.0)*r02*x1820))+((r00*sj5*x1821))+(((-1.0)*r01*sj5*x1819))),-1);
if(!x1828.valid){
continue;
}
IkReal x1822=x1828.value;
IkReal x1823=(sj5*x1822);
IkReal x1824=(r11*x1822);
IkReal x1825=((1.0)*x1822);
IkReal x1826=(r10*x1822);
IkReal x1827=(cj5*x1822);
CheckValue<IkReal> x1829=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1819))+(((-1.0)*r02*x1820))+(((-1.0)*r01*sj5*x1819))),-1);
if(!x1829.valid){
continue;
}
CheckValue<IkReal> x1830=IKPowWithIntegerCheck((((cj5*r01*x1821))+(((-1.0)*r02*x1820))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1821))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1830.valid){
continue;
}
CheckValue<IkReal> x1831=IKPowWithIntegerCheck((((cj5*r01*x1821))+(((-1.0)*r02*x1820))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x1821))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1831.valid){
continue;
}
CheckValue<IkReal> x1832=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1819))+(((-1.0)*r02*x1820))+(((-1.0)*r01*sj5*x1819))),-1);
if(!x1832.valid){
continue;
}
CheckValue<IkReal> x1833=IKPowWithIntegerCheck((((cj5*r01*x1821))+(((-1.0)*r02*sj4))+((cj5*r00*x1819))+((r00*sj5*x1821))+(((-1.0)*r01*sj5*x1819))),-1);
if(!x1833.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x1821*(x1829.value)))+(((-1.0)*cj5*r10*x1819*(x1830.value)))+((r11*sj5*x1819*(x1831.value)))+(((-1.0)*cj5*r11*x1821*(x1832.value)))+((r12*x1820*(x1833.value)))+x1825))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1834=((0.6)*cj4);
IkReal x1835=((0.8)*cj4*sj5);
IkReal x1836=((0.8)*cj4*cj5);
CheckValue<IkReal> x1843=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1834))+(((-1.0)*r10*x1836))+(((-1.0)*cj5*r11*x1834))+((r11*x1835))+((r12*sj4))),-1);
if(!x1843.valid){
continue;
}
IkReal x1837=x1843.value;
IkReal x1838=(r01*x1837);
IkReal x1839=((0.8)*cj4*x1837);
IkReal x1840=(cj4*sj5*x1837);
IkReal x1841=(cj4*r00*x1837);
CheckValue<IkReal> x1844=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x1836))+((r11*x1835))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1844.valid){
continue;
}
IkReal x1842=(x1834*(x1844.value));
CheckValue<IkReal> x1845=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x1834))+(((-1.0)*r10*x1836))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x1834))+((r12*sj4))),-1);
if(!x1845.valid){
continue;
}
CheckValue<IkReal> x1846=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x1834))+(((-1.0)*cj5*r11*x1834))+((r11*x1835))+((r12*sj4))),-1);
if(!x1846.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1837))+((r00*sj5*x1842))+(((-1.0)*r01*x1835*(x1845.value)))+((r00*x1836*(x1846.value)))+((cj5*r01*x1842))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1847=(py*r10);
IkReal x1848=(px*r01);
IkReal x1849=(px*r00);
IkReal x1850=(py*r11);
CheckValue<IkReal> x1852 = IKatan2WithCheck(IkReal(((((-0.6)*x1848))+(((-0.8)*x1847))+(((-0.8)*x1849))+(((-0.6)*x1850)))),IkReal(((((-0.6)*x1849))+(((-0.6)*x1847))+(((0.8)*x1850))+(((0.8)*x1848)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1852.valid){
continue;
}
IkReal x1851=x1852.value;
j5array[0]=((-1.0)*x1851);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x1851)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1853=IKcos(j5);
IkReal x1854=IKsin(j5);
IkReal x1855=((1.6)*py);
IkReal x1856=(px*r01);
IkReal x1857=((1.2)*py);
IkReal x1858=(px*r00);
IkReal x1859=(pz*x1853);
IkReal x1860=(pz*x1854);
evalcond[0]=((((-1.0)*r11*x1855*x1860))+((r10*x1857*x1860))+(((1.2)*x1856*x1859))+(((1.6)*x1858*x1859))+(((1.2)*x1858*x1860))+((r10*x1855*x1859))+((r11*x1857*x1859))+(((-1.6)*x1856*x1860)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1861=(cj4*cj5);
IkReal x1862=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x1861))+(((-1.33333333333333)*r10*x1861))+(((1.33333333333333)*r11*x1862))+(((-1.0)*r10*x1862)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1863=(cj4*sj5);
IkReal x1864=(cj4*cj5);
j0eval[0]=((((1.33333333333333)*r00*x1864))+(((-1.66666666666667)*r02*sj4))+((r01*x1864))+((r00*x1863))+(((-1.33333333333333)*r01*x1863)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1865=((40.4040404040404)*sj4);
IkReal x1866=((30.3030303030303)*sj5);
IkReal x1867=(r12*sj4);
IkReal x1868=((382.614018977655)*pp);
IkReal x1869=(cj5*npy);
IkReal x1870=(cj4*sj5);
IkReal x1871=((30.3030303030303)*cj5);
IkReal x1872=((612.182430364248)*py);
IkReal x1873=(cj4*cj5);
IkReal x1874=((459.136822773186)*py);
IkReal x1875=(pp*x1873);
j0eval[0]=((1.66666666666667)+(((-1.0)*cj4*x1869*x1874))+(((50.5050505050505)*cj4*rxp2_1))+((npx*x1871))+(((-40.4040404040404)*x1869))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((229.568411386593)*r11*x1875))+(((-1.0)*x1867*x1868))+(((229.568411386593)*pp*r10*x1870))+(((-1.0)*npy*x1866))+(((-1.66666666666667)*x1867))+((npy*x1870*x1872))+(((-1.0)*npx*x1872*x1873))+x1868+((r10*x1870))+((rxp0_1*sj4*x1866))+(((-1.0)*npx*x1870*x1874))+(((-306.091215182124)*pp*r11*x1870))+(((1.33333333333333)*r10*x1873))+(((-1.33333333333333)*r11*x1870))+((rxp1_1*sj4*x1871))+(((-1.0)*rxp1_1*sj5*x1865))+(((306.091215182124)*r10*x1875))+((cj5*rxp0_1*x1865))+((r11*x1873)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1876=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1876.valid){
continue;
}
CheckValue<IkReal> x1877=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1877.valid){
continue;
}
CheckValue<IkReal> x1878=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1878.valid){
continue;
}
CheckValue<IkReal> x1879=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1879.valid){
continue;
}
CheckValue<IkReal> x1880=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1880.valid){
continue;
}
CheckValue<IkReal> x1881=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1881.valid){
continue;
}
CheckValue<IkReal> x1882=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1882.valid){
continue;
}
CheckValue<IkReal> x1883=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1883.valid){
continue;
}
CheckValue<IkReal> x1884=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1884.valid){
continue;
}
CheckValue<IkReal> x1885=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1885.valid){
continue;
}
CheckValue<IkReal> x1886=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1886.valid){
continue;
}
CheckValue<IkReal> x1887=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1887.valid){
continue;
}
CheckValue<IkReal> x1888=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1888.valid){
continue;
}
CheckValue<IkReal> x1889=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1889.valid){
continue;
}
CheckValue<IkReal> x1890=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1890.valid){
continue;
}
CheckValue<IkReal> x1891=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1891.valid){
continue;
}
CheckValue<IkReal> x1892=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1892.valid){
continue;
}
CheckValue<IkReal> x1893=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1893.valid){
continue;
}
CheckValue<IkReal> x1894=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1894.valid){
continue;
}
CheckValue<IkReal> x1895=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1895.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1876.value)))+(((-1.2)*cj4*npx*px*sj5*(x1877.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1878.value)))+(((0.6)*cj4*cj5*pp*r01*(x1879.value)))+(((0.0026136)*cj4*cj5*r01*(x1880.value)))+(((0.0026136)*cj4*r00*sj5*(x1881.value)))+(((-1.2)*cj4*cj5*npy*px*(x1882.value)))+(((-1.6)*cj4*cj5*npx*px*(x1883.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1884.value)))+(((-0.004356)*r02*sj4*(x1885.value)))+(((0.132)*cj4*rxp2_0*(x1886.value)))+(((-0.0034848)*cj4*r01*sj5*(x1887.value)))+(((0.0034848)*cj4*cj5*r00*(x1888.value)))+(((1.6)*cj4*npy*px*sj5*(x1889.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1890.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1891.value)))+(((2.0)*npz*px*sj4*(x1892.value)))+(((0.6)*cj4*pp*r00*sj5*(x1893.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1894.value)))+(((0.8)*cj4*cj5*pp*r00*(x1895.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1896=((0.8)*cj4);
IkReal x1897=((1.0)*sj4);
IkReal x1898=((0.6)*cj4);
CheckValue<IkReal> x1905=IKPowWithIntegerCheck(((((-1.0)*r02*x1897))+(((-1.0)*r01*sj5*x1896))+((cj5*r01*x1898))+((cj5*r00*x1896))+((r00*sj5*x1898))),-1);
if(!x1905.valid){
continue;
}
IkReal x1899=x1905.value;
IkReal x1900=(sj5*x1899);
IkReal x1901=(r11*x1899);
IkReal x1902=((1.0)*x1899);
IkReal x1903=(r10*x1899);
IkReal x1904=(cj5*x1899);
CheckValue<IkReal> x1906=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x1896))+((cj5*r01*x1898))+(((-1.0)*r02*sj4))+((cj5*r00*x1896))+((r00*sj5*x1898))),-1);
if(!x1906.valid){
continue;
}
CheckValue<IkReal> x1907=IKPowWithIntegerCheck(((((-1.0)*r02*x1897))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1896))+((cj5*r00*x1896))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1907.valid){
continue;
}
CheckValue<IkReal> x1908=IKPowWithIntegerCheck(((((-1.0)*r02*x1897))+((cj5*r01*x1898))+((r00*sj5*x1898))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1908.valid){
continue;
}
CheckValue<IkReal> x1909=IKPowWithIntegerCheck(((((-1.0)*r02*x1897))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x1896))+((cj5*r00*x1896))+(((0.6)*cj4*cj5*r01))),-1);
if(!x1909.valid){
continue;
}
CheckValue<IkReal> x1910=IKPowWithIntegerCheck(((((-1.0)*r02*x1897))+((cj5*r01*x1898))+((r00*sj5*x1898))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x1910.valid){
continue;
}
j0array[0]=((-2.0)*(atan((((r12*x1897*(x1906.value)))+(((-1.0)*r10*sj5*x1898*(x1907.value)))+((r11*sj5*x1896*(x1908.value)))+(((-1.0)*cj5*r11*x1898*(x1909.value)))+x1902+(((-1.0)*cj5*r10*x1896*(x1910.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1911=((0.6)*cj4);
IkReal x1912=((0.8)*cj4*sj5);
IkReal x1913=((0.8)*cj4*cj5);
CheckValue<IkReal> x1920=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x1911))+((r11*x1912))+(((-1.0)*r10*x1913))+((r12*sj4))+(((-1.0)*r10*sj5*x1911))),-1);
if(!x1920.valid){
continue;
}
IkReal x1914=x1920.value;
IkReal x1915=(r01*x1914);
IkReal x1916=((0.8)*cj4*x1914);
IkReal x1917=(cj4*sj5*x1914);
IkReal x1918=(cj4*r00*x1914);
CheckValue<IkReal> x1921=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r11*x1912))+(((-1.0)*r10*x1913))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x1921.valid){
continue;
}
IkReal x1919=(x1911*(x1921.value));
CheckValue<IkReal> x1922=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x1911))+((r11*x1912))+((r12*sj4))+(((-1.0)*r10*sj5*x1911))),-1);
if(!x1922.valid){
continue;
}
CheckValue<IkReal> x1923=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x1911))+(((-1.0)*r10*x1913))+((r12*sj4))+(((-1.0)*r10*sj5*x1911))),-1);
if(!x1923.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x1914))+((cj5*r01*x1919))+((r00*x1913*(x1922.value)))+(((-1.0)*r01*x1912*(x1923.value)))+((r00*sj5*x1919))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1924=(npy*r20);
IkReal x1925=(npx*r21);
IkReal x1926=((250.0)*pp);
IkReal x1927=(npx*rxp2_2);
IkReal x1928=(npy*rxp2_2);
CheckValue<IkReal> x1929=IKPowWithIntegerCheck(IKsign(((((-1.089)*x1925))+(((1.089)*x1924))+(((-1.0)*x1925*x1926))+((x1924*x1926)))),-1);
if(!x1929.valid){
continue;
}
CheckValue<IkReal> x1930 = IKatan2WithCheck(IkReal(((((-19.8)*x1928))+(((-26.4)*x1927)))),IkReal(((((19.8)*x1927))+(((-26.4)*x1928)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1930.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1929.value)))+(x1930.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1931=IKcos(j5);
IkReal x1932=IKsin(j5);
IkReal x1933=((0.8)*r21);
IkReal x1934=((0.6)*r20);
IkReal x1935=(pp*x1932);
IkReal x1936=((0.8)*x1931);
IkReal x1937=(npx*x1932);
IkReal x1938=(pz*x1931);
IkReal x1939=(npy*x1932);
IkReal x1940=((0.6)*r21*x1931);
evalcond[0]=((((-1.0)*x1940))+((x1932*x1933))+(((-1.0)*r20*x1936))+(((-1.0)*x1932*x1934)));
evalcond[1]=((((-0.6)*npy*x1931))+(((0.8)*x1939))+(((-1.0)*npx*x1936))+(((-0.6)*x1937)));
evalcond[2]=((((-1.0)*pp*x1940))+(((0.0034848)*r21*x1932))+(((-1.6)*pz*x1939))+(((1.2)*pz*x1937))+(((-0.0026136)*r21*x1931))+(((-1.0)*x1934*x1935))+(((1.6)*npx*x1938))+(((-0.0026136)*r20*x1932))+(((-0.0034848)*r20*x1931))+(((-1.0)*pp*r20*x1936))+((x1933*x1935))+(((-0.132)*rxp2_2))+(((1.2)*npy*x1938)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x1941=(cj4*cj5);
IkReal x1942=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x1941))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x1941))+(((1.33333333333333)*r11*x1942))+(((-1.0)*r10*x1942)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1943=(cj4*sj5);
IkReal x1944=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x1944))+(((-1.33333333333333)*r01*x1943))+((r00*x1943))+((r01*x1944)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x1945=((40.4040404040404)*sj4);
IkReal x1946=((30.3030303030303)*sj5);
IkReal x1947=(r12*sj4);
IkReal x1948=((382.614018977655)*pp);
IkReal x1949=(cj5*npy);
IkReal x1950=(cj4*sj5);
IkReal x1951=((30.3030303030303)*cj5);
IkReal x1952=((612.182430364248)*py);
IkReal x1953=(cj4*cj5);
IkReal x1954=((459.136822773186)*py);
IkReal x1955=(pp*x1953);
j0eval[0]=((1.66666666666667)+(((306.091215182124)*r10*x1955))+((cj5*rxp0_1*x1945))+(((229.568411386593)*r11*x1955))+(((-306.091215182124)*pp*r11*x1950))+(((-1.0)*rxp1_1*sj5*x1945))+(((50.5050505050505)*cj4*rxp2_1))+((rxp0_1*sj4*x1946))+((npx*x1951))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((r11*x1953))+((rxp1_1*sj4*x1951))+(((-40.4040404040404)*x1949))+(((-1.0)*cj4*x1949*x1954))+(((-1.0)*x1947*x1948))+(((-1.0)*npy*x1946))+((r10*x1950))+(((-1.0)*npx*x1952*x1953))+x1948+(((-1.66666666666667)*x1947))+(((-1.33333333333333)*r11*x1950))+(((1.33333333333333)*r10*x1953))+(((-1.0)*npx*x1950*x1954))+(((229.568411386593)*pp*r10*x1950))+((npy*x1950*x1952)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x1956=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1956.valid){
continue;
}
CheckValue<IkReal> x1957=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1957.valid){
continue;
}
CheckValue<IkReal> x1958=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1958.valid){
continue;
}
CheckValue<IkReal> x1959=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1959.valid){
continue;
}
CheckValue<IkReal> x1960=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1960.valid){
continue;
}
CheckValue<IkReal> x1961=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1961.valid){
continue;
}
CheckValue<IkReal> x1962=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1962.valid){
continue;
}
CheckValue<IkReal> x1963=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1963.valid){
continue;
}
CheckValue<IkReal> x1964=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1964.valid){
continue;
}
CheckValue<IkReal> x1965=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1965.valid){
continue;
}
CheckValue<IkReal> x1966=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1966.valid){
continue;
}
CheckValue<IkReal> x1967=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1967.valid){
continue;
}
CheckValue<IkReal> x1968=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1968.valid){
continue;
}
CheckValue<IkReal> x1969=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1969.valid){
continue;
}
CheckValue<IkReal> x1970=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1970.valid){
continue;
}
CheckValue<IkReal> x1971=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1971.valid){
continue;
}
CheckValue<IkReal> x1972=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1972.valid){
continue;
}
CheckValue<IkReal> x1973=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1973.valid){
continue;
}
CheckValue<IkReal> x1974=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1974.valid){
continue;
}
CheckValue<IkReal> x1975=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x1975.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x1956.value)))+(((-1.2)*cj4*npx*px*sj5*(x1957.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x1958.value)))+(((0.6)*cj4*cj5*pp*r01*(x1959.value)))+(((0.0026136)*cj4*cj5*r01*(x1960.value)))+(((0.0026136)*cj4*r00*sj5*(x1961.value)))+(((-1.2)*cj4*cj5*npy*px*(x1962.value)))+(((-1.6)*cj4*cj5*npx*px*(x1963.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x1964.value)))+(((-0.004356)*r02*sj4*(x1965.value)))+(((0.132)*cj4*rxp2_0*(x1966.value)))+(((-0.0034848)*cj4*r01*sj5*(x1967.value)))+(((0.0034848)*cj4*cj5*r00*(x1968.value)))+(((1.6)*cj4*npy*px*sj5*(x1969.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x1970.value)))+(((-0.8)*cj4*pp*r01*sj5*(x1971.value)))+(((2.0)*npz*px*sj4*(x1972.value)))+(((0.6)*cj4*pp*r00*sj5*(x1973.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x1974.value)))+(((0.8)*cj4*cj5*pp*r00*(x1975.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1976=((0.8)*cj4);
IkReal x1977=((1.0)*sj4);
IkReal x1978=((0.6)*cj4);
CheckValue<IkReal> x1985=IKPowWithIntegerCheck(((((-1.0)*r02*x1977))+((r00*sj5*x1978))+((cj5*r00*x1976))+(((-1.0)*r01*sj5*x1976))+((cj5*r01*x1978))),-1);
if(!x1985.valid){
continue;
}
IkReal x1979=x1985.value;
IkReal x1980=(sj5*x1979);
IkReal x1981=(r11*x1979);
IkReal x1982=((1.0)*x1979);
IkReal x1983=(r10*x1979);
IkReal x1984=(cj5*x1979);
CheckValue<IkReal> x1986=IKPowWithIntegerCheck(((((-1.0)*r02*x1977))+((r00*sj5*x1978))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1978))),-1);
if(!x1986.valid){
continue;
}
CheckValue<IkReal> x1987=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1977))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1976))+(((-1.0)*r01*sj5*x1976))),-1);
if(!x1987.valid){
continue;
}
CheckValue<IkReal> x1988=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x1977))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x1976))+(((-1.0)*r01*sj5*x1976))),-1);
if(!x1988.valid){
continue;
}
CheckValue<IkReal> x1989=IKPowWithIntegerCheck(((((-1.0)*r02*x1977))+((r00*sj5*x1978))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x1978))),-1);
if(!x1989.valid){
continue;
}
CheckValue<IkReal> x1990=IKPowWithIntegerCheck(((((-1.0)*r02*sj4))+((r00*sj5*x1978))+((cj5*r00*x1976))+(((-1.0)*r01*sj5*x1976))+((cj5*r01*x1978))),-1);
if(!x1990.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*cj5*r10*x1976*(x1986.value)))+(((-1.0)*cj5*r11*x1978*(x1987.value)))+(((-1.0)*r10*sj5*x1978*(x1988.value)))+((r11*sj5*x1976*(x1989.value)))+x1982+((r12*x1977*(x1990.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1991=((0.6)*cj4);
IkReal x1992=((0.8)*cj4*sj5);
IkReal x1993=((0.8)*cj4*cj5);
CheckValue<IkReal> x2000=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x1993))+((r11*x1992))+(((-1.0)*cj5*r11*x1991))+((r12*sj4))+(((-1.0)*r10*sj5*x1991))),-1);
if(!x2000.valid){
continue;
}
IkReal x1994=x2000.value;
IkReal x1995=(r01*x1994);
IkReal x1996=((0.8)*cj4*x1994);
IkReal x1997=(cj4*sj5*x1994);
IkReal x1998=(cj4*r00*x1994);
CheckValue<IkReal> x2001=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x1993))+((r11*x1992))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2001.valid){
continue;
}
IkReal x1999=(x1991*(x2001.value));
CheckValue<IkReal> x2002=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x1992))+(((-1.0)*cj5*r11*x1991))+((r12*sj4))+(((-1.0)*r10*sj5*x1991))),-1);
if(!x2002.valid){
continue;
}
CheckValue<IkReal> x2003=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x1993))+(((-1.0)*cj5*r11*x1991))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*sj5*x1991))),-1);
if(!x2003.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x1999))+((r00*sj5*x1999))+((r00*x1993*(x2002.value)))+(((-1.0)*r01*x1992*(x2003.value)))+(((-1.0)*r02*sj4*x1994))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2004=((500.0)*pz);
IkReal x2005=(r20*rxp2_2);
IkReal x2006=(r21*rxp2_2);
CheckValue<IkReal> x2007 = IKatan2WithCheck(IkReal(((((-26.4)*x2005))+(((-19.8)*x2006)))),IkReal(((((19.8)*x2005))+(((-26.4)*x2006)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2007.valid){
continue;
}
CheckValue<IkReal> x2008=IKPowWithIntegerCheck(IKsign((((npy*r20*x2004))+(((-1.0)*npx*r21*x2004)))),-1);
if(!x2008.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2007.value)+(((1.5707963267949)*(x2008.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2009=IKcos(j5);
IkReal x2010=IKsin(j5);
IkReal x2011=((0.8)*r21);
IkReal x2012=((0.6)*r20);
IkReal x2013=(pp*x2010);
IkReal x2014=((0.8)*x2009);
IkReal x2015=(npx*x2010);
IkReal x2016=(pz*x2009);
IkReal x2017=(npy*x2010);
IkReal x2018=((0.6)*r21*x2009);
evalcond[0]=((((-1.0)*r20*x2014))+(((-1.0)*x2018))+(((-1.0)*x2010*x2012))+((x2010*x2011)));
evalcond[1]=((((-0.6)*x2015))+(((0.8)*x2017))+(((-0.6)*npy*x2009))+(((-1.0)*npx*x2014)));
evalcond[2]=((((1.2)*npy*x2016))+(((-1.6)*pz*x2017))+(((1.6)*npx*x2016))+(((-0.0026136)*r21*x2009))+((x2011*x2013))+(((0.0034848)*r21*x2010))+(((-1.0)*x2012*x2013))+(((-1.0)*pp*x2018))+(((-0.0026136)*r20*x2010))+(((-0.0034848)*r20*x2009))+(((-0.132)*rxp2_2))+(((-1.0)*pp*r20*x2014))+(((1.2)*pz*x2015)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2019=(cj4*cj5);
IkReal x2020=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x2019))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2019))+(((1.33333333333333)*r11*x2020))+(((-1.0)*r10*x2020)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2021=(cj4*sj5);
IkReal x2022=(cj4*cj5);
j0eval[0]=(((r01*x2022))+((r00*x2021))+(((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x2021))+(((1.33333333333333)*r00*x2022)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2023=((40.4040404040404)*sj4);
IkReal x2024=((30.3030303030303)*sj5);
IkReal x2025=(r12*sj4);
IkReal x2026=((382.614018977655)*pp);
IkReal x2027=(cj5*npy);
IkReal x2028=(cj4*sj5);
IkReal x2029=((30.3030303030303)*cj5);
IkReal x2030=((612.182430364248)*py);
IkReal x2031=(cj4*cj5);
IkReal x2032=((459.136822773186)*py);
IkReal x2033=(pp*x2031);
j0eval[0]=((1.66666666666667)+((npx*x2029))+(((-1.0)*npx*x2028*x2032))+((r10*x2028))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*rxp1_1*sj5*x2023))+(((-40.4040404040404)*npx*sj5))+((rxp0_1*sj4*x2024))+(((-306.091215182124)*pp*r11*x2028))+(((765.228037955311)*npz*py*sj4))+(((-1.33333333333333)*r11*x2028))+((cj5*rxp0_1*x2023))+x2026+(((-40.4040404040404)*x2027))+(((229.568411386593)*r11*x2033))+((rxp1_1*sj4*x2029))+(((-1.66666666666667)*x2025))+(((-1.0)*x2025*x2026))+((npy*x2028*x2030))+(((306.091215182124)*r10*x2033))+(((-1.0)*cj4*x2027*x2032))+(((1.33333333333333)*r10*x2031))+(((-1.0)*npy*x2024))+(((-1.0)*npx*x2030*x2031))+(((229.568411386593)*pp*r10*x2028))+((r11*x2031)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2034=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2034.valid){
continue;
}
CheckValue<IkReal> x2035=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2035.valid){
continue;
}
CheckValue<IkReal> x2036=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2036.valid){
continue;
}
CheckValue<IkReal> x2037=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2037.valid){
continue;
}
CheckValue<IkReal> x2038=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2038.valid){
continue;
}
CheckValue<IkReal> x2039=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2039.valid){
continue;
}
CheckValue<IkReal> x2040=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2040.valid){
continue;
}
CheckValue<IkReal> x2041=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2041.valid){
continue;
}
CheckValue<IkReal> x2042=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2042.valid){
continue;
}
CheckValue<IkReal> x2043=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2043.valid){
continue;
}
CheckValue<IkReal> x2044=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2044.valid){
continue;
}
CheckValue<IkReal> x2045=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2045.valid){
continue;
}
CheckValue<IkReal> x2046=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2046.valid){
continue;
}
CheckValue<IkReal> x2047=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2047.valid){
continue;
}
CheckValue<IkReal> x2048=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2048.valid){
continue;
}
CheckValue<IkReal> x2049=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2049.valid){
continue;
}
CheckValue<IkReal> x2050=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2050.valid){
continue;
}
CheckValue<IkReal> x2051=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2051.valid){
continue;
}
CheckValue<IkReal> x2052=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2052.valid){
continue;
}
CheckValue<IkReal> x2053=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2053.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2034.value)))+(((-1.2)*cj4*npx*px*sj5*(x2035.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2036.value)))+(((0.6)*cj4*cj5*pp*r01*(x2037.value)))+(((0.0026136)*cj4*cj5*r01*(x2038.value)))+(((0.0026136)*cj4*r00*sj5*(x2039.value)))+(((-1.2)*cj4*cj5*npy*px*(x2040.value)))+(((-1.6)*cj4*cj5*npx*px*(x2041.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2042.value)))+(((-0.004356)*r02*sj4*(x2043.value)))+(((0.132)*cj4*rxp2_0*(x2044.value)))+(((-0.0034848)*cj4*r01*sj5*(x2045.value)))+(((0.0034848)*cj4*cj5*r00*(x2046.value)))+(((1.6)*cj4*npy*px*sj5*(x2047.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2048.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2049.value)))+(((2.0)*npz*px*sj4*(x2050.value)))+(((0.6)*cj4*pp*r00*sj5*(x2051.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2052.value)))+(((0.8)*cj4*cj5*pp*r00*(x2053.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2054=((0.8)*cj4);
IkReal x2055=((1.0)*sj4);
IkReal x2056=((0.6)*cj4);
CheckValue<IkReal> x2063=IKPowWithIntegerCheck((((r00*sj5*x2056))+((cj5*r00*x2054))+(((-1.0)*r02*x2055))+((cj5*r01*x2056))+(((-1.0)*r01*sj5*x2054))),-1);
if(!x2063.valid){
continue;
}
IkReal x2057=x2063.value;
IkReal x2058=(sj5*x2057);
IkReal x2059=(r11*x2057);
IkReal x2060=((1.0)*x2057);
IkReal x2061=(r10*x2057);
IkReal x2062=(cj5*x2057);
CheckValue<IkReal> x2064=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x2054))+(((-1.0)*r02*x2055))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2054))),-1);
if(!x2064.valid){
continue;
}
CheckValue<IkReal> x2065=IKPowWithIntegerCheck((((r00*sj5*x2056))+(((-1.0)*r02*x2055))+((cj5*r01*x2056))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2065.valid){
continue;
}
CheckValue<IkReal> x2066=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x2054))+(((-1.0)*r02*x2055))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2054))),-1);
if(!x2066.valid){
continue;
}
CheckValue<IkReal> x2067=IKPowWithIntegerCheck((((r00*sj5*x2056))+(((-1.0)*r02*x2055))+((cj5*r01*x2056))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2067.valid){
continue;
}
CheckValue<IkReal> x2068=IKPowWithIntegerCheck((((r00*sj5*x2056))+((cj5*r00*x2054))+((cj5*r01*x2056))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x2054))),-1);
if(!x2068.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x2056*(x2064.value)))+((r11*sj5*x2054*(x2065.value)))+x2060+(((-1.0)*cj5*r11*x2056*(x2066.value)))+(((-1.0)*cj5*r10*x2054*(x2067.value)))+((r12*x2055*(x2068.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2069=((0.6)*cj4);
IkReal x2070=((0.8)*cj4*sj5);
IkReal x2071=((0.8)*cj4*cj5);
CheckValue<IkReal> x2078=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2071))+(((-1.0)*cj5*r11*x2069))+((r11*x2070))+(((-1.0)*r10*sj5*x2069))+((r12*sj4))),-1);
if(!x2078.valid){
continue;
}
IkReal x2072=x2078.value;
IkReal x2073=(r01*x2072);
IkReal x2074=((0.8)*cj4*x2072);
IkReal x2075=(cj4*sj5*x2072);
IkReal x2076=(cj4*r00*x2072);
CheckValue<IkReal> x2079=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2071))+(((-0.6)*cj4*r10*sj5))+((r11*x2070))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2079.valid){
continue;
}
IkReal x2077=(x2069*(x2079.value));
CheckValue<IkReal> x2080=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2071))+(((-1.0)*cj5*r11*x2069))+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x2069))+((r12*sj4))),-1);
if(!x2080.valid){
continue;
}
CheckValue<IkReal> x2081=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x2069))+((r11*x2070))+(((-1.0)*r10*sj5*x2069))+((r12*sj4))),-1);
if(!x2081.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x2072))+((r00*sj5*x2077))+(((-1.0)*r01*x2070*(x2080.value)))+((r00*x2071*(x2081.value)))+((cj5*r01*x2077))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x2082=(npx*pz*r21);
IkReal x2083=(npy*pz*r20);
j5eval[0]=((((-1.0)*x2083))+x2082);
j5eval[1]=IKsign(((((500.0)*x2082))+(((-500.0)*x2083))));
j5eval[2]=1089.0;
j5eval[3]=rxp2_2;
j5eval[4]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal j5eval[5];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
IkReal x2084=(npx*r21);
IkReal x2085=(npy*r20);
IkReal x2086=((229.568411386593)*pp);
IkReal x2087=((250.0)*pp);
j5eval[0]=((((-1.0)*x2085))+((x2084*x2086))+x2084+(((-1.0)*x2085*x2086)));
j5eval[1]=1089.0;
j5eval[2]=rxp2_2;
j5eval[3]=((npx*npx)+(npy*npy));
j5eval[4]=IKsign(((((-1.089)*x2085))+(((1.089)*x2084))+((x2084*x2087))+(((-1.0)*x2085*x2087))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((npx*npx)+(npy*npy));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
npx=0;
npy=0;
j5eval[0]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[2];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
npx=0;
npy=0;
IkReal x2088=r20*r20;
IkReal x2089=r21*r21;
IkReal x2090=pp*pp;
IkReal x2091=r22*r22;
IkReal x2092=((459.136822773186)*pp);
IkReal x2093=((52701.6555065641)*x2090);
j5eval[0]=(x2088+x2089+((x2088*x2092))+((x2088*x2093))+((x2089*x2093))+((x2089*x2092)));
j5eval[1]=((1.0)+(((-1.0)*x2091*x2093))+(((-1.0)*x2091*x2092))+x2093+x2092+(((-1.0)*x2091)));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2094=(pp*r21);
IkReal x2095=(pp*r20);
IkReal x2096=((((-0.8)*x2094))+(((0.0026136)*r20))+(((-0.0034848)*r21))+(((0.6)*x2095)));
IkReal x2097=((((0.8)*x2095))+(((0.0034848)*r20))+(((0.0026136)*r21))+(((0.6)*x2094)));
CheckValue<IkReal> x2100 = IKatan2WithCheck(IkReal(x2097),IkReal(x2096),IKFAST_ATAN2_MAGTHRESH);
if(!x2100.valid){
continue;
}
IkReal x2098=((1.0)*(x2100.value));
if((((x2096*x2096)+(x2097*x2097))) < -0.00001)
continue;
CheckValue<IkReal> x2101=IKPowWithIntegerCheck(IKabs(IKsqrt(((x2096*x2096)+(x2097*x2097)))),-1);
if(!x2101.valid){
continue;
}
if( (((0.132)*rxp2_2*(x2101.value))) < -1-IKFAST_SINCOS_THRESH || (((0.132)*rxp2_2*(x2101.value))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x2099=IKasin(((0.132)*rxp2_2*(x2101.value)));
j5array[0]=((((-1.0)*x2098))+(((-1.0)*x2099)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2098))+x2099);
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2102=IKcos(j5);
IkReal x2103=IKsin(j5);
evalcond[0]=((((0.6)*r20*x2103))+(((-0.8)*r21*x2103))+(((0.8)*r20*x2102))+(((0.6)*r21*x2102)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2104=(cj4*cj5);
IkReal x2105=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.33333333333333)*r11*x2105))+(((-1.33333333333333)*r10*x2104))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2104))+(((-1.0)*r10*x2105)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2106=(cj4*sj5);
IkReal x2107=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r00*x2106))+(((-1.33333333333333)*r01*x2106))+((r01*x2107))+(((1.33333333333333)*r00*x2107)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2108=((40.4040404040404)*sj4);
IkReal x2109=((30.3030303030303)*sj5);
IkReal x2110=(r12*sj4);
IkReal x2111=((382.614018977655)*pp);
IkReal x2112=(cj5*npy);
IkReal x2113=(cj4*sj5);
IkReal x2114=((30.3030303030303)*cj5);
IkReal x2115=((612.182430364248)*py);
IkReal x2116=(cj4*cj5);
IkReal x2117=((459.136822773186)*py);
IkReal x2118=(pp*x2116);
j0eval[0]=((1.66666666666667)+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*npx*x2115*x2116))+(((-40.4040404040404)*npx*sj5))+(((-1.66666666666667)*x2110))+(((765.228037955311)*npz*py*sj4))+(((306.091215182124)*r10*x2118))+(((-1.0)*npx*x2113*x2117))+x2111+(((1.33333333333333)*r10*x2116))+((rxp1_1*sj4*x2114))+((cj5*rxp0_1*x2108))+(((-1.0)*cj4*x2112*x2117))+((npy*x2113*x2115))+(((-1.0)*rxp1_1*sj5*x2108))+(((-1.0)*npy*x2109))+((rxp0_1*sj4*x2109))+((npx*x2114))+(((-40.4040404040404)*x2112))+(((229.568411386593)*pp*r10*x2113))+(((-1.0)*x2110*x2111))+(((229.568411386593)*r11*x2118))+((r10*x2113))+(((-306.091215182124)*pp*r11*x2113))+(((-1.33333333333333)*r11*x2113))+((r11*x2116)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2119=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2119.valid){
continue;
}
CheckValue<IkReal> x2120=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2120.valid){
continue;
}
CheckValue<IkReal> x2121=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2121.valid){
continue;
}
CheckValue<IkReal> x2122=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2122.valid){
continue;
}
CheckValue<IkReal> x2123=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2123.valid){
continue;
}
CheckValue<IkReal> x2124=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2124.valid){
continue;
}
CheckValue<IkReal> x2125=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2125.valid){
continue;
}
CheckValue<IkReal> x2126=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2126.valid){
continue;
}
CheckValue<IkReal> x2127=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2127.valid){
continue;
}
CheckValue<IkReal> x2128=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2128.valid){
continue;
}
CheckValue<IkReal> x2129=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2129.valid){
continue;
}
CheckValue<IkReal> x2130=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2130.valid){
continue;
}
CheckValue<IkReal> x2131=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2131.valid){
continue;
}
CheckValue<IkReal> x2132=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2132.valid){
continue;
}
CheckValue<IkReal> x2133=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2133.valid){
continue;
}
CheckValue<IkReal> x2134=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2134.valid){
continue;
}
CheckValue<IkReal> x2135=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2135.valid){
continue;
}
CheckValue<IkReal> x2136=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2136.valid){
continue;
}
CheckValue<IkReal> x2137=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2137.valid){
continue;
}
CheckValue<IkReal> x2138=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2138.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2119.value)))+(((-1.2)*cj4*npx*px*sj5*(x2120.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2121.value)))+(((0.6)*cj4*cj5*pp*r01*(x2122.value)))+(((0.0026136)*cj4*cj5*r01*(x2123.value)))+(((0.0026136)*cj4*r00*sj5*(x2124.value)))+(((-1.2)*cj4*cj5*npy*px*(x2125.value)))+(((-1.6)*cj4*cj5*npx*px*(x2126.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2127.value)))+(((-0.004356)*r02*sj4*(x2128.value)))+(((0.132)*cj4*rxp2_0*(x2129.value)))+(((-0.0034848)*cj4*r01*sj5*(x2130.value)))+(((0.0034848)*cj4*cj5*r00*(x2131.value)))+(((1.6)*cj4*npy*px*sj5*(x2132.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2133.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2134.value)))+(((2.0)*npz*px*sj4*(x2135.value)))+(((0.6)*cj4*pp*r00*sj5*(x2136.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2137.value)))+(((0.8)*cj4*cj5*pp*r00*(x2138.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2139=((0.8)*cj4);
IkReal x2140=((1.0)*sj4);
IkReal x2141=((0.6)*cj4);
CheckValue<IkReal> x2148=IKPowWithIntegerCheck(((((-1.0)*r02*x2140))+((cj5*r00*x2139))+((r00*sj5*x2141))+((cj5*r01*x2141))+(((-1.0)*r01*sj5*x2139))),-1);
if(!x2148.valid){
continue;
}
IkReal x2142=x2148.value;
IkReal x2143=(sj5*x2142);
IkReal x2144=(r11*x2142);
IkReal x2145=((1.0)*x2142);
IkReal x2146=(r10*x2142);
IkReal x2147=(cj5*x2142);
CheckValue<IkReal> x2149=IKPowWithIntegerCheck(((((-1.0)*r02*x2140))+((r00*sj5*x2141))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2141))),-1);
if(!x2149.valid){
continue;
}
CheckValue<IkReal> x2150=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2140))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2139))+(((-1.0)*r01*sj5*x2139))),-1);
if(!x2150.valid){
continue;
}
CheckValue<IkReal> x2151=IKPowWithIntegerCheck(((((-1.0)*r02*sj4))+((cj5*r00*x2139))+((r00*sj5*x2141))+((cj5*r01*x2141))+(((-1.0)*r01*sj5*x2139))),-1);
if(!x2151.valid){
continue;
}
CheckValue<IkReal> x2152=IKPowWithIntegerCheck(((((-1.0)*r02*x2140))+((r00*sj5*x2141))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2141))),-1);
if(!x2152.valid){
continue;
}
CheckValue<IkReal> x2153=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2140))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2139))+(((-1.0)*r01*sj5*x2139))),-1);
if(!x2153.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r10*x2139*(x2149.value)))+((r10*sj5*x2141*(x2150.value)))+(((-1.0)*x2145))+(((-1.0)*r12*x2140*(x2151.value)))+(((-1.0)*r11*sj5*x2139*(x2152.value)))+((cj5*r11*x2141*(x2153.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2154=((0.6)*cj4);
IkReal x2155=((0.8)*cj4*sj5);
IkReal x2156=((0.8)*cj4*cj5);
CheckValue<IkReal> x2163=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2154))+(((-1.0)*cj5*r11*x2154))+((r12*sj4))+(((-1.0)*r10*x2156))+((r11*x2155))),-1);
if(!x2163.valid){
continue;
}
IkReal x2157=x2163.value;
IkReal x2158=(r01*x2157);
IkReal x2159=((0.8)*cj4*x2157);
IkReal x2160=(cj4*sj5*x2157);
IkReal x2161=(cj4*r00*x2157);
CheckValue<IkReal> x2164=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-1.0)*r10*x2156))+(((-0.6)*cj4*cj5*r11))+((r11*x2155))),-1);
if(!x2164.valid){
continue;
}
IkReal x2162=(x2154*(x2164.value));
CheckValue<IkReal> x2165=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2154))+(((-1.0)*cj5*r11*x2154))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*x2156))),-1);
if(!x2165.valid){
continue;
}
CheckValue<IkReal> x2166=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2154))+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x2154))+((r12*sj4))+((r11*x2155))),-1);
if(!x2166.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x2155*(x2165.value)))+((r00*sj5*x2162))+((r00*x2156*(x2166.value)))+(((-1.0)*r02*sj4*x2157))+((cj5*r01*x2162))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x2168 = IKatan2WithCheck(IkReal(((((0.6)*r21))+(((0.8)*r20)))),IkReal(((((-0.8)*r21))+(((0.6)*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2168.valid){
continue;
}
IkReal x2167=x2168.value;
j5array[0]=((-1.0)*x2167);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2167)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2169=IKsin(j5);
IkReal x2170=IKcos(j5);
IkReal x2171=(pp*x2169);
IkReal x2172=(r21*x2170);
IkReal x2173=(r20*x2170);
evalcond[0]=((((-0.0034848)*r21*x2169))+(((0.0026136)*r20*x2169))+(((0.132)*rxp2_2))+(((0.6)*pp*x2172))+(((-0.8)*r21*x2171))+(((0.0026136)*x2172))+(((0.0034848)*x2173))+(((0.8)*pp*x2173))+(((0.6)*r20*x2171)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2174=(cj4*cj5);
IkReal x2175=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x2174))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2174))+(((-1.0)*r10*x2175))+(((1.33333333333333)*r11*x2175)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2176=(cj4*sj5);
IkReal x2177=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x2176))+((r01*x2177))+((r00*x2176))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x2177)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2178=((40.4040404040404)*sj4);
IkReal x2179=((30.3030303030303)*sj5);
IkReal x2180=(r12*sj4);
IkReal x2181=((382.614018977655)*pp);
IkReal x2182=(cj5*npy);
IkReal x2183=(cj4*sj5);
IkReal x2184=((30.3030303030303)*cj5);
IkReal x2185=((612.182430364248)*py);
IkReal x2186=(cj4*cj5);
IkReal x2187=((459.136822773186)*py);
IkReal x2188=(pp*x2186);
j0eval[0]=((1.66666666666667)+((cj5*rxp0_1*x2178))+(((-1.0)*rxp1_1*sj5*x2178))+(((-306.091215182124)*pp*r11*x2183))+(((50.5050505050505)*cj4*rxp2_1))+((npy*x2183*x2185))+((rxp1_1*sj4*x2184))+(((-40.4040404040404)*npx*sj5))+(((-1.0)*x2180*x2181))+(((765.228037955311)*npz*py*sj4))+(((-1.33333333333333)*r11*x2183))+(((229.568411386593)*r11*x2188))+x2181+(((-1.66666666666667)*x2180))+(((-1.0)*cj4*x2182*x2187))+((rxp0_1*sj4*x2179))+(((-1.0)*npx*x2185*x2186))+((r11*x2186))+(((229.568411386593)*pp*r10*x2183))+((npx*x2184))+(((-1.0)*npx*x2183*x2187))+(((-40.4040404040404)*x2182))+(((-1.0)*npy*x2179))+(((1.33333333333333)*r10*x2186))+(((306.091215182124)*r10*x2188))+((r10*x2183)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2189=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2189.valid){
continue;
}
CheckValue<IkReal> x2190=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2190.valid){
continue;
}
CheckValue<IkReal> x2191=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2191.valid){
continue;
}
CheckValue<IkReal> x2192=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2192.valid){
continue;
}
CheckValue<IkReal> x2193=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2193.valid){
continue;
}
CheckValue<IkReal> x2194=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2194.valid){
continue;
}
CheckValue<IkReal> x2195=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2195.valid){
continue;
}
CheckValue<IkReal> x2196=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2196.valid){
continue;
}
CheckValue<IkReal> x2197=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2197.valid){
continue;
}
CheckValue<IkReal> x2198=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2198.valid){
continue;
}
CheckValue<IkReal> x2199=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2199.valid){
continue;
}
CheckValue<IkReal> x2200=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2200.valid){
continue;
}
CheckValue<IkReal> x2201=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2201.valid){
continue;
}
CheckValue<IkReal> x2202=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2202.valid){
continue;
}
CheckValue<IkReal> x2203=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2203.valid){
continue;
}
CheckValue<IkReal> x2204=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2204.valid){
continue;
}
CheckValue<IkReal> x2205=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2205.valid){
continue;
}
CheckValue<IkReal> x2206=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2206.valid){
continue;
}
CheckValue<IkReal> x2207=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2207.valid){
continue;
}
CheckValue<IkReal> x2208=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2208.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2189.value)))+(((-1.2)*cj4*npx*px*sj5*(x2190.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2191.value)))+(((0.6)*cj4*cj5*pp*r01*(x2192.value)))+(((0.0026136)*cj4*cj5*r01*(x2193.value)))+(((0.0026136)*cj4*r00*sj5*(x2194.value)))+(((-1.2)*cj4*cj5*npy*px*(x2195.value)))+(((-1.6)*cj4*cj5*npx*px*(x2196.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2197.value)))+(((-0.004356)*r02*sj4*(x2198.value)))+(((0.132)*cj4*rxp2_0*(x2199.value)))+(((-0.0034848)*cj4*r01*sj5*(x2200.value)))+(((0.0034848)*cj4*cj5*r00*(x2201.value)))+(((1.6)*cj4*npy*px*sj5*(x2202.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2203.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2204.value)))+(((2.0)*npz*px*sj4*(x2205.value)))+(((0.6)*cj4*pp*r00*sj5*(x2206.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2207.value)))+(((0.8)*cj4*cj5*pp*r00*(x2208.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2209=((0.8)*cj4);
IkReal x2210=((1.0)*sj4);
IkReal x2211=((0.6)*cj4);
CheckValue<IkReal> x2218=IKPowWithIntegerCheck((((r00*sj5*x2211))+(((-1.0)*r01*sj5*x2209))+((cj5*r00*x2209))+((cj5*r01*x2211))+(((-1.0)*r02*x2210))),-1);
if(!x2218.valid){
continue;
}
IkReal x2212=x2218.value;
IkReal x2213=(sj5*x2212);
IkReal x2214=(r11*x2212);
IkReal x2215=((1.0)*x2212);
IkReal x2216=(r10*x2212);
IkReal x2217=(cj5*x2212);
CheckValue<IkReal> x2219=IKPowWithIntegerCheck((((r00*sj5*x2211))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2211))+(((-0.8)*cj4*r01*sj5))+(((-1.0)*r02*x2210))),-1);
if(!x2219.valid){
continue;
}
CheckValue<IkReal> x2220=IKPowWithIntegerCheck((((r00*sj5*x2211))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x2209))+((cj5*r00*x2209))+((cj5*r01*x2211))),-1);
if(!x2220.valid){
continue;
}
CheckValue<IkReal> x2221=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2209))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2209))+(((-1.0)*r02*x2210))),-1);
if(!x2221.valid){
continue;
}
CheckValue<IkReal> x2222=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2209))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2209))+(((-1.0)*r02*x2210))),-1);
if(!x2222.valid){
continue;
}
CheckValue<IkReal> x2223=IKPowWithIntegerCheck((((r00*sj5*x2211))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2211))+(((-0.8)*cj4*r01*sj5))+(((-1.0)*r02*x2210))),-1);
if(!x2223.valid){
continue;
}
j0array[0]=((-2.0)*(atan((x2215+((r11*sj5*x2209*(x2219.value)))+((r12*x2210*(x2220.value)))+(((-1.0)*r10*sj5*x2211*(x2221.value)))+(((-1.0)*cj5*r11*x2211*(x2222.value)))+(((-1.0)*cj5*r10*x2209*(x2223.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2224=((0.6)*cj4);
IkReal x2225=((0.8)*cj4*sj5);
IkReal x2226=((0.8)*cj4*cj5);
CheckValue<IkReal> x2233=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2226))+(((-1.0)*r10*sj5*x2224))+(((-1.0)*cj5*r11*x2224))+((r12*sj4))+((r11*x2225))),-1);
if(!x2233.valid){
continue;
}
IkReal x2227=x2233.value;
IkReal x2228=(r01*x2227);
IkReal x2229=((0.8)*cj4*x2227);
IkReal x2230=(cj4*sj5*x2227);
IkReal x2231=(cj4*r00*x2227);
CheckValue<IkReal> x2234=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2226))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x2225))),-1);
if(!x2234.valid){
continue;
}
IkReal x2232=(x2224*(x2234.value));
CheckValue<IkReal> x2235=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x2224))+(((-1.0)*cj5*r11*x2224))+((r12*sj4))+((r11*x2225))),-1);
if(!x2235.valid){
continue;
}
CheckValue<IkReal> x2236=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2226))+(((-1.0)*r10*sj5*x2224))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x2224))+((r12*sj4))),-1);
if(!x2236.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x2232))+((r00*x2226*(x2235.value)))+(((-1.0)*r01*x2225*(x2236.value)))+(((-1.0)*r02*sj4*x2227))+((r00*sj5*x2232))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[5];
IkReal x2237=((-1.0)*py);
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
pz=0;
pp=((px*px)+(py*py));
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(((px*r02))+((py*r12)));
rxp0_0=(r20*x2237);
rxp0_1=(px*r20);
rxp1_0=(r21*x2237);
rxp1_1=(px*r21);
rxp2_0=(r22*x2237);
rxp2_1=(px*r22);
IkReal x2238=px*px;
IkReal x2239=py*py;
IkReal x2240=py*py*py;
IkReal x2241=px*px*px;
IkReal x2242=(r02*x2240);
IkReal x2243=(r12*x2241);
IkReal x2244=(py*r02*x2238);
IkReal x2245=(px*r12*x2239);
j5eval[0]=(rxp2_2+(((-229.568411386593)*x2243))+(((-229.568411386593)*x2245))+(((229.568411386593)*x2242))+(((229.568411386593)*x2244)));
j5eval[1]=1089.0;
j5eval[2]=rxp2_2;
j5eval[3]=(x2239+x2238+(((-1.0)*x2239*(r12*r12)))+(((-2.0)*px*py*r02*r12))+(((-1.0)*x2238*(r02*r02))));
j5eval[4]=IKsign(((((-250.0)*x2245))+(((-250.0)*x2243))+(((1.089)*rxp2_2))+(((250.0)*x2244))+(((250.0)*x2242))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  || IKabs(j5eval[3]) < 0.0000010000000000  || IKabs(j5eval[4]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(px))+(IKabs(py)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
pz=0;
pp=0;
npx=0;
npy=0;
npz=0;
rxp0_0=0;
rxp0_1=0;
rxp1_0=0;
rxp1_1=0;
rxp2_0=0;
rxp2_1=0;
px=0;
py=0;
rxp0_2=0;
rxp1_2=0;
rxp2_2=0;
j5eval[0]=((1.0)+(((-1.0)*(r22*r22))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
CheckValue<IkReal> x2247 = IKatan2WithCheck(IkReal(((((0.6)*r21))+(((0.8)*r20)))),IkReal(((((-0.8)*r21))+(((0.6)*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2247.valid){
continue;
}
IkReal x2246=x2247.value;
j5array[0]=((-1.0)*x2246);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2246)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2248=IKcos(j5);
IkReal x2249=IKsin(j5);
evalcond[0]=((((0.0026136)*r21*x2248))+(((0.0026136)*r20*x2249))+(((0.0034848)*r20*x2248))+(((-0.0034848)*r21*x2249)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2250=(cj4*cj5);
IkReal x2251=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.33333333333333)*r11*x2251))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r10*x2251))+(((-1.0)*r11*x2250))+(((-1.33333333333333)*r10*x2250)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2252=(cj4*sj5);
IkReal x2253=(cj4*cj5);
j0eval[0]=((((1.33333333333333)*r00*x2253))+(((-1.66666666666667)*r02*sj4))+((r00*x2252))+((r01*x2253))+(((-1.33333333333333)*r01*x2252)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2254=((40.4040404040404)*sj4);
IkReal x2255=((30.3030303030303)*sj5);
IkReal x2256=(r12*sj4);
IkReal x2257=((382.614018977655)*pp);
IkReal x2258=(cj5*npy);
IkReal x2259=(cj4*sj5);
IkReal x2260=((30.3030303030303)*cj5);
IkReal x2261=((612.182430364248)*py);
IkReal x2262=(cj4*cj5);
IkReal x2263=((459.136822773186)*py);
IkReal x2264=(pp*x2262);
j0eval[0]=((1.66666666666667)+(((-1.0)*npx*x2261*x2262))+(((1.33333333333333)*r10*x2262))+(((-1.66666666666667)*x2256))+(((50.5050505050505)*cj4*rxp2_1))+((r10*x2259))+x2257+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*npx*x2259*x2263))+(((229.568411386593)*r11*x2264))+(((-1.0)*x2256*x2257))+(((-1.0)*rxp1_1*sj5*x2254))+(((-1.0)*cj4*x2258*x2263))+(((-1.33333333333333)*r11*x2259))+(((-1.0)*npy*x2255))+((r11*x2262))+(((306.091215182124)*r10*x2264))+((rxp1_1*sj4*x2260))+(((229.568411386593)*pp*r10*x2259))+(((-306.091215182124)*pp*r11*x2259))+((npy*x2259*x2261))+(((-40.4040404040404)*x2258))+((cj5*rxp0_1*x2254))+((npx*x2260))+((rxp0_1*sj4*x2255)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2265=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2265.valid){
continue;
}
CheckValue<IkReal> x2266=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2266.valid){
continue;
}
CheckValue<IkReal> x2267=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2267.valid){
continue;
}
CheckValue<IkReal> x2268=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2268.valid){
continue;
}
CheckValue<IkReal> x2269=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2269.valid){
continue;
}
CheckValue<IkReal> x2270=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2270.valid){
continue;
}
CheckValue<IkReal> x2271=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2271.valid){
continue;
}
CheckValue<IkReal> x2272=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2272.valid){
continue;
}
CheckValue<IkReal> x2273=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2273.valid){
continue;
}
CheckValue<IkReal> x2274=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2274.valid){
continue;
}
CheckValue<IkReal> x2275=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2275.valid){
continue;
}
CheckValue<IkReal> x2276=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2276.valid){
continue;
}
CheckValue<IkReal> x2277=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2277.valid){
continue;
}
CheckValue<IkReal> x2278=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2278.valid){
continue;
}
CheckValue<IkReal> x2279=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2279.valid){
continue;
}
CheckValue<IkReal> x2280=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2280.valid){
continue;
}
CheckValue<IkReal> x2281=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2281.valid){
continue;
}
CheckValue<IkReal> x2282=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2282.valid){
continue;
}
CheckValue<IkReal> x2283=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2283.valid){
continue;
}
CheckValue<IkReal> x2284=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2284.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2265.value)))+(((-1.2)*cj4*npx*px*sj5*(x2266.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2267.value)))+(((0.6)*cj4*cj5*pp*r01*(x2268.value)))+(((0.0026136)*cj4*cj5*r01*(x2269.value)))+(((0.0026136)*cj4*r00*sj5*(x2270.value)))+(((-1.2)*cj4*cj5*npy*px*(x2271.value)))+(((-1.6)*cj4*cj5*npx*px*(x2272.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2273.value)))+(((-0.004356)*r02*sj4*(x2274.value)))+(((0.132)*cj4*rxp2_0*(x2275.value)))+(((-0.0034848)*cj4*r01*sj5*(x2276.value)))+(((0.0034848)*cj4*cj5*r00*(x2277.value)))+(((1.6)*cj4*npy*px*sj5*(x2278.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2279.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2280.value)))+(((2.0)*npz*px*sj4*(x2281.value)))+(((0.6)*cj4*pp*r00*sj5*(x2282.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2283.value)))+(((0.8)*cj4*cj5*pp*r00*(x2284.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2285=((0.8)*cj4);
IkReal x2286=((1.0)*sj4);
IkReal x2287=((0.6)*cj4);
CheckValue<IkReal> x2294=IKPowWithIntegerCheck(((((-1.0)*r02*x2286))+((cj5*r00*x2285))+(((-1.0)*r01*sj5*x2285))+((r00*sj5*x2287))+((cj5*r01*x2287))),-1);
if(!x2294.valid){
continue;
}
IkReal x2288=x2294.value;
IkReal x2289=(sj5*x2288);
IkReal x2290=(r11*x2288);
IkReal x2291=((1.0)*x2288);
IkReal x2292=(r10*x2288);
IkReal x2293=(cj5*x2288);
CheckValue<IkReal> x2295=IKPowWithIntegerCheck(((((-1.0)*r02*x2286))+((cj5*r00*x2285))+(((-1.0)*r01*sj5*x2285))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))),-1);
if(!x2295.valid){
continue;
}
CheckValue<IkReal> x2296=IKPowWithIntegerCheck(((((-1.0)*r02*x2286))+((r00*sj5*x2287))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2287))),-1);
if(!x2296.valid){
continue;
}
CheckValue<IkReal> x2297=IKPowWithIntegerCheck(((((-1.0)*r02*x2286))+((r00*sj5*x2287))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2287))),-1);
if(!x2297.valid){
continue;
}
CheckValue<IkReal> x2298=IKPowWithIntegerCheck((((cj5*r00*x2285))+(((-1.0)*r01*sj5*x2285))+((r00*sj5*x2287))+(((-1.0)*r02*sj4))+((cj5*r01*x2287))),-1);
if(!x2298.valid){
continue;
}
CheckValue<IkReal> x2299=IKPowWithIntegerCheck(((((-1.0)*r02*x2286))+((cj5*r00*x2285))+(((-1.0)*r01*sj5*x2285))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))),-1);
if(!x2299.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r10*sj5*x2287*(x2295.value)))+(((-1.0)*r11*sj5*x2285*(x2296.value)))+((cj5*r10*x2285*(x2297.value)))+(((-1.0)*r12*x2286*(x2298.value)))+(((-1.0)*x2291))+((cj5*r11*x2287*(x2299.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2300=((0.6)*cj4);
IkReal x2301=((0.8)*cj4*sj5);
IkReal x2302=((0.8)*cj4*cj5);
CheckValue<IkReal> x2309=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2302))+((r11*x2301))+(((-1.0)*cj5*r11*x2300))+(((-1.0)*r10*sj5*x2300))+((r12*sj4))),-1);
if(!x2309.valid){
continue;
}
IkReal x2303=x2309.value;
IkReal x2304=(r01*x2303);
IkReal x2305=((0.8)*cj4*x2303);
IkReal x2306=(cj4*sj5*x2303);
IkReal x2307=(cj4*r00*x2303);
CheckValue<IkReal> x2310=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2302))+((r11*x2301))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2310.valid){
continue;
}
IkReal x2308=(x2300*(x2310.value));
CheckValue<IkReal> x2311=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2302))+(((-1.0)*cj5*r11*x2300))+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x2300))+((r12*sj4))),-1);
if(!x2311.valid){
continue;
}
CheckValue<IkReal> x2312=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x2301))+(((-1.0)*cj5*r11*x2300))+(((-1.0)*r10*sj5*x2300))+((r12*sj4))),-1);
if(!x2312.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x2301*(x2311.value)))+(((-1.0)*r02*sj4*x2303))+((r00*x2302*(x2312.value)))+((r00*sj5*x2308))+((cj5*r01*x2308))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2313=((250.0)*r12);
IkReal x2314=(py*rxp2_2);
IkReal x2315=((250.0)*r02);
IkReal x2316=(px*r01*rxp2_2);
IkReal x2317=(px*r00*rxp2_2);
CheckValue<IkReal> x2318 = IKatan2WithCheck(IkReal(((((19.8)*x2316))+(((26.4)*r10*x2314))+(((26.4)*x2317))+(((19.8)*r11*x2314)))),IkReal(((((-19.8)*x2317))+(((-19.8)*r10*x2314))+(((26.4)*x2316))+(((26.4)*r11*x2314)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2318.valid){
continue;
}
CheckValue<IkReal> x2319=IKPowWithIntegerCheck(IKsign((((x2315*(py*py*py)))+(((1.089)*rxp2_2))+((py*x2315*(px*px)))+(((-1.0)*px*x2313*(py*py)))+(((-1.0)*x2313*(px*px*px))))),-1);
if(!x2319.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2318.value)+(((1.5707963267949)*(x2319.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2320=IKcos(j5);
IkReal x2321=IKsin(j5);
IkReal x2322=py*py;
IkReal x2323=px*px;
IkReal x2324=(px*r01);
IkReal x2325=(py*r11);
IkReal x2326=(px*r00);
IkReal x2327=(py*r10);
IkReal x2328=((0.8)*x2321);
IkReal x2329=(r21*x2322);
IkReal x2330=(r21*x2323);
IkReal x2331=(r21*x2320);
IkReal x2332=((0.6)*x2320);
IkReal x2333=((0.6)*x2321);
IkReal x2334=((0.8)*x2320);
IkReal x2335=(r20*x2333);
IkReal x2336=(r20*x2334);
evalcond[0]=((((0.6)*x2331))+x2335+x2336+(((-1.0)*r21*x2328)));
evalcond[1]=((((-1.0)*x2324*x2328))+((x2327*x2333))+((x2327*x2334))+((x2324*x2332))+((x2325*x2332))+((x2326*x2333))+((x2326*x2334))+(((-1.0)*x2325*x2328)));
evalcond[2]=((((-1.0)*x2328*x2329))+(((-1.0)*x2328*x2330))+(((0.0026136)*r20*x2321))+(((0.132)*rxp2_2))+((x2329*x2332))+(((-0.0034848)*r21*x2321))+((x2322*x2336))+((x2322*x2335))+(((0.0026136)*x2331))+(((0.0034848)*r20*x2320))+((x2323*x2335))+((x2323*x2336))+((x2330*x2332)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2337=(cj4*cj5);
IkReal x2338=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x2337))+(((-1.0)*r11*x2337))+(((1.33333333333333)*r11*x2338))+(((-1.0)*r10*x2338)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2339=(cj4*sj5);
IkReal x2340=(cj4*cj5);
j0eval[0]=(((r01*x2340))+(((-1.33333333333333)*r01*x2339))+(((-1.66666666666667)*r02*sj4))+((r00*x2339))+(((1.33333333333333)*r00*x2340)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2341=((40.4040404040404)*sj4);
IkReal x2342=((30.3030303030303)*sj5);
IkReal x2343=(r12*sj4);
IkReal x2344=((382.614018977655)*pp);
IkReal x2345=(cj5*npy);
IkReal x2346=(cj4*sj5);
IkReal x2347=((30.3030303030303)*cj5);
IkReal x2348=((612.182430364248)*py);
IkReal x2349=(cj4*cj5);
IkReal x2350=((459.136822773186)*py);
IkReal x2351=(pp*x2349);
j0eval[0]=((1.66666666666667)+(((-40.4040404040404)*x2345))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*npx*x2348*x2349))+((npy*x2346*x2348))+((r10*x2346))+(((-40.4040404040404)*npx*sj5))+(((-1.0)*cj4*x2345*x2350))+(((-306.091215182124)*pp*r11*x2346))+x2344+(((765.228037955311)*npz*py*sj4))+(((-1.0)*rxp1_1*sj5*x2341))+(((-1.0)*npy*x2342))+((rxp1_1*sj4*x2347))+((r11*x2349))+(((306.091215182124)*r10*x2351))+((cj5*rxp0_1*x2341))+(((-1.0)*npx*x2346*x2350))+(((-1.66666666666667)*x2343))+(((-1.33333333333333)*r11*x2346))+((rxp0_1*sj4*x2342))+(((-1.0)*x2343*x2344))+(((229.568411386593)*pp*r10*x2346))+(((229.568411386593)*r11*x2351))+((npx*x2347))+(((1.33333333333333)*r10*x2349)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2352=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2352.valid){
continue;
}
CheckValue<IkReal> x2353=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2353.valid){
continue;
}
CheckValue<IkReal> x2354=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2354.valid){
continue;
}
CheckValue<IkReal> x2355=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2355.valid){
continue;
}
CheckValue<IkReal> x2356=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2356.valid){
continue;
}
CheckValue<IkReal> x2357=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2357.valid){
continue;
}
CheckValue<IkReal> x2358=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2358.valid){
continue;
}
CheckValue<IkReal> x2359=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2359.valid){
continue;
}
CheckValue<IkReal> x2360=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2360.valid){
continue;
}
CheckValue<IkReal> x2361=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2361.valid){
continue;
}
CheckValue<IkReal> x2362=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2362.valid){
continue;
}
CheckValue<IkReal> x2363=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2363.valid){
continue;
}
CheckValue<IkReal> x2364=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2364.valid){
continue;
}
CheckValue<IkReal> x2365=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2365.valid){
continue;
}
CheckValue<IkReal> x2366=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2366.valid){
continue;
}
CheckValue<IkReal> x2367=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2367.valid){
continue;
}
CheckValue<IkReal> x2368=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2368.valid){
continue;
}
CheckValue<IkReal> x2369=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2369.valid){
continue;
}
CheckValue<IkReal> x2370=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2370.valid){
continue;
}
CheckValue<IkReal> x2371=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2371.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2352.value)))+(((-1.2)*cj4*npx*px*sj5*(x2353.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2354.value)))+(((0.6)*cj4*cj5*pp*r01*(x2355.value)))+(((0.0026136)*cj4*cj5*r01*(x2356.value)))+(((0.0026136)*cj4*r00*sj5*(x2357.value)))+(((-1.2)*cj4*cj5*npy*px*(x2358.value)))+(((-1.6)*cj4*cj5*npx*px*(x2359.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2360.value)))+(((-0.004356)*r02*sj4*(x2361.value)))+(((0.132)*cj4*rxp2_0*(x2362.value)))+(((-0.0034848)*cj4*r01*sj5*(x2363.value)))+(((0.0034848)*cj4*cj5*r00*(x2364.value)))+(((1.6)*cj4*npy*px*sj5*(x2365.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2366.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2367.value)))+(((2.0)*npz*px*sj4*(x2368.value)))+(((0.6)*cj4*pp*r00*sj5*(x2369.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2370.value)))+(((0.8)*cj4*cj5*pp*r00*(x2371.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2372=((0.8)*cj4);
IkReal x2373=((1.0)*sj4);
IkReal x2374=((0.6)*cj4);
CheckValue<IkReal> x2381=IKPowWithIntegerCheck(((((-1.0)*r02*x2373))+((cj5*r00*x2372))+((cj5*r01*x2374))+((r00*sj5*x2374))+(((-1.0)*r01*sj5*x2372))),-1);
if(!x2381.valid){
continue;
}
IkReal x2375=x2381.value;
IkReal x2376=(sj5*x2375);
IkReal x2377=(r11*x2375);
IkReal x2378=((1.0)*x2375);
IkReal x2379=(r10*x2375);
IkReal x2380=(cj5*x2375);
CheckValue<IkReal> x2382=IKPowWithIntegerCheck(((((-1.0)*r02*x2373))+(((0.6)*cj4*r00*sj5))+((cj5*r00*x2372))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2372))),-1);
if(!x2382.valid){
continue;
}
CheckValue<IkReal> x2383=IKPowWithIntegerCheck(((((-1.0)*r02*x2373))+((cj5*r01*x2374))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x2374))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2383.valid){
continue;
}
CheckValue<IkReal> x2384=IKPowWithIntegerCheck((((cj5*r00*x2372))+((cj5*r01*x2374))+(((-1.0)*r02*sj4))+((r00*sj5*x2374))+(((-1.0)*r01*sj5*x2372))),-1);
if(!x2384.valid){
continue;
}
CheckValue<IkReal> x2385=IKPowWithIntegerCheck(((((-1.0)*r02*x2373))+(((0.6)*cj4*r00*sj5))+((cj5*r00*x2372))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2372))),-1);
if(!x2385.valid){
continue;
}
CheckValue<IkReal> x2386=IKPowWithIntegerCheck(((((-1.0)*r02*x2373))+((cj5*r01*x2374))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x2374))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2386.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x2374*(x2382.value)))+((r11*sj5*x2372*(x2383.value)))+x2378+((r12*x2373*(x2384.value)))+(((-1.0)*cj5*r11*x2374*(x2385.value)))+(((-1.0)*cj5*r10*x2372*(x2386.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2387=((0.6)*cj4);
IkReal x2388=((0.8)*cj4*sj5);
IkReal x2389=((0.8)*cj4*cj5);
CheckValue<IkReal> x2396=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2389))+(((-1.0)*r10*sj5*x2387))+(((-1.0)*cj5*r11*x2387))+((r12*sj4))+((r11*x2388))),-1);
if(!x2396.valid){
continue;
}
IkReal x2390=x2396.value;
IkReal x2391=(r01*x2390);
IkReal x2392=((0.8)*cj4*x2390);
IkReal x2393=(cj4*sj5*x2390);
IkReal x2394=(cj4*r00*x2390);
CheckValue<IkReal> x2397=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2389))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x2388))),-1);
if(!x2397.valid){
continue;
}
IkReal x2395=(x2387*(x2397.value));
CheckValue<IkReal> x2398=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2389))+(((-1.0)*r10*sj5*x2387))+(((-1.0)*cj5*r11*x2387))+(((0.8)*cj4*r11*sj5))+((r12*sj4))),-1);
if(!x2398.valid){
continue;
}
CheckValue<IkReal> x2399=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x2387))+(((-1.0)*cj5*r11*x2387))+((r12*sj4))+((r11*x2388))),-1);
if(!x2399.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x2388*(x2398.value)))+((r00*x2389*(x2399.value)))+((r00*sj5*x2395))+((cj5*r01*x2395))+(((-1.0)*r02*sj4*x2390))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
IkReal x2400=((-1.0)*pz);
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x2400);
rxp1_0=(pz*r11);
rxp1_1=(r01*x2400);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=(pp+(((-1.0)*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal j5eval[3];
IkReal x2401=((-1.0)*pz);
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x2401);
rxp1_0=(pz*r11);
rxp1_1=(r01*x2401);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=4.0;
j5eval[1]=pz;
j5eval[2]=(pp+(((-1.0)*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  || IKabs(j5eval[2]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=IKabs(pz);
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[1];
sj4=0;
cj4=-1.0;
j4=3.14159265358979;
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=0;
rxp0_0=0;
rxp0_1=0;
rxp1_0=0;
rxp1_1=0;
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
pz=0;
pp=((px*px)+(py*py));
j5eval[0]=((px*px)+(py*py));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
continue; // 3 cases reached

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2402=((0.8)*py);
IkReal x2403=(px*r01);
IkReal x2404=(px*r00);
IkReal x2405=((0.6)*py);
CheckValue<IkReal> x2407 = IKatan2WithCheck(IkReal((((r10*x2402))+(((0.6)*x2403))+((r11*x2405))+(((0.8)*x2404)))),IkReal((((r10*x2405))+(((0.6)*x2404))+(((-0.8)*x2403))+(((-1.0)*r11*x2402)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2407.valid){
continue;
}
IkReal x2406=x2407.value;
j5array[0]=((-1.0)*x2406);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2406)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x2408=(cj4*cj5);
IkReal x2409=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2408))+(((-1.33333333333333)*r10*x2408))+(((1.33333333333333)*r11*x2409))+(((-1.0)*r10*x2409)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2410=(cj4*sj5);
IkReal x2411=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r01*x2411))+((r00*x2410))+(((-1.33333333333333)*r01*x2410))+(((1.33333333333333)*r00*x2411)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2412=((40.4040404040404)*sj4);
IkReal x2413=((30.3030303030303)*sj5);
IkReal x2414=(r12*sj4);
IkReal x2415=((382.614018977655)*pp);
IkReal x2416=(cj5*npy);
IkReal x2417=(cj4*sj5);
IkReal x2418=((30.3030303030303)*cj5);
IkReal x2419=((612.182430364248)*py);
IkReal x2420=(cj4*cj5);
IkReal x2421=((459.136822773186)*py);
IkReal x2422=(pp*x2420);
j0eval[0]=((1.66666666666667)+((cj5*rxp0_1*x2412))+x2415+(((50.5050505050505)*cj4*rxp2_1))+(((-1.66666666666667)*x2414))+((r10*x2417))+(((-1.33333333333333)*r11*x2417))+(((-40.4040404040404)*npx*sj5))+(((306.091215182124)*r10*x2422))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*x2414*x2415))+(((-306.091215182124)*pp*r11*x2417))+((rxp1_1*sj4*x2418))+((npx*x2418))+(((229.568411386593)*pp*r10*x2417))+((npy*x2417*x2419))+((r11*x2420))+((rxp0_1*sj4*x2413))+(((-1.0)*npx*x2419*x2420))+(((229.568411386593)*r11*x2422))+(((-1.0)*npx*x2417*x2421))+(((-1.0)*cj4*x2416*x2421))+(((-1.0)*npy*x2413))+(((1.33333333333333)*r10*x2420))+(((-40.4040404040404)*x2416))+(((-1.0)*rxp1_1*sj5*x2412)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2423=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2423.valid){
continue;
}
CheckValue<IkReal> x2424=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2424.valid){
continue;
}
CheckValue<IkReal> x2425=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2425.valid){
continue;
}
CheckValue<IkReal> x2426=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2426.valid){
continue;
}
CheckValue<IkReal> x2427=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2427.valid){
continue;
}
CheckValue<IkReal> x2428=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2428.valid){
continue;
}
CheckValue<IkReal> x2429=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2429.valid){
continue;
}
CheckValue<IkReal> x2430=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2430.valid){
continue;
}
CheckValue<IkReal> x2431=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2431.valid){
continue;
}
CheckValue<IkReal> x2432=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2432.valid){
continue;
}
CheckValue<IkReal> x2433=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2433.valid){
continue;
}
CheckValue<IkReal> x2434=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2434.valid){
continue;
}
CheckValue<IkReal> x2435=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2435.valid){
continue;
}
CheckValue<IkReal> x2436=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2436.valid){
continue;
}
CheckValue<IkReal> x2437=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2437.valid){
continue;
}
CheckValue<IkReal> x2438=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2438.valid){
continue;
}
CheckValue<IkReal> x2439=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2439.valid){
continue;
}
CheckValue<IkReal> x2440=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2440.valid){
continue;
}
CheckValue<IkReal> x2441=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2441.valid){
continue;
}
CheckValue<IkReal> x2442=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2442.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2423.value)))+(((-1.2)*cj4*npx*px*sj5*(x2424.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2425.value)))+(((0.6)*cj4*cj5*pp*r01*(x2426.value)))+(((0.0026136)*cj4*cj5*r01*(x2427.value)))+(((0.0026136)*cj4*r00*sj5*(x2428.value)))+(((-1.2)*cj4*cj5*npy*px*(x2429.value)))+(((-1.6)*cj4*cj5*npx*px*(x2430.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2431.value)))+(((-0.004356)*r02*sj4*(x2432.value)))+(((0.132)*cj4*rxp2_0*(x2433.value)))+(((-0.0034848)*cj4*r01*sj5*(x2434.value)))+(((0.0034848)*cj4*cj5*r00*(x2435.value)))+(((1.6)*cj4*npy*px*sj5*(x2436.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2437.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2438.value)))+(((2.0)*npz*px*sj4*(x2439.value)))+(((0.6)*cj4*pp*r00*sj5*(x2440.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2441.value)))+(((0.8)*cj4*cj5*pp*r00*(x2442.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2443=((0.8)*cj4);
IkReal x2444=((1.0)*sj4);
IkReal x2445=((0.6)*cj4);
CheckValue<IkReal> x2452=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x2443))+((r00*sj5*x2445))+((cj5*r00*x2443))+((cj5*r01*x2445))+(((-1.0)*r02*x2444))),-1);
if(!x2452.valid){
continue;
}
IkReal x2446=x2452.value;
IkReal x2447=(sj5*x2446);
IkReal x2448=(r11*x2446);
IkReal x2449=((1.0)*x2446);
IkReal x2450=(r10*x2446);
IkReal x2451=(cj5*x2446);
CheckValue<IkReal> x2453=IKPowWithIntegerCheck((((r00*sj5*x2445))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2445))+(((-1.0)*r02*x2444))),-1);
if(!x2453.valid){
continue;
}
CheckValue<IkReal> x2454=IKPowWithIntegerCheck((((r00*sj5*x2445))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2445))+(((-1.0)*r02*x2444))),-1);
if(!x2454.valid){
continue;
}
CheckValue<IkReal> x2455=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2443))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2443))+(((-1.0)*r02*x2444))),-1);
if(!x2455.valid){
continue;
}
CheckValue<IkReal> x2456=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2443))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2443))+(((-1.0)*r02*x2444))),-1);
if(!x2456.valid){
continue;
}
CheckValue<IkReal> x2457=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x2443))+((r00*sj5*x2445))+(((-1.0)*r02*sj4))+((cj5*r00*x2443))+((cj5*r01*x2445))),-1);
if(!x2457.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r10*x2443*(x2453.value)))+(((-1.0)*r11*sj5*x2443*(x2454.value)))+((r10*sj5*x2445*(x2455.value)))+((cj5*r11*x2445*(x2456.value)))+(((-1.0)*r12*x2444*(x2457.value)))+(((-1.0)*x2449))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2458=((0.6)*cj4);
IkReal x2459=((0.8)*cj4*sj5);
IkReal x2460=((0.8)*cj4*cj5);
CheckValue<IkReal> x2467=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2458))+((r12*sj4))+(((-1.0)*cj5*r11*x2458))+((r11*x2459))+(((-1.0)*r10*x2460))),-1);
if(!x2467.valid){
continue;
}
IkReal x2461=x2467.value;
IkReal x2462=(r01*x2461);
IkReal x2463=((0.8)*cj4*x2461);
IkReal x2464=(cj4*sj5*x2461);
IkReal x2465=(cj4*r00*x2461);
CheckValue<IkReal> x2468=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+((r11*x2459))+(((-0.6)*cj4*cj5*r11))+(((-1.0)*r10*x2460))),-1);
if(!x2468.valid){
continue;
}
IkReal x2466=(x2458*(x2468.value));
CheckValue<IkReal> x2469=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x2458))+((r12*sj4))+(((-1.0)*cj5*r11*x2458))+((r11*x2459))),-1);
if(!x2469.valid){
continue;
}
CheckValue<IkReal> x2470=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x2458))+((r12*sj4))+(((-1.0)*cj5*r11*x2458))+(((-1.0)*r10*x2460))),-1);
if(!x2470.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x2466))+(((-1.0)*r02*sj4*x2461))+((r00*sj5*x2466))+((r00*x2460*(x2469.value)))+(((-1.0)*r01*x2459*(x2470.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2471=((1.2)*pz);
IkReal x2472=(px*r00);
IkReal x2473=(py*r10);
IkReal x2474=(py*r11);
IkReal x2475=((1.6)*pz);
IkReal x2476=(px*r01);
CheckValue<IkReal> x2478 = IKatan2WithCheck(IkReal(((((-1.0)*x2472*x2475))+(((-1.0)*x2473*x2475))+(((-1.0)*x2471*x2474))+(((-1.0)*x2471*x2476)))),IkReal(((((-1.0)*x2471*x2473))+(((-1.0)*x2471*x2472))+((x2474*x2475))+((x2475*x2476)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2478.valid){
continue;
}
IkReal x2477=x2478.value;
j5array[0]=((-1.0)*x2477);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2477)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2479=IKcos(j5);
IkReal x2480=IKsin(j5);
IkReal x2481=(py*r11);
IkReal x2482=(px*r00);
IkReal x2483=(py*r10);
IkReal x2484=(px*r01);
IkReal x2485=((0.8)*x2480);
IkReal x2486=((0.6)*x2480);
IkReal x2487=((0.6)*x2479);
IkReal x2488=((0.8)*x2479);
evalcond[0]=(((x2482*x2486))+((x2482*x2488))+((x2481*x2487))+((x2483*x2486))+((x2483*x2488))+((x2484*x2487))+(((-1.0)*x2481*x2485))+(((-1.0)*x2484*x2485)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2489=(cj4*cj5);
IkReal x2490=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x2489))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r10*x2490))+(((1.33333333333333)*r11*x2490))+(((-1.0)*r11*x2489)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2491=(cj4*sj5);
IkReal x2492=(cj4*cj5);
j0eval[0]=(((r00*x2491))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x2492))+((r01*x2492))+(((-1.33333333333333)*r01*x2491)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2493=((40.4040404040404)*sj4);
IkReal x2494=((30.3030303030303)*sj5);
IkReal x2495=(r12*sj4);
IkReal x2496=((382.614018977655)*pp);
IkReal x2497=(cj5*npy);
IkReal x2498=(cj4*sj5);
IkReal x2499=((30.3030303030303)*cj5);
IkReal x2500=((612.182430364248)*py);
IkReal x2501=(cj4*cj5);
IkReal x2502=((459.136822773186)*py);
IkReal x2503=(pp*x2501);
j0eval[0]=((1.66666666666667)+((npx*x2499))+(((306.091215182124)*r10*x2503))+((cj5*rxp0_1*x2493))+(((-1.0)*cj4*x2497*x2502))+(((-1.0)*x2495*x2496))+(((-1.66666666666667)*x2495))+x2496+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*npx*sj5))+((npy*x2498*x2500))+(((765.228037955311)*npz*py*sj4))+(((1.33333333333333)*r10*x2501))+(((-1.0)*npy*x2494))+(((229.568411386593)*r11*x2503))+(((229.568411386593)*pp*r10*x2498))+(((-306.091215182124)*pp*r11*x2498))+(((-1.33333333333333)*r11*x2498))+((rxp0_1*sj4*x2494))+(((-1.0)*npx*x2498*x2502))+(((-40.4040404040404)*x2497))+(((-1.0)*rxp1_1*sj5*x2493))+((rxp1_1*sj4*x2499))+(((-1.0)*npx*x2500*x2501))+((r11*x2501))+((r10*x2498)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2504=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2504.valid){
continue;
}
CheckValue<IkReal> x2505=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2505.valid){
continue;
}
CheckValue<IkReal> x2506=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2506.valid){
continue;
}
CheckValue<IkReal> x2507=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2507.valid){
continue;
}
CheckValue<IkReal> x2508=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2508.valid){
continue;
}
CheckValue<IkReal> x2509=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2509.valid){
continue;
}
CheckValue<IkReal> x2510=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2510.valid){
continue;
}
CheckValue<IkReal> x2511=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2511.valid){
continue;
}
CheckValue<IkReal> x2512=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2512.valid){
continue;
}
CheckValue<IkReal> x2513=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2513.valid){
continue;
}
CheckValue<IkReal> x2514=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2514.valid){
continue;
}
CheckValue<IkReal> x2515=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2515.valid){
continue;
}
CheckValue<IkReal> x2516=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2516.valid){
continue;
}
CheckValue<IkReal> x2517=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2517.valid){
continue;
}
CheckValue<IkReal> x2518=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2518.valid){
continue;
}
CheckValue<IkReal> x2519=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2519.valid){
continue;
}
CheckValue<IkReal> x2520=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2520.valid){
continue;
}
CheckValue<IkReal> x2521=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2521.valid){
continue;
}
CheckValue<IkReal> x2522=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2522.valid){
continue;
}
CheckValue<IkReal> x2523=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2523.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2504.value)))+(((-1.2)*cj4*npx*px*sj5*(x2505.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2506.value)))+(((0.6)*cj4*cj5*pp*r01*(x2507.value)))+(((0.0026136)*cj4*cj5*r01*(x2508.value)))+(((0.0026136)*cj4*r00*sj5*(x2509.value)))+(((-1.2)*cj4*cj5*npy*px*(x2510.value)))+(((-1.6)*cj4*cj5*npx*px*(x2511.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2512.value)))+(((-0.004356)*r02*sj4*(x2513.value)))+(((0.132)*cj4*rxp2_0*(x2514.value)))+(((-0.0034848)*cj4*r01*sj5*(x2515.value)))+(((0.0034848)*cj4*cj5*r00*(x2516.value)))+(((1.6)*cj4*npy*px*sj5*(x2517.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2518.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2519.value)))+(((2.0)*npz*px*sj4*(x2520.value)))+(((0.6)*cj4*pp*r00*sj5*(x2521.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2522.value)))+(((0.8)*cj4*cj5*pp*r00*(x2523.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2524=((0.8)*cj4);
IkReal x2525=((1.0)*sj4);
IkReal x2526=((0.6)*cj4);
CheckValue<IkReal> x2533=IKPowWithIntegerCheck((((cj5*r00*x2524))+((cj5*r01*x2526))+((r00*sj5*x2526))+(((-1.0)*r01*sj5*x2524))+(((-1.0)*r02*x2525))),-1);
if(!x2533.valid){
continue;
}
IkReal x2527=x2533.value;
IkReal x2528=(sj5*x2527);
IkReal x2529=(r11*x2527);
IkReal x2530=((1.0)*x2527);
IkReal x2531=(r10*x2527);
IkReal x2532=(cj5*x2527);
CheckValue<IkReal> x2534=IKPowWithIntegerCheck((((cj5*r00*x2524))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2524))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x2525))),-1);
if(!x2534.valid){
continue;
}
CheckValue<IkReal> x2535=IKPowWithIntegerCheck((((cj5*r00*x2524))+((cj5*r01*x2526))+((r00*sj5*x2526))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x2524))),-1);
if(!x2535.valid){
continue;
}
CheckValue<IkReal> x2536=IKPowWithIntegerCheck((((cj5*r01*x2526))+((r00*sj5*x2526))+(((-1.0)*r02*x2525))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2536.valid){
continue;
}
CheckValue<IkReal> x2537=IKPowWithIntegerCheck((((cj5*r00*x2524))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2524))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x2525))),-1);
if(!x2537.valid){
continue;
}
CheckValue<IkReal> x2538=IKPowWithIntegerCheck((((cj5*r01*x2526))+((r00*sj5*x2526))+(((-1.0)*r02*x2525))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2538.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x2526*(x2534.value)))+x2530+((r12*x2525*(x2535.value)))+(((-1.0)*cj5*r10*x2524*(x2536.value)))+(((-1.0)*cj5*r11*x2526*(x2537.value)))+((r11*sj5*x2524*(x2538.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2539=((0.6)*cj4);
IkReal x2540=((0.8)*cj4*sj5);
IkReal x2541=((0.8)*cj4*cj5);
CheckValue<IkReal> x2548=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2541))+(((-1.0)*r10*sj5*x2539))+((r11*x2540))+((r12*sj4))+(((-1.0)*cj5*r11*x2539))),-1);
if(!x2548.valid){
continue;
}
IkReal x2542=x2548.value;
IkReal x2543=(r01*x2542);
IkReal x2544=((0.8)*cj4*x2542);
IkReal x2545=(cj4*sj5*x2542);
IkReal x2546=(cj4*r00*x2542);
CheckValue<IkReal> x2549=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2541))+((r11*x2540))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2549.valid){
continue;
}
IkReal x2547=(x2539*(x2549.value));
CheckValue<IkReal> x2550=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x2539))+((r11*x2540))+((r12*sj4))+(((-1.0)*cj5*r11*x2539))),-1);
if(!x2550.valid){
continue;
}
CheckValue<IkReal> x2551=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2541))+(((-1.0)*r10*sj5*x2539))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*cj5*r11*x2539))),-1);
if(!x2551.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*x2541*(x2550.value)))+(((-1.0)*r02*sj4*x2542))+((r00*sj5*x2547))+(((-1.0)*r01*x2540*(x2551.value)))+((cj5*r01*x2547))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2552=((0.8)*py);
IkReal x2553=(px*r01);
IkReal x2554=(px*r00);
IkReal x2555=((0.6)*py);
CheckValue<IkReal> x2557 = IKatan2WithCheck(IkReal(((((0.8)*x2554))+((r11*x2555))+(((0.6)*x2553))+((r10*x2552)))),IkReal(((((-1.0)*r11*x2552))+(((-0.8)*x2553))+(((0.6)*x2554))+((r10*x2555)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2557.valid){
continue;
}
IkReal x2556=x2557.value;
j5array[0]=((-1.0)*x2556);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2556)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2558=IKsin(j5);
IkReal x2559=IKcos(j5);
IkReal x2560=((1.6)*py);
IkReal x2561=((1.2)*px);
IkReal x2562=((1.2)*py);
IkReal x2563=((1.6)*px);
IkReal x2564=(pz*x2559);
IkReal x2565=(pz*x2558);
evalcond[0]=(((r11*x2560*x2565))+(((-1.0)*r10*x2560*x2564))+(((-1.0)*r00*x2563*x2564))+(((-1.0)*r10*x2562*x2565))+(((-1.0)*r11*x2562*x2564))+(((-1.0)*r00*x2561*x2565))+((r01*x2563*x2565))+(((-1.0)*r01*x2561*x2564)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2566=(cj4*cj5);
IkReal x2567=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.33333333333333)*r11*x2567))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2566))+(((-1.33333333333333)*r10*x2566))+(((-1.0)*r10*x2567)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2568=(cj4*sj5);
IkReal x2569=(cj4*cj5);
j0eval[0]=(((r00*x2568))+((r01*x2569))+(((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x2568))+(((1.33333333333333)*r00*x2569)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2570=((40.4040404040404)*sj4);
IkReal x2571=((30.3030303030303)*sj5);
IkReal x2572=(r12*sj4);
IkReal x2573=((382.614018977655)*pp);
IkReal x2574=(cj5*npy);
IkReal x2575=(cj4*sj5);
IkReal x2576=((30.3030303030303)*cj5);
IkReal x2577=((612.182430364248)*py);
IkReal x2578=(cj4*cj5);
IkReal x2579=((459.136822773186)*py);
IkReal x2580=(pp*x2578);
j0eval[0]=((1.66666666666667)+(((-1.0)*npx*x2577*x2578))+((r10*x2575))+x2573+(((50.5050505050505)*cj4*rxp2_1))+(((229.568411386593)*pp*r10*x2575))+((npy*x2575*x2577))+(((-1.0)*npy*x2571))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*rxp1_1*sj5*x2570))+(((229.568411386593)*r11*x2580))+((r11*x2578))+(((-306.091215182124)*pp*r11*x2575))+(((-1.33333333333333)*r11*x2575))+(((-1.0)*npx*x2575*x2579))+(((-40.4040404040404)*x2574))+(((1.33333333333333)*r10*x2578))+((rxp1_1*sj4*x2576))+(((306.091215182124)*r10*x2580))+((cj5*rxp0_1*x2570))+(((-1.0)*x2572*x2573))+(((-1.0)*cj4*x2574*x2579))+(((-1.66666666666667)*x2572))+((rxp0_1*sj4*x2571))+((npx*x2576)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2581=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2581.valid){
continue;
}
CheckValue<IkReal> x2582=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2582.valid){
continue;
}
CheckValue<IkReal> x2583=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2583.valid){
continue;
}
CheckValue<IkReal> x2584=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2584.valid){
continue;
}
CheckValue<IkReal> x2585=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2585.valid){
continue;
}
CheckValue<IkReal> x2586=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2586.valid){
continue;
}
CheckValue<IkReal> x2587=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2587.valid){
continue;
}
CheckValue<IkReal> x2588=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2588.valid){
continue;
}
CheckValue<IkReal> x2589=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2589.valid){
continue;
}
CheckValue<IkReal> x2590=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2590.valid){
continue;
}
CheckValue<IkReal> x2591=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2591.valid){
continue;
}
CheckValue<IkReal> x2592=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2592.valid){
continue;
}
CheckValue<IkReal> x2593=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2593.valid){
continue;
}
CheckValue<IkReal> x2594=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2594.valid){
continue;
}
CheckValue<IkReal> x2595=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2595.valid){
continue;
}
CheckValue<IkReal> x2596=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2596.valid){
continue;
}
CheckValue<IkReal> x2597=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2597.valid){
continue;
}
CheckValue<IkReal> x2598=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2598.valid){
continue;
}
CheckValue<IkReal> x2599=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2599.valid){
continue;
}
CheckValue<IkReal> x2600=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2600.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2581.value)))+(((-1.2)*cj4*npx*px*sj5*(x2582.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2583.value)))+(((0.6)*cj4*cj5*pp*r01*(x2584.value)))+(((0.0026136)*cj4*cj5*r01*(x2585.value)))+(((0.0026136)*cj4*r00*sj5*(x2586.value)))+(((-1.2)*cj4*cj5*npy*px*(x2587.value)))+(((-1.6)*cj4*cj5*npx*px*(x2588.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2589.value)))+(((-0.004356)*r02*sj4*(x2590.value)))+(((0.132)*cj4*rxp2_0*(x2591.value)))+(((-0.0034848)*cj4*r01*sj5*(x2592.value)))+(((0.0034848)*cj4*cj5*r00*(x2593.value)))+(((1.6)*cj4*npy*px*sj5*(x2594.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2595.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2596.value)))+(((2.0)*npz*px*sj4*(x2597.value)))+(((0.6)*cj4*pp*r00*sj5*(x2598.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2599.value)))+(((0.8)*cj4*cj5*pp*r00*(x2600.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2601=((0.8)*cj4);
IkReal x2602=((1.0)*sj4);
IkReal x2603=((0.6)*cj4);
CheckValue<IkReal> x2610=IKPowWithIntegerCheck((((r00*sj5*x2603))+(((-1.0)*r02*x2602))+((cj5*r01*x2603))+((cj5*r00*x2601))+(((-1.0)*r01*sj5*x2601))),-1);
if(!x2610.valid){
continue;
}
IkReal x2604=x2610.value;
IkReal x2605=(sj5*x2604);
IkReal x2606=(r11*x2604);
IkReal x2607=((1.0)*x2604);
IkReal x2608=(r10*x2604);
IkReal x2609=(cj5*x2604);
CheckValue<IkReal> x2611=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2602))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2601))+(((-1.0)*r01*sj5*x2601))),-1);
if(!x2611.valid){
continue;
}
CheckValue<IkReal> x2612=IKPowWithIntegerCheck((((r00*sj5*x2603))+(((-1.0)*r02*x2602))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2603))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2612.valid){
continue;
}
CheckValue<IkReal> x2613=IKPowWithIntegerCheck((((r00*sj5*x2603))+(((-1.0)*r02*x2602))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2603))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2613.valid){
continue;
}
CheckValue<IkReal> x2614=IKPowWithIntegerCheck((((r00*sj5*x2603))+(((-1.0)*r02*sj4))+((cj5*r01*x2603))+((cj5*r00*x2601))+(((-1.0)*r01*sj5*x2601))),-1);
if(!x2614.valid){
continue;
}
CheckValue<IkReal> x2615=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2602))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2601))+(((-1.0)*r01*sj5*x2601))),-1);
if(!x2615.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*cj5*r11*x2603*(x2611.value)))+(((-1.0)*cj5*r10*x2601*(x2612.value)))+((r11*sj5*x2601*(x2613.value)))+((r12*x2602*(x2614.value)))+x2607+(((-1.0)*r10*sj5*x2603*(x2615.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2616=((0.6)*cj4);
IkReal x2617=((0.8)*cj4*sj5);
IkReal x2618=((0.8)*cj4*cj5);
CheckValue<IkReal> x2625=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x2616))+((r12*sj4))+((r11*x2617))+(((-1.0)*r10*x2618))+(((-1.0)*r10*sj5*x2616))),-1);
if(!x2625.valid){
continue;
}
IkReal x2619=x2625.value;
IkReal x2620=(r01*x2619);
IkReal x2621=((0.8)*cj4*x2619);
IkReal x2622=(cj4*sj5*x2619);
IkReal x2623=(cj4*r00*x2619);
CheckValue<IkReal> x2626=IKPowWithIntegerCheck(((-1.0)+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+((r11*x2617))+(((-1.0)*r10*x2618))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2626.valid){
continue;
}
IkReal x2624=(x2616*(x2626.value));
CheckValue<IkReal> x2627=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x2616))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*x2618))+(((-1.0)*r10*sj5*x2616))),-1);
if(!x2627.valid){
continue;
}
CheckValue<IkReal> x2628=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x2616))+(((-0.8)*cj4*cj5*r10))+((r12*sj4))+((r11*x2617))+(((-1.0)*r10*sj5*x2616))),-1);
if(!x2628.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x2617*(x2627.value)))+((r00*sj5*x2624))+(((-1.0)*r02*sj4*x2619))+((cj5*r01*x2624))+((r00*x2618*(x2628.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2629=(npy*r20);
IkReal x2630=(npx*r21);
IkReal x2631=((250.0)*pp);
IkReal x2632=(npx*rxp2_2);
IkReal x2633=(npy*rxp2_2);
CheckValue<IkReal> x2634 = IKatan2WithCheck(IkReal(((((26.4)*x2632))+(((19.8)*x2633)))),IkReal(((((26.4)*x2633))+(((-19.8)*x2632)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2634.valid){
continue;
}
CheckValue<IkReal> x2635=IKPowWithIntegerCheck(IKsign(((((-1.089)*x2629))+(((1.089)*x2630))+(((-1.0)*x2629*x2631))+((x2630*x2631)))),-1);
if(!x2635.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x2634.value)+(((1.5707963267949)*(x2635.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2636=IKcos(j5);
IkReal x2637=IKsin(j5);
IkReal x2638=((1.6)*pz);
IkReal x2639=(pp*r20);
IkReal x2640=((1.2)*pz);
IkReal x2641=(npx*x2636);
IkReal x2642=((0.6)*x2637);
IkReal x2643=((0.8)*x2636);
IkReal x2644=(npy*x2636);
IkReal x2645=(r21*x2637);
IkReal x2646=(npy*x2637);
IkReal x2647=((0.6)*r21*x2636);
evalcond[0]=((((-0.8)*x2645))+x2647+((r20*x2643))+((r20*x2642)));
evalcond[1]=((((-0.8)*x2646))+(((0.8)*x2641))+(((0.6)*x2644))+((npx*x2642)));
evalcond[2]=(((x2639*x2643))+((x2639*x2642))+((x2638*x2646))+(((0.132)*rxp2_2))+(((-1.0)*x2640*x2644))+((pp*x2647))+(((0.0026136)*r21*x2636))+(((0.0026136)*r20*x2637))+(((0.0034848)*r20*x2636))+(((-1.0)*npx*x2637*x2640))+(((-0.8)*pp*x2645))+(((-0.0034848)*x2645))+(((-1.0)*x2638*x2641)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2648=(cj4*cj5);
IkReal x2649=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.33333333333333)*r10*x2648))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r10*x2649))+(((1.33333333333333)*r11*x2649))+(((-1.0)*r11*x2648)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2650=(cj4*sj5);
IkReal x2651=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x2650))+((r00*x2650))+((r01*x2651))+(((1.33333333333333)*r00*x2651)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2652=((40.4040404040404)*sj4);
IkReal x2653=((30.3030303030303)*sj5);
IkReal x2654=(r12*sj4);
IkReal x2655=((382.614018977655)*pp);
IkReal x2656=(cj5*npy);
IkReal x2657=(cj4*sj5);
IkReal x2658=((30.3030303030303)*cj5);
IkReal x2659=((612.182430364248)*py);
IkReal x2660=(cj4*cj5);
IkReal x2661=((459.136822773186)*py);
IkReal x2662=(pp*x2660);
j0eval[0]=((1.66666666666667)+(((306.091215182124)*r10*x2662))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*cj4*x2656*x2661))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((rxp0_1*sj4*x2653))+(((229.568411386593)*r11*x2662))+(((-1.0)*rxp1_1*sj5*x2652))+((rxp1_1*sj4*x2658))+(((229.568411386593)*pp*r10*x2657))+((r10*x2657))+(((-40.4040404040404)*x2656))+((cj5*rxp0_1*x2652))+(((-1.0)*npx*x2659*x2660))+(((-306.091215182124)*pp*r11*x2657))+(((-1.33333333333333)*r11*x2657))+(((-1.66666666666667)*x2654))+(((-1.0)*npx*x2657*x2661))+(((-1.0)*npy*x2653))+((npx*x2658))+((npy*x2657*x2659))+(((-1.0)*x2654*x2655))+(((1.33333333333333)*r10*x2660))+((r11*x2660))+x2655);
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2663=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2663.valid){
continue;
}
CheckValue<IkReal> x2664=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2664.valid){
continue;
}
CheckValue<IkReal> x2665=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2665.valid){
continue;
}
CheckValue<IkReal> x2666=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2666.valid){
continue;
}
CheckValue<IkReal> x2667=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2667.valid){
continue;
}
CheckValue<IkReal> x2668=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2668.valid){
continue;
}
CheckValue<IkReal> x2669=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2669.valid){
continue;
}
CheckValue<IkReal> x2670=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2670.valid){
continue;
}
CheckValue<IkReal> x2671=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2671.valid){
continue;
}
CheckValue<IkReal> x2672=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2672.valid){
continue;
}
CheckValue<IkReal> x2673=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2673.valid){
continue;
}
CheckValue<IkReal> x2674=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2674.valid){
continue;
}
CheckValue<IkReal> x2675=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2675.valid){
continue;
}
CheckValue<IkReal> x2676=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2676.valid){
continue;
}
CheckValue<IkReal> x2677=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2677.valid){
continue;
}
CheckValue<IkReal> x2678=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2678.valid){
continue;
}
CheckValue<IkReal> x2679=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2679.valid){
continue;
}
CheckValue<IkReal> x2680=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2680.valid){
continue;
}
CheckValue<IkReal> x2681=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2681.valid){
continue;
}
CheckValue<IkReal> x2682=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2682.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2663.value)))+(((-1.2)*cj4*npx*px*sj5*(x2664.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2665.value)))+(((0.6)*cj4*cj5*pp*r01*(x2666.value)))+(((0.0026136)*cj4*cj5*r01*(x2667.value)))+(((0.0026136)*cj4*r00*sj5*(x2668.value)))+(((-1.2)*cj4*cj5*npy*px*(x2669.value)))+(((-1.6)*cj4*cj5*npx*px*(x2670.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2671.value)))+(((-0.004356)*r02*sj4*(x2672.value)))+(((0.132)*cj4*rxp2_0*(x2673.value)))+(((-0.0034848)*cj4*r01*sj5*(x2674.value)))+(((0.0034848)*cj4*cj5*r00*(x2675.value)))+(((1.6)*cj4*npy*px*sj5*(x2676.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2677.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2678.value)))+(((2.0)*npz*px*sj4*(x2679.value)))+(((0.6)*cj4*pp*r00*sj5*(x2680.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2681.value)))+(((0.8)*cj4*cj5*pp*r00*(x2682.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2683=((0.8)*cj4);
IkReal x2684=((1.0)*sj4);
IkReal x2685=((0.6)*cj4);
CheckValue<IkReal> x2692=IKPowWithIntegerCheck(((((-1.0)*r02*x2684))+((r00*sj5*x2685))+((cj5*r01*x2685))+((cj5*r00*x2683))+(((-1.0)*r01*sj5*x2683))),-1);
if(!x2692.valid){
continue;
}
IkReal x2686=x2692.value;
IkReal x2687=(sj5*x2686);
IkReal x2688=(r11*x2686);
IkReal x2689=((1.0)*x2686);
IkReal x2690=(r10*x2686);
IkReal x2691=(cj5*x2686);
CheckValue<IkReal> x2693=IKPowWithIntegerCheck(((((-1.0)*r02*x2684))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2683))+(((-1.0)*r01*sj5*x2683))),-1);
if(!x2693.valid){
continue;
}
CheckValue<IkReal> x2694=IKPowWithIntegerCheck(((((-1.0)*r02*x2684))+((r00*sj5*x2685))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2685))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2694.valid){
continue;
}
CheckValue<IkReal> x2695=IKPowWithIntegerCheck(((((-1.0)*r02*x2684))+(((0.6)*cj4*r00*sj5))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2683))+(((-1.0)*r01*sj5*x2683))),-1);
if(!x2695.valid){
continue;
}
CheckValue<IkReal> x2696=IKPowWithIntegerCheck((((r00*sj5*x2685))+(((-1.0)*r02*sj4))+((cj5*r01*x2685))+((cj5*r00*x2683))+(((-1.0)*r01*sj5*x2683))),-1);
if(!x2696.valid){
continue;
}
CheckValue<IkReal> x2697=IKPowWithIntegerCheck(((((-1.0)*r02*x2684))+((r00*sj5*x2685))+(((0.8)*cj4*cj5*r00))+((cj5*r01*x2685))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2697.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r11*x2685*(x2693.value)))+(((-1.0)*r11*sj5*x2683*(x2694.value)))+(((-1.0)*x2689))+((r10*sj5*x2685*(x2695.value)))+(((-1.0)*r12*x2684*(x2696.value)))+((cj5*r10*x2683*(x2697.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2698=((0.6)*cj4);
IkReal x2699=((0.8)*cj4*sj5);
IkReal x2700=((0.8)*cj4*cj5);
CheckValue<IkReal> x2707=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2700))+(((-1.0)*cj5*r11*x2698))+((r12*sj4))+((r11*x2699))+(((-1.0)*r10*sj5*x2698))),-1);
if(!x2707.valid){
continue;
}
IkReal x2701=x2707.value;
IkReal x2702=(r01*x2701);
IkReal x2703=((0.8)*cj4*x2701);
IkReal x2704=(cj4*sj5*x2701);
IkReal x2705=(cj4*r00*x2701);
CheckValue<IkReal> x2708=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2700))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x2699))),-1);
if(!x2708.valid){
continue;
}
IkReal x2706=(x2698*(x2708.value));
CheckValue<IkReal> x2709=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x2698))+((r12*sj4))+((r11*x2699))+(((-1.0)*r10*sj5*x2698))),-1);
if(!x2709.valid){
continue;
}
CheckValue<IkReal> x2710=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2700))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x2698))+((r12*sj4))+(((-1.0)*r10*sj5*x2698))),-1);
if(!x2710.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x2706))+((r00*x2700*(x2709.value)))+(((-1.0)*r01*x2699*(x2710.value)))+(((-1.0)*r02*sj4*x2701))+((r00*sj5*x2706))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2711=((500.0)*pz);
IkReal x2712=(r20*rxp2_2);
IkReal x2713=(r21*rxp2_2);
CheckValue<IkReal> x2714=IKPowWithIntegerCheck(IKsign((((npx*r21*x2711))+(((-1.0)*npy*r20*x2711)))),-1);
if(!x2714.valid){
continue;
}
CheckValue<IkReal> x2715 = IKatan2WithCheck(IkReal(((((26.4)*x2712))+(((19.8)*x2713)))),IkReal(((((26.4)*x2713))+(((-19.8)*x2712)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2715.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2714.value)))+(x2715.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2716=IKcos(j5);
IkReal x2717=IKsin(j5);
IkReal x2718=((1.6)*pz);
IkReal x2719=(pp*r20);
IkReal x2720=((1.2)*pz);
IkReal x2721=(npx*x2716);
IkReal x2722=((0.6)*x2717);
IkReal x2723=((0.8)*x2716);
IkReal x2724=(npy*x2716);
IkReal x2725=(r21*x2717);
IkReal x2726=(npy*x2717);
IkReal x2727=((0.6)*r21*x2716);
evalcond[0]=(x2727+(((-0.8)*x2725))+((r20*x2722))+((r20*x2723)));
evalcond[1]=((((0.6)*x2724))+(((-0.8)*x2726))+(((0.8)*x2721))+((npx*x2722)));
evalcond[2]=((((0.0026136)*r20*x2717))+(((-1.0)*x2718*x2721))+(((0.0026136)*r21*x2716))+(((-1.0)*npx*x2717*x2720))+(((0.132)*rxp2_2))+(((-1.0)*x2720*x2724))+(((-0.8)*pp*x2725))+((x2718*x2726))+((x2719*x2723))+((x2719*x2722))+(((-0.0034848)*x2725))+(((0.0034848)*r20*x2716))+((pp*x2727)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2728=(cj4*cj5);
IkReal x2729=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((1.33333333333333)*r11*x2729))+(((-1.33333333333333)*r10*x2728))+(((-1.0)*r10*x2729))+(((-1.0)*r11*x2728)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2730=(cj4*sj5);
IkReal x2731=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x2730))+((r01*x2731))+((r00*x2730))+(((1.33333333333333)*r00*x2731)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2732=((40.4040404040404)*sj4);
IkReal x2733=((30.3030303030303)*sj5);
IkReal x2734=(r12*sj4);
IkReal x2735=((382.614018977655)*pp);
IkReal x2736=(cj5*npy);
IkReal x2737=(cj4*sj5);
IkReal x2738=((30.3030303030303)*cj5);
IkReal x2739=((612.182430364248)*py);
IkReal x2740=(cj4*cj5);
IkReal x2741=((459.136822773186)*py);
IkReal x2742=(pp*x2740);
j0eval[0]=((1.66666666666667)+x2735+(((-1.0)*npy*x2733))+(((1.33333333333333)*r10*x2740))+(((50.5050505050505)*cj4*rxp2_1))+((rxp0_1*sj4*x2733))+((cj5*rxp0_1*x2732))+((r11*x2740))+(((229.568411386593)*r11*x2742))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*x2734*x2735))+(((-306.091215182124)*pp*r11*x2737))+(((-1.0)*rxp1_1*sj5*x2732))+(((-1.0)*cj4*x2736*x2741))+(((-1.0)*npx*x2737*x2741))+(((-1.66666666666667)*x2734))+(((-1.0)*npx*x2739*x2740))+(((-1.33333333333333)*r11*x2737))+(((229.568411386593)*pp*r10*x2737))+((npy*x2737*x2739))+(((306.091215182124)*r10*x2742))+((r10*x2737))+(((-40.4040404040404)*x2736))+((rxp1_1*sj4*x2738))+((npx*x2738)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2743=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2743.valid){
continue;
}
CheckValue<IkReal> x2744=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2744.valid){
continue;
}
CheckValue<IkReal> x2745=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2745.valid){
continue;
}
CheckValue<IkReal> x2746=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2746.valid){
continue;
}
CheckValue<IkReal> x2747=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2747.valid){
continue;
}
CheckValue<IkReal> x2748=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2748.valid){
continue;
}
CheckValue<IkReal> x2749=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2749.valid){
continue;
}
CheckValue<IkReal> x2750=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2750.valid){
continue;
}
CheckValue<IkReal> x2751=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2751.valid){
continue;
}
CheckValue<IkReal> x2752=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2752.valid){
continue;
}
CheckValue<IkReal> x2753=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2753.valid){
continue;
}
CheckValue<IkReal> x2754=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2754.valid){
continue;
}
CheckValue<IkReal> x2755=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2755.valid){
continue;
}
CheckValue<IkReal> x2756=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2756.valid){
continue;
}
CheckValue<IkReal> x2757=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2757.valid){
continue;
}
CheckValue<IkReal> x2758=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2758.valid){
continue;
}
CheckValue<IkReal> x2759=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2759.valid){
continue;
}
CheckValue<IkReal> x2760=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2760.valid){
continue;
}
CheckValue<IkReal> x2761=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2761.valid){
continue;
}
CheckValue<IkReal> x2762=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2762.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2743.value)))+(((-1.2)*cj4*npx*px*sj5*(x2744.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2745.value)))+(((0.6)*cj4*cj5*pp*r01*(x2746.value)))+(((0.0026136)*cj4*cj5*r01*(x2747.value)))+(((0.0026136)*cj4*r00*sj5*(x2748.value)))+(((-1.2)*cj4*cj5*npy*px*(x2749.value)))+(((-1.6)*cj4*cj5*npx*px*(x2750.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2751.value)))+(((-0.004356)*r02*sj4*(x2752.value)))+(((0.132)*cj4*rxp2_0*(x2753.value)))+(((-0.0034848)*cj4*r01*sj5*(x2754.value)))+(((0.0034848)*cj4*cj5*r00*(x2755.value)))+(((1.6)*cj4*npy*px*sj5*(x2756.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2757.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2758.value)))+(((2.0)*npz*px*sj4*(x2759.value)))+(((0.6)*cj4*pp*r00*sj5*(x2760.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2761.value)))+(((0.8)*cj4*cj5*pp*r00*(x2762.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2763=((0.8)*cj4);
IkReal x2764=((1.0)*sj4);
IkReal x2765=((0.6)*cj4);
CheckValue<IkReal> x2772=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x2763))+(((-1.0)*r02*x2764))+((cj5*r00*x2763))+((r00*sj5*x2765))+((cj5*r01*x2765))),-1);
if(!x2772.valid){
continue;
}
IkReal x2766=x2772.value;
IkReal x2767=(sj5*x2766);
IkReal x2768=(r11*x2766);
IkReal x2769=((1.0)*x2766);
IkReal x2770=(r10*x2766);
IkReal x2771=(cj5*x2766);
CheckValue<IkReal> x2773=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2763))+(((-1.0)*r02*x2764))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2763))),-1);
if(!x2773.valid){
continue;
}
CheckValue<IkReal> x2774=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x2763))+(((-1.0)*r02*x2764))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2763))),-1);
if(!x2774.valid){
continue;
}
CheckValue<IkReal> x2775=IKPowWithIntegerCheck(((((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x2763))+((cj5*r00*x2763))+((r00*sj5*x2765))+((cj5*r01*x2765))),-1);
if(!x2775.valid){
continue;
}
CheckValue<IkReal> x2776=IKPowWithIntegerCheck(((((-1.0)*r02*x2764))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((r00*sj5*x2765))+((cj5*r01*x2765))),-1);
if(!x2776.valid){
continue;
}
CheckValue<IkReal> x2777=IKPowWithIntegerCheck(((((-1.0)*r02*x2764))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((r00*sj5*x2765))+((cj5*r01*x2765))),-1);
if(!x2777.valid){
continue;
}
j0array[0]=((-2.0)*(atan((x2769+(((-1.0)*cj5*r11*x2765*(x2773.value)))+(((-1.0)*r10*sj5*x2765*(x2774.value)))+((r12*x2764*(x2775.value)))+((r11*sj5*x2763*(x2776.value)))+(((-1.0)*cj5*r10*x2763*(x2777.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2778=((0.6)*cj4);
IkReal x2779=((0.8)*cj4*sj5);
IkReal x2780=((0.8)*cj4*cj5);
CheckValue<IkReal> x2787=IKPowWithIntegerCheck(((-1.0)+((r11*x2779))+(((-1.0)*r10*sj5*x2778))+(((-1.0)*cj5*r11*x2778))+(((-1.0)*r10*x2780))+((r12*sj4))),-1);
if(!x2787.valid){
continue;
}
IkReal x2781=x2787.value;
IkReal x2782=(r01*x2781);
IkReal x2783=((0.8)*cj4*x2781);
IkReal x2784=(cj4*sj5*x2781);
IkReal x2785=(cj4*r00*x2781);
CheckValue<IkReal> x2788=IKPowWithIntegerCheck(((-1.0)+((r11*x2779))+(((-0.6)*cj4*r10*sj5))+(((-1.0)*r10*x2780))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2788.valid){
continue;
}
IkReal x2786=(x2778*(x2788.value));
CheckValue<IkReal> x2789=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x2779))+(((-1.0)*r10*sj5*x2778))+(((-1.0)*cj5*r11*x2778))+((r12*sj4))),-1);
if(!x2789.valid){
continue;
}
CheckValue<IkReal> x2790=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2778))+(((0.8)*cj4*r11*sj5))+(((-1.0)*cj5*r11*x2778))+(((-1.0)*r10*x2780))+((r12*sj4))),-1);
if(!x2790.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x2781))+((r00*sj5*x2786))+((cj5*r01*x2786))+((r00*x2780*(x2789.value)))+(((-1.0)*r01*x2779*(x2790.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((IKabs(r21))+(IKabs(r20)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5eval[2];
IkReal x2791=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x2791);
rxp1_0=(pz*r11);
rxp1_1=(r01*x2791);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
j5eval[0]=cj4;
j5eval[1]=(pp+(((-1.0)*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  || IKabs(j5eval[1]) < 0.0000010000000000  )
{
{
IkReal j5eval[1];
IkReal x2792=((-1.0)*pz);
r20=0;
r21=0;
r02=0;
r12=0;
npx=(((px*r00))+((py*r10)));
npy=(((px*r01))+((py*r11)));
npz=(pz*r22);
rxp0_0=(pz*r10);
rxp0_1=(r00*x2792);
rxp1_0=(pz*r11);
rxp1_1=(r01*x2792);
rxp2_0=((-1.0)*py*r22);
rxp2_1=(px*r22);
rxp2_2=0;
IkReal x2793=cj4*cj4;
j5eval[0]=((((-1.0)*x2793*(pz*pz*pz*pz)))+((pp*x2793*(pz*pz))));
if( IKabs(j5eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[4], cj5array[4], sj5array[4];
bool j5valid[4]={false};
_nj5 = 4;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=1.5707963267949;
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
j5array[2]=3.14159265358979;
sj5array[2]=IKsin(j5array[2]);
cj5array[2]=IKcos(j5array[2]);
j5array[3]=-1.5707963267949;
sj5array[3]=IKsin(j5array[3]);
cj5array[3]=IKcos(j5array[3]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
if( j5array[2] > IKPI )
{
    j5array[2]-=IK2PI;
}
else if( j5array[2] < -IKPI )
{    j5array[2]+=IK2PI;
}
j5valid[2] = true;
if( j5array[3] > IKPI )
{
    j5array[3]-=IK2PI;
}
else if( j5array[3] < -IKPI )
{    j5array[3]+=IK2PI;
}
j5valid[3] = true;
for(int ij5 = 0; ij5 < 4; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 4; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x2794=(cj4*cj5);
IkReal x2795=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.33333333333333)*r11*x2795))+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x2794))+(((-1.0)*r10*x2795))+(((-1.0)*r11*x2794)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2796=(cj4*sj5);
IkReal x2797=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x2796))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x2797))+((r00*x2796))+((r01*x2797)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2798=((40.4040404040404)*sj4);
IkReal x2799=((30.3030303030303)*sj5);
IkReal x2800=(r12*sj4);
IkReal x2801=((382.614018977655)*pp);
IkReal x2802=(cj5*npy);
IkReal x2803=(cj4*sj5);
IkReal x2804=((30.3030303030303)*cj5);
IkReal x2805=((612.182430364248)*py);
IkReal x2806=(cj4*cj5);
IkReal x2807=((459.136822773186)*py);
IkReal x2808=(pp*x2806);
j0eval[0]=((1.66666666666667)+(((1.33333333333333)*r10*x2806))+(((-1.0)*npy*x2799))+((r10*x2803))+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*npx*sj5))+(((-1.0)*npx*x2803*x2807))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*x2800*x2801))+((rxp0_1*sj4*x2799))+(((-40.4040404040404)*x2802))+(((-306.091215182124)*pp*r11*x2803))+(((-1.0)*rxp1_1*sj5*x2798))+(((-1.33333333333333)*r11*x2803))+(((306.091215182124)*r10*x2808))+((npx*x2804))+(((-1.0)*npx*x2805*x2806))+((rxp1_1*sj4*x2804))+(((229.568411386593)*r11*x2808))+x2801+(((-1.0)*cj4*x2802*x2807))+(((229.568411386593)*pp*r10*x2803))+((cj5*rxp0_1*x2798))+((r11*x2806))+(((-1.66666666666667)*x2800))+((npy*x2803*x2805)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2809=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2809.valid){
continue;
}
CheckValue<IkReal> x2810=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2810.valid){
continue;
}
CheckValue<IkReal> x2811=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2811.valid){
continue;
}
CheckValue<IkReal> x2812=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2812.valid){
continue;
}
CheckValue<IkReal> x2813=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2813.valid){
continue;
}
CheckValue<IkReal> x2814=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2814.valid){
continue;
}
CheckValue<IkReal> x2815=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2815.valid){
continue;
}
CheckValue<IkReal> x2816=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2816.valid){
continue;
}
CheckValue<IkReal> x2817=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2817.valid){
continue;
}
CheckValue<IkReal> x2818=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2818.valid){
continue;
}
CheckValue<IkReal> x2819=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2819.valid){
continue;
}
CheckValue<IkReal> x2820=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2820.valid){
continue;
}
CheckValue<IkReal> x2821=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2821.valid){
continue;
}
CheckValue<IkReal> x2822=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2822.valid){
continue;
}
CheckValue<IkReal> x2823=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2823.valid){
continue;
}
CheckValue<IkReal> x2824=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2824.valid){
continue;
}
CheckValue<IkReal> x2825=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2825.valid){
continue;
}
CheckValue<IkReal> x2826=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2826.valid){
continue;
}
CheckValue<IkReal> x2827=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2827.valid){
continue;
}
CheckValue<IkReal> x2828=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2828.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2809.value)))+(((-1.2)*cj4*npx*px*sj5*(x2810.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2811.value)))+(((0.6)*cj4*cj5*pp*r01*(x2812.value)))+(((0.0026136)*cj4*cj5*r01*(x2813.value)))+(((0.0026136)*cj4*r00*sj5*(x2814.value)))+(((-1.2)*cj4*cj5*npy*px*(x2815.value)))+(((-1.6)*cj4*cj5*npx*px*(x2816.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2817.value)))+(((-0.004356)*r02*sj4*(x2818.value)))+(((0.132)*cj4*rxp2_0*(x2819.value)))+(((-0.0034848)*cj4*r01*sj5*(x2820.value)))+(((0.0034848)*cj4*cj5*r00*(x2821.value)))+(((1.6)*cj4*npy*px*sj5*(x2822.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2823.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2824.value)))+(((2.0)*npz*px*sj4*(x2825.value)))+(((0.6)*cj4*pp*r00*sj5*(x2826.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2827.value)))+(((0.8)*cj4*cj5*pp*r00*(x2828.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2829=((0.8)*cj4);
IkReal x2830=((1.0)*sj4);
IkReal x2831=((0.6)*cj4);
CheckValue<IkReal> x2838=IKPowWithIntegerCheck((((r00*sj5*x2831))+((cj5*r00*x2829))+((cj5*r01*x2831))+(((-1.0)*r01*sj5*x2829))+(((-1.0)*r02*x2830))),-1);
if(!x2838.valid){
continue;
}
IkReal x2832=x2838.value;
IkReal x2833=(sj5*x2832);
IkReal x2834=(r11*x2832);
IkReal x2835=((1.0)*x2832);
IkReal x2836=(r10*x2832);
IkReal x2837=(cj5*x2832);
CheckValue<IkReal> x2839=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x2829))+(((-1.0)*r01*sj5*x2829))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x2830))),-1);
if(!x2839.valid){
continue;
}
CheckValue<IkReal> x2840=IKPowWithIntegerCheck((((r00*sj5*x2831))+((cj5*r01*x2831))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+(((-1.0)*r02*x2830))),-1);
if(!x2840.valid){
continue;
}
CheckValue<IkReal> x2841=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+((cj5*r00*x2829))+(((-1.0)*r01*sj5*x2829))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r02*x2830))),-1);
if(!x2841.valid){
continue;
}
CheckValue<IkReal> x2842=IKPowWithIntegerCheck((((r00*sj5*x2831))+((cj5*r00*x2829))+((cj5*r01*x2831))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x2829))),-1);
if(!x2842.valid){
continue;
}
CheckValue<IkReal> x2843=IKPowWithIntegerCheck((((r00*sj5*x2831))+((cj5*r01*x2831))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+(((-1.0)*r02*x2830))),-1);
if(!x2843.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r10*sj5*x2831*(x2839.value)))+(((-1.0)*x2835))+(((-1.0)*r11*sj5*x2829*(x2840.value)))+((cj5*r11*x2831*(x2841.value)))+(((-1.0)*r12*x2830*(x2842.value)))+((cj5*r10*x2829*(x2843.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2844=((0.6)*cj4);
IkReal x2845=((0.8)*cj4*sj5);
IkReal x2846=((0.8)*cj4*cj5);
CheckValue<IkReal> x2853=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2844))+((r11*x2845))+(((-1.0)*cj5*r11*x2844))+((r12*sj4))+(((-1.0)*r10*x2846))),-1);
if(!x2853.valid){
continue;
}
IkReal x2847=x2853.value;
IkReal x2848=(r01*x2847);
IkReal x2849=((0.8)*cj4*x2847);
IkReal x2850=(cj4*sj5*x2847);
IkReal x2851=(cj4*r00*x2847);
CheckValue<IkReal> x2854=IKPowWithIntegerCheck(((-1.0)+((r11*x2845))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-1.0)*r10*x2846))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2854.valid){
continue;
}
IkReal x2852=(x2844*(x2854.value));
CheckValue<IkReal> x2855=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2844))+(((-0.8)*cj4*cj5*r10))+((r11*x2845))+(((-1.0)*cj5*r11*x2844))+((r12*sj4))),-1);
if(!x2855.valid){
continue;
}
CheckValue<IkReal> x2856=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x2844))+(((-1.0)*cj5*r11*x2844))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*x2846))),-1);
if(!x2856.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*x2846*(x2855.value)))+((cj5*r01*x2852))+((r00*sj5*x2852))+(((-1.0)*r02*sj4*x2847))+(((-1.0)*r01*x2845*(x2856.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j4)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j5array[4], cj5array[4], sj5array[4];
bool j5valid[4]={false};
_nj5 = 4;
j5array[0]=0;
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=1.5707963267949;
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
j5array[2]=3.14159265358979;
sj5array[2]=IKsin(j5array[2]);
cj5array[2]=IKcos(j5array[2]);
j5array[3]=-1.5707963267949;
sj5array[3]=IKsin(j5array[3]);
cj5array[3]=IKcos(j5array[3]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
if( j5array[2] > IKPI )
{
    j5array[2]-=IK2PI;
}
else if( j5array[2] < -IKPI )
{    j5array[2]+=IK2PI;
}
j5valid[2] = true;
if( j5array[3] > IKPI )
{
    j5array[3]-=IK2PI;
}
else if( j5array[3] < -IKPI )
{    j5array[3]+=IK2PI;
}
j5valid[3] = true;
for(int ij5 = 0; ij5 < 4; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 4; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j0eval[1];
IkReal x2857=(cj4*cj5);
IkReal x2858=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2857))+(((1.33333333333333)*r11*x2858))+(((-1.0)*r10*x2858))+(((-1.33333333333333)*r10*x2857)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2859=(cj4*sj5);
IkReal x2860=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r00*x2859))+(((1.33333333333333)*r00*x2860))+(((-1.33333333333333)*r01*x2859))+((r01*x2860)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2861=((40.4040404040404)*sj4);
IkReal x2862=((30.3030303030303)*sj5);
IkReal x2863=(r12*sj4);
IkReal x2864=((382.614018977655)*pp);
IkReal x2865=(cj5*npy);
IkReal x2866=(cj4*sj5);
IkReal x2867=((30.3030303030303)*cj5);
IkReal x2868=((612.182430364248)*py);
IkReal x2869=(cj4*cj5);
IkReal x2870=((459.136822773186)*py);
IkReal x2871=(pp*x2869);
j0eval[0]=((1.66666666666667)+((npx*x2867))+(((-1.0)*npx*x2868*x2869))+(((-1.0)*npx*x2866*x2870))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.0)*npy*x2862))+((npy*x2866*x2868))+(((-40.4040404040404)*npx*sj5))+(((306.091215182124)*r10*x2871))+(((765.228037955311)*npz*py*sj4))+((rxp0_1*sj4*x2862))+((r10*x2866))+((rxp1_1*sj4*x2867))+(((229.568411386593)*pp*r10*x2866))+(((-1.66666666666667)*x2863))+(((1.33333333333333)*r10*x2869))+(((229.568411386593)*r11*x2871))+(((-1.33333333333333)*r11*x2866))+(((-1.0)*cj4*x2865*x2870))+(((-1.0)*x2863*x2864))+(((-1.0)*rxp1_1*sj5*x2861))+((r11*x2869))+(((-40.4040404040404)*x2865))+x2864+(((-306.091215182124)*pp*r11*x2866))+((cj5*rxp0_1*x2861)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2872=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2872.valid){
continue;
}
CheckValue<IkReal> x2873=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2873.valid){
continue;
}
CheckValue<IkReal> x2874=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2874.valid){
continue;
}
CheckValue<IkReal> x2875=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2875.valid){
continue;
}
CheckValue<IkReal> x2876=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2876.valid){
continue;
}
CheckValue<IkReal> x2877=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2877.valid){
continue;
}
CheckValue<IkReal> x2878=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2878.valid){
continue;
}
CheckValue<IkReal> x2879=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2879.valid){
continue;
}
CheckValue<IkReal> x2880=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2880.valid){
continue;
}
CheckValue<IkReal> x2881=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2881.valid){
continue;
}
CheckValue<IkReal> x2882=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2882.valid){
continue;
}
CheckValue<IkReal> x2883=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2883.valid){
continue;
}
CheckValue<IkReal> x2884=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2884.valid){
continue;
}
CheckValue<IkReal> x2885=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2885.valid){
continue;
}
CheckValue<IkReal> x2886=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2886.valid){
continue;
}
CheckValue<IkReal> x2887=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2887.valid){
continue;
}
CheckValue<IkReal> x2888=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2888.valid){
continue;
}
CheckValue<IkReal> x2889=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2889.valid){
continue;
}
CheckValue<IkReal> x2890=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2890.valid){
continue;
}
CheckValue<IkReal> x2891=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2891.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2872.value)))+(((-1.2)*cj4*npx*px*sj5*(x2873.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2874.value)))+(((0.6)*cj4*cj5*pp*r01*(x2875.value)))+(((0.0026136)*cj4*cj5*r01*(x2876.value)))+(((0.0026136)*cj4*r00*sj5*(x2877.value)))+(((-1.2)*cj4*cj5*npy*px*(x2878.value)))+(((-1.6)*cj4*cj5*npx*px*(x2879.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2880.value)))+(((-0.004356)*r02*sj4*(x2881.value)))+(((0.132)*cj4*rxp2_0*(x2882.value)))+(((-0.0034848)*cj4*r01*sj5*(x2883.value)))+(((0.0034848)*cj4*cj5*r00*(x2884.value)))+(((1.6)*cj4*npy*px*sj5*(x2885.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2886.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2887.value)))+(((2.0)*npz*px*sj4*(x2888.value)))+(((0.6)*cj4*pp*r00*sj5*(x2889.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2890.value)))+(((0.8)*cj4*cj5*pp*r00*(x2891.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2892=((0.8)*cj4);
IkReal x2893=((1.0)*sj4);
IkReal x2894=((0.6)*cj4);
CheckValue<IkReal> x2901=IKPowWithIntegerCheck(((((-1.0)*r02*x2893))+(((-1.0)*r01*sj5*x2892))+((r00*sj5*x2894))+((cj5*r01*x2894))+((cj5*r00*x2892))),-1);
if(!x2901.valid){
continue;
}
IkReal x2895=x2901.value;
IkReal x2896=(sj5*x2895);
IkReal x2897=(r11*x2895);
IkReal x2898=((1.0)*x2895);
IkReal x2899=(r10*x2895);
IkReal x2900=(cj5*x2895);
CheckValue<IkReal> x2902=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2893))+(((-1.0)*r01*sj5*x2892))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2892))),-1);
if(!x2902.valid){
continue;
}
CheckValue<IkReal> x2903=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2893))+(((-1.0)*r01*sj5*x2892))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x2892))),-1);
if(!x2903.valid){
continue;
}
CheckValue<IkReal> x2904=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x2892))+(((-1.0)*r02*sj4))+((r00*sj5*x2894))+((cj5*r01*x2894))+((cj5*r00*x2892))),-1);
if(!x2904.valid){
continue;
}
CheckValue<IkReal> x2905=IKPowWithIntegerCheck(((((-1.0)*r02*x2893))+((r00*sj5*x2894))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2894))),-1);
if(!x2905.valid){
continue;
}
CheckValue<IkReal> x2906=IKPowWithIntegerCheck(((((-1.0)*r02*x2893))+((r00*sj5*x2894))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x2894))),-1);
if(!x2906.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*r10*sj5*x2894*(x2902.value)))+(((-1.0)*cj5*r11*x2894*(x2903.value)))+((r12*x2893*(x2904.value)))+(((-1.0)*cj5*r10*x2892*(x2905.value)))+((r11*sj5*x2892*(x2906.value)))+x2898))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2907=((0.6)*cj4);
IkReal x2908=((0.8)*cj4*sj5);
IkReal x2909=((0.8)*cj4*cj5);
CheckValue<IkReal> x2916=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2909))+(((-1.0)*r10*sj5*x2907))+(((-1.0)*cj5*r11*x2907))+((r12*sj4))+((r11*x2908))),-1);
if(!x2916.valid){
continue;
}
IkReal x2910=x2916.value;
IkReal x2911=(r01*x2910);
IkReal x2912=((0.8)*cj4*x2910);
IkReal x2913=(cj4*sj5*x2910);
IkReal x2914=(cj4*r00*x2910);
CheckValue<IkReal> x2917=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2909))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x2908))),-1);
if(!x2917.valid){
continue;
}
IkReal x2915=(x2907*(x2917.value));
CheckValue<IkReal> x2918=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2909))+(((-1.0)*r10*sj5*x2907))+(((-1.0)*cj5*r11*x2907))+(((0.8)*cj4*r11*sj5))+((r12*sj4))),-1);
if(!x2918.valid){
continue;
}
CheckValue<IkReal> x2919=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x2907))+(((-1.0)*cj5*r11*x2907))+((r12*sj4))+((r11*x2908))),-1);
if(!x2919.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*sj5*x2915))+(((-1.0)*r02*sj4*x2910))+((cj5*r01*x2915))+(((-1.0)*r01*x2908*(x2918.value)))+((r00*x2909*(x2919.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2920=(py*r11);
IkReal x2921=(px*r01);
IkReal x2922=(py*r10);
IkReal x2923=(px*r00);
IkReal x2924=((1.2)*cj4*pz);
IkReal x2925=((1.6)*cj4*pz);
CheckValue<IkReal> x2927 = IKatan2WithCheck(IkReal((((x2921*x2924))+((x2920*x2924))+((x2922*x2925))+((x2923*x2925)))),IkReal(((((-1.0)*x2920*x2925))+(((-1.0)*x2921*x2925))+((x2922*x2924))+((x2923*x2924)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2927.valid){
continue;
}
IkReal x2926=x2927.value;
j5array[0]=((-1.0)*x2926);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x2926)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x2928=IKsin(j5);
IkReal x2929=IKcos(j5);
IkReal x2930=(px*r01);
IkReal x2931=(py*r10);
IkReal x2932=(px*r00);
IkReal x2933=(py*r11);
IkReal x2934=(cj4*x2929);
IkReal x2935=(cj4*x2928);
evalcond[0]=((((-0.8)*x2931*x2934))+(((-0.8)*x2932*x2934))+(((-0.6)*x2933*x2934))+(((0.8)*x2930*x2935))+(((0.8)*x2933*x2935))+(((-0.6)*x2932*x2935))+(((-0.6)*x2931*x2935))+(((-0.6)*x2930*x2934)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x2936=(cj4*cj5);
IkReal x2937=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x2936))+(((-1.33333333333333)*r10*x2936))+(((1.33333333333333)*r11*x2937))+(((-1.0)*r10*x2937)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2938=(cj4*sj5);
IkReal x2939=(cj4*cj5);
j0eval[0]=((((1.33333333333333)*r00*x2939))+(((-1.66666666666667)*r02*sj4))+((r01*x2939))+((r00*x2938))+(((-1.33333333333333)*r01*x2938)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x2940=((40.4040404040404)*sj4);
IkReal x2941=((30.3030303030303)*sj5);
IkReal x2942=(r12*sj4);
IkReal x2943=((382.614018977655)*pp);
IkReal x2944=(cj5*npy);
IkReal x2945=(cj4*sj5);
IkReal x2946=((30.3030303030303)*cj5);
IkReal x2947=((612.182430364248)*py);
IkReal x2948=(cj4*cj5);
IkReal x2949=((459.136822773186)*py);
IkReal x2950=(pp*x2948);
j0eval[0]=((1.66666666666667)+(((-1.0)*npx*x2947*x2948))+((npy*x2945*x2947))+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*x2944))+(((-1.33333333333333)*r11*x2945))+(((-40.4040404040404)*npx*sj5))+(((-1.0)*rxp1_1*sj5*x2940))+((rxp0_1*sj4*x2941))+((cj5*rxp0_1*x2940))+(((765.228037955311)*npz*py*sj4))+((r10*x2945))+((npx*x2946))+(((-1.0)*x2942*x2943))+(((-1.66666666666667)*x2942))+(((-306.091215182124)*pp*r11*x2945))+((rxp1_1*sj4*x2946))+(((306.091215182124)*r10*x2950))+((r11*x2948))+(((1.33333333333333)*r10*x2948))+(((-1.0)*npy*x2941))+(((229.568411386593)*r11*x2950))+(((229.568411386593)*pp*r10*x2945))+x2943+(((-1.0)*cj4*x2944*x2949))+(((-1.0)*npx*x2945*x2949)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x2951=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2951.valid){
continue;
}
CheckValue<IkReal> x2952=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2952.valid){
continue;
}
CheckValue<IkReal> x2953=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2953.valid){
continue;
}
CheckValue<IkReal> x2954=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2954.valid){
continue;
}
CheckValue<IkReal> x2955=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2955.valid){
continue;
}
CheckValue<IkReal> x2956=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2956.valid){
continue;
}
CheckValue<IkReal> x2957=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2957.valid){
continue;
}
CheckValue<IkReal> x2958=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2958.valid){
continue;
}
CheckValue<IkReal> x2959=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2959.valid){
continue;
}
CheckValue<IkReal> x2960=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2960.valid){
continue;
}
CheckValue<IkReal> x2961=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2961.valid){
continue;
}
CheckValue<IkReal> x2962=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2962.valid){
continue;
}
CheckValue<IkReal> x2963=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2963.valid){
continue;
}
CheckValue<IkReal> x2964=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2964.valid){
continue;
}
CheckValue<IkReal> x2965=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2965.valid){
continue;
}
CheckValue<IkReal> x2966=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2966.valid){
continue;
}
CheckValue<IkReal> x2967=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2967.valid){
continue;
}
CheckValue<IkReal> x2968=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2968.valid){
continue;
}
CheckValue<IkReal> x2969=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2969.valid){
continue;
}
CheckValue<IkReal> x2970=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x2970.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x2951.value)))+(((-1.2)*cj4*npx*px*sj5*(x2952.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x2953.value)))+(((0.6)*cj4*cj5*pp*r01*(x2954.value)))+(((0.0026136)*cj4*cj5*r01*(x2955.value)))+(((0.0026136)*cj4*r00*sj5*(x2956.value)))+(((-1.2)*cj4*cj5*npy*px*(x2957.value)))+(((-1.6)*cj4*cj5*npx*px*(x2958.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x2959.value)))+(((-0.004356)*r02*sj4*(x2960.value)))+(((0.132)*cj4*rxp2_0*(x2961.value)))+(((-0.0034848)*cj4*r01*sj5*(x2962.value)))+(((0.0034848)*cj4*cj5*r00*(x2963.value)))+(((1.6)*cj4*npy*px*sj5*(x2964.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x2965.value)))+(((-0.8)*cj4*pp*r01*sj5*(x2966.value)))+(((2.0)*npz*px*sj4*(x2967.value)))+(((0.6)*cj4*pp*r00*sj5*(x2968.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x2969.value)))+(((0.8)*cj4*cj5*pp*r00*(x2970.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2971=((0.8)*cj4);
IkReal x2972=((1.0)*sj4);
IkReal x2973=((0.6)*cj4);
CheckValue<IkReal> x2980=IKPowWithIntegerCheck((((cj5*r01*x2973))+(((-1.0)*r02*x2972))+((cj5*r00*x2971))+((r00*sj5*x2973))+(((-1.0)*r01*sj5*x2971))),-1);
if(!x2980.valid){
continue;
}
IkReal x2974=x2980.value;
IkReal x2975=(sj5*x2974);
IkReal x2976=(r11*x2974);
IkReal x2977=((1.0)*x2974);
IkReal x2978=(r10*x2974);
IkReal x2979=(cj5*x2974);
CheckValue<IkReal> x2981=IKPowWithIntegerCheck((((cj5*r01*x2973))+(((-1.0)*r02*x2972))+((r00*sj5*x2973))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2981.valid){
continue;
}
CheckValue<IkReal> x2982=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2972))+((cj5*r00*x2971))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2971))),-1);
if(!x2982.valid){
continue;
}
CheckValue<IkReal> x2983=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r02*x2972))+((cj5*r00*x2971))+(((0.6)*cj4*cj5*r01))+(((-1.0)*r01*sj5*x2971))),-1);
if(!x2983.valid){
continue;
}
CheckValue<IkReal> x2984=IKPowWithIntegerCheck((((cj5*r01*x2973))+(((-1.0)*r02*x2972))+((r00*sj5*x2973))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x2984.valid){
continue;
}
CheckValue<IkReal> x2985=IKPowWithIntegerCheck((((cj5*r01*x2973))+((cj5*r00*x2971))+(((-1.0)*r02*sj4))+((r00*sj5*x2973))+(((-1.0)*r01*sj5*x2971))),-1);
if(!x2985.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r10*x2971*(x2981.value)))+((cj5*r11*x2973*(x2982.value)))+((r10*sj5*x2973*(x2983.value)))+(((-1.0)*x2977))+(((-1.0)*r11*sj5*x2971*(x2984.value)))+(((-1.0)*r12*x2972*(x2985.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x2986=((0.6)*cj4);
IkReal x2987=((0.8)*cj4*sj5);
IkReal x2988=((0.8)*cj4*cj5);
CheckValue<IkReal> x2995=IKPowWithIntegerCheck(((-1.0)+((r11*x2987))+(((-1.0)*r10*x2988))+(((-1.0)*cj5*r11*x2986))+(((-1.0)*r10*sj5*x2986))+((r12*sj4))),-1);
if(!x2995.valid){
continue;
}
IkReal x2989=x2995.value;
IkReal x2990=(r01*x2989);
IkReal x2991=((0.8)*cj4*x2989);
IkReal x2992=(cj4*sj5*x2989);
IkReal x2993=(cj4*r00*x2989);
CheckValue<IkReal> x2996=IKPowWithIntegerCheck(((-1.0)+((r11*x2987))+(((-1.0)*r10*x2988))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x2996.valid){
continue;
}
IkReal x2994=(x2986*(x2996.value));
CheckValue<IkReal> x2997=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x2987))+(((-1.0)*cj5*r11*x2986))+(((-1.0)*r10*sj5*x2986))+((r12*sj4))),-1);
if(!x2997.valid){
continue;
}
CheckValue<IkReal> x2998=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x2988))+(((-1.0)*cj5*r11*x2986))+(((0.8)*cj4*r11*sj5))+(((-1.0)*r10*sj5*x2986))+((r12*sj4))),-1);
if(!x2998.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r00*sj5*x2994))+((r00*x2988*(x2997.value)))+(((-1.0)*r02*sj4*x2989))+(((-1.0)*r01*x2987*(x2998.value)))+((cj5*r01*x2994))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x2999=((0.6)*cj4);
IkReal x3000=(px*r00);
IkReal x3001=(py*r11);
IkReal x3002=((0.8)*cj4);
IkReal x3003=(py*r10);
IkReal x3004=(px*r01);
CheckValue<IkReal> x3006 = IKatan2WithCheck(IkReal(((((-1.0)*x3002*x3003))+(((-1.0)*x3000*x3002))+(((-1.0)*x2999*x3001))+(((-1.0)*x2999*x3004)))),IkReal((((x3001*x3002))+((x3002*x3004))+(((-1.0)*x2999*x3000))+(((-1.0)*x2999*x3003)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3006.valid){
continue;
}
IkReal x3005=x3006.value;
j5array[0]=((-1.0)*x3005);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((3.14159265358979)+(((-1.0)*x3005)));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x3007=IKcos(j5);
IkReal x3008=IKsin(j5);
IkReal x3009=(py*r11);
IkReal x3010=(px*r01);
IkReal x3011=(cj4*pz);
IkReal x3012=(px*r00);
IkReal x3013=(py*r10);
IkReal x3014=((1.6)*x3007);
IkReal x3015=((1.2)*x3008);
IkReal x3016=((1.6)*x3008);
IkReal x3017=((1.2)*x3007*x3011);
evalcond[0]=(((x3010*x3017))+((x3009*x3017))+(((-1.0)*x3009*x3011*x3016))+((x3011*x3012*x3014))+((x3011*x3012*x3015))+((x3011*x3013*x3014))+((x3011*x3013*x3015))+(((-1.0)*x3010*x3011*x3016)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x3018=(cj4*cj5);
IkReal x3019=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.0)*r11*x3018))+(((1.66666666666667)*r12*sj4))+(((1.33333333333333)*r11*x3019))+(((-1.33333333333333)*r10*x3018))+(((-1.0)*r10*x3019)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3020=(cj4*sj5);
IkReal x3021=(cj4*cj5);
j0eval[0]=((((-1.33333333333333)*r01*x3020))+(((1.33333333333333)*r00*x3021))+(((-1.66666666666667)*r02*sj4))+((r00*x3020))+((r01*x3021)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3022=((40.4040404040404)*sj4);
IkReal x3023=((30.3030303030303)*sj5);
IkReal x3024=(r12*sj4);
IkReal x3025=((382.614018977655)*pp);
IkReal x3026=(cj5*npy);
IkReal x3027=(cj4*sj5);
IkReal x3028=((30.3030303030303)*cj5);
IkReal x3029=((612.182430364248)*py);
IkReal x3030=(cj4*cj5);
IkReal x3031=((459.136822773186)*py);
IkReal x3032=(pp*x3030);
j0eval[0]=((1.66666666666667)+((r10*x3027))+(((50.5050505050505)*cj4*rxp2_1))+(((-1.33333333333333)*r11*x3027))+(((229.568411386593)*r11*x3032))+x3025+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((rxp0_1*sj4*x3023))+((cj5*rxp0_1*x3022))+((npx*x3028))+((r11*x3030))+(((1.33333333333333)*r10*x3030))+(((-40.4040404040404)*x3026))+(((229.568411386593)*pp*r10*x3027))+((rxp1_1*sj4*x3028))+(((-1.0)*npx*x3029*x3030))+(((-1.0)*npx*x3027*x3031))+(((-1.0)*npy*x3023))+(((-306.091215182124)*pp*r11*x3027))+(((-1.0)*x3024*x3025))+(((306.091215182124)*r10*x3032))+((npy*x3027*x3029))+(((-1.0)*cj4*x3026*x3031))+(((-1.66666666666667)*x3024))+(((-1.0)*rxp1_1*sj5*x3022)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x3033=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3033.valid){
continue;
}
CheckValue<IkReal> x3034=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3034.valid){
continue;
}
CheckValue<IkReal> x3035=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3035.valid){
continue;
}
CheckValue<IkReal> x3036=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3036.valid){
continue;
}
CheckValue<IkReal> x3037=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3037.valid){
continue;
}
CheckValue<IkReal> x3038=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3038.valid){
continue;
}
CheckValue<IkReal> x3039=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3039.valid){
continue;
}
CheckValue<IkReal> x3040=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3040.valid){
continue;
}
CheckValue<IkReal> x3041=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3041.valid){
continue;
}
CheckValue<IkReal> x3042=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3042.valid){
continue;
}
CheckValue<IkReal> x3043=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3043.valid){
continue;
}
CheckValue<IkReal> x3044=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3044.valid){
continue;
}
CheckValue<IkReal> x3045=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3045.valid){
continue;
}
CheckValue<IkReal> x3046=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3046.valid){
continue;
}
CheckValue<IkReal> x3047=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3047.valid){
continue;
}
CheckValue<IkReal> x3048=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3048.valid){
continue;
}
CheckValue<IkReal> x3049=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3049.valid){
continue;
}
CheckValue<IkReal> x3050=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3050.valid){
continue;
}
CheckValue<IkReal> x3051=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3051.valid){
continue;
}
CheckValue<IkReal> x3052=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3052.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x3033.value)))+(((-1.2)*cj4*npx*px*sj5*(x3034.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x3035.value)))+(((0.6)*cj4*cj5*pp*r01*(x3036.value)))+(((0.0026136)*cj4*cj5*r01*(x3037.value)))+(((0.0026136)*cj4*r00*sj5*(x3038.value)))+(((-1.2)*cj4*cj5*npy*px*(x3039.value)))+(((-1.6)*cj4*cj5*npx*px*(x3040.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x3041.value)))+(((-0.004356)*r02*sj4*(x3042.value)))+(((0.132)*cj4*rxp2_0*(x3043.value)))+(((-0.0034848)*cj4*r01*sj5*(x3044.value)))+(((0.0034848)*cj4*cj5*r00*(x3045.value)))+(((1.6)*cj4*npy*px*sj5*(x3046.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x3047.value)))+(((-0.8)*cj4*pp*r01*sj5*(x3048.value)))+(((2.0)*npz*px*sj4*(x3049.value)))+(((0.6)*cj4*pp*r00*sj5*(x3050.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x3051.value)))+(((0.8)*cj4*cj5*pp*r00*(x3052.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3053=((0.8)*cj4);
IkReal x3054=((1.0)*sj4);
IkReal x3055=((0.6)*cj4);
CheckValue<IkReal> x3062=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x3053))+((cj5*r00*x3053))+((cj5*r01*x3055))+(((-1.0)*r02*x3054))+((r00*sj5*x3055))),-1);
if(!x3062.valid){
continue;
}
IkReal x3056=x3062.value;
IkReal x3057=(sj5*x3056);
IkReal x3058=(r11*x3056);
IkReal x3059=((1.0)*x3056);
IkReal x3060=(r10*x3056);
IkReal x3061=(cj5*x3056);
CheckValue<IkReal> x3063=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x3053))+(((0.6)*cj4*r00*sj5))+((cj5*r00*x3053))+(((-1.0)*r02*x3054))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3063.valid){
continue;
}
CheckValue<IkReal> x3064=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x3053))+((cj5*r00*x3053))+((cj5*r01*x3055))+(((-1.0)*r02*sj4))+((r00*sj5*x3055))),-1);
if(!x3064.valid){
continue;
}
CheckValue<IkReal> x3065=IKPowWithIntegerCheck((((cj5*r01*x3055))+(((-1.0)*r02*x3054))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x3055))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3065.valid){
continue;
}
CheckValue<IkReal> x3066=IKPowWithIntegerCheck((((cj5*r01*x3055))+(((-1.0)*r02*x3054))+(((0.8)*cj4*cj5*r00))+((r00*sj5*x3055))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3066.valid){
continue;
}
CheckValue<IkReal> x3067=IKPowWithIntegerCheck(((((-1.0)*r01*sj5*x3053))+(((0.6)*cj4*r00*sj5))+((cj5*r00*x3053))+(((-1.0)*r02*x3054))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3067.valid){
continue;
}
j0array[0]=((2.0)*(atan((((r10*sj5*x3055*(x3063.value)))+(((-1.0)*r12*x3054*(x3064.value)))+(((-1.0)*r11*sj5*x3053*(x3065.value)))+((cj5*r10*x3053*(x3066.value)))+(((-1.0)*x3059))+((cj5*r11*x3055*(x3067.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3068=((0.6)*cj4);
IkReal x3069=((0.8)*cj4*sj5);
IkReal x3070=((0.8)*cj4*cj5);
CheckValue<IkReal> x3077=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3070))+(((-1.0)*cj5*r11*x3068))+(((-1.0)*r10*sj5*x3068))+((r11*x3069))+((r12*sj4))),-1);
if(!x3077.valid){
continue;
}
IkReal x3071=x3077.value;
IkReal x3072=(r01*x3071);
IkReal x3073=((0.8)*cj4*x3071);
IkReal x3074=(cj4*sj5*x3071);
IkReal x3075=(cj4*r00*x3071);
CheckValue<IkReal> x3078=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3070))+(((-0.6)*cj4*r10*sj5))+((r11*x3069))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x3078.valid){
continue;
}
IkReal x3076=(x3068*(x3078.value));
CheckValue<IkReal> x3079=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3070))+(((-1.0)*cj5*r11*x3068))+(((-1.0)*r10*sj5*x3068))+(((0.8)*cj4*r11*sj5))+((r12*sj4))),-1);
if(!x3079.valid){
continue;
}
CheckValue<IkReal> x3080=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*cj5*r11*x3068))+(((-1.0)*r10*sj5*x3068))+((r11*x3069))+((r12*sj4))),-1);
if(!x3080.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x3076))+(((-1.0)*r01*x3069*(x3079.value)))+((r00*x3070*(x3080.value)))+(((-1.0)*r02*sj4*x3071))+((r00*sj5*x3076))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j5]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3081=cj4*cj4;
IkReal x3082=(cj4*sj4);
IkReal x3083=((0.0034848)*r22);
IkReal x3084=(npz*r20);
IkReal x3085=((0.8)*pp);
IkReal x3086=((0.6)*pp);
IkReal x3087=(npx*r22);
IkReal x3088=(npz*r21);
IkReal x3089=(npz*rxp1_2);
IkReal x3090=(npy*r22);
IkReal x3091=((0.1056)*npz*rxp0_2);
IkReal x3092=((0.0792)*npz*rxp0_2);
IkReal x3093=(npy*r20*x3081);
IkReal x3094=(npx*rxp2_2*x3081);
IkReal x3095=(npy*rxp2_2*x3081);
IkReal x3096=(npx*r21*x3081);
CheckValue<IkReal> x3097=IKPowWithIntegerCheck(IKsign(((((0.132)*npy*rxp0_2*x3082))+((pp*x3093))+(((-1.0)*pp*x3096))+(((-0.132)*npx*rxp1_2*x3082))+(((0.004356)*x3093))+(((-0.004356)*x3096)))),-1);
if(!x3097.valid){
continue;
}
CheckValue<IkReal> x3098 = IKatan2WithCheck(IkReal(((((-1.0)*x3091))+(((-0.0034848)*x3082*x3084))+((x3082*x3085*x3087))+((npx*x3082*x3083))+(((0.0026136)*x3082*x3090))+(((0.0792)*x3081*x3089))+(((-0.1056)*x3094))+(((-1.0)*x3082*x3084*x3085))+(((-0.0792)*x3089))+(((-1.0)*x3082*x3086*x3088))+((x3081*x3091))+(((-0.0792)*x3095))+(((-0.0026136)*x3082*x3088))+((x3082*x3086*x3090)))),IkReal(((((0.0792)*x3094))+(((0.0026136)*x3082*x3084))+((x3082*x3085*x3090))+x3092+((x3082*x3084*x3086))+(((-0.0034848)*x3082*x3088))+((npy*x3082*x3083))+(((-1.0)*x3082*x3085*x3088))+(((-1.0)*x3081*x3092))+(((-0.1056)*x3095))+(((-1.0)*x3082*x3086*x3087))+(((0.1056)*x3081*x3089))+(((-0.1056)*x3089))+(((-0.0026136)*x3082*x3087)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3098.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3097.value)))+(x3098.value));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3099=IKcos(j5);
IkReal x3100=IKsin(j5);
IkReal x3101=((0.8)*pp);
IkReal x3102=(npy*pz);
IkReal x3103=(r22*sj4);
IkReal x3104=(npz*sj4);
IkReal x3105=(npx*pz);
IkReal x3106=((0.6)*pp);
IkReal x3107=(cj4*x3099);
IkReal x3108=(sj4*x3100);
IkReal x3109=(cj4*x3100);
IkReal x3110=(sj4*x3099);
IkReal x3111=(r21*x3107);
evalcond[0]=(x3103+(((0.8)*r21*x3109))+(((-0.6)*r20*x3109))+(((-0.8)*r20*x3107))+(((-0.6)*x3111)));
evalcond[1]=(x3104+(((0.8)*npy*x3109))+(((-0.8)*npx*x3107))+(((-0.6)*npx*x3109))+(((-0.6)*npy*x3107)));
evalcond[2]=((((-1.0)*r20*x3106*x3109))+(((1.2)*x3102*x3107))+(((-0.1056)*rxp0_2*x3110))+(((-1.0)*r20*x3101*x3107))+(((-0.0034848)*r20*x3107))+(((1.2)*x3105*x3109))+(((0.004356)*x3103))+(((-0.0792)*rxp0_2*x3108))+(((1.6)*x3105*x3107))+(((0.1056)*rxp1_2*x3108))+(((-2.0)*pz*x3104))+((pp*x3103))+(((0.0034848)*r21*x3109))+((r21*x3101*x3109))+(((-1.0)*x3106*x3111))+(((-0.0026136)*r20*x3109))+(((-0.0026136)*x3111))+(((-0.0792)*rxp1_2*x3110))+(((-0.132)*cj4*rxp2_2))+(((-1.6)*x3102*x3109)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x3112=(cj4*cj5);
IkReal x3113=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x3112))+(((1.33333333333333)*r11*x3113))+(((-1.0)*r10*x3113))+(((-1.0)*r11*x3112)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3114=(cj4*sj5);
IkReal x3115=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+(((-1.33333333333333)*r01*x3114))+((r00*x3114))+(((1.33333333333333)*r00*x3115))+((r01*x3115)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3116=((40.4040404040404)*sj4);
IkReal x3117=((30.3030303030303)*sj5);
IkReal x3118=(r12*sj4);
IkReal x3119=((382.614018977655)*pp);
IkReal x3120=(cj5*npy);
IkReal x3121=(cj4*sj5);
IkReal x3122=((30.3030303030303)*cj5);
IkReal x3123=((612.182430364248)*py);
IkReal x3124=(cj4*cj5);
IkReal x3125=((459.136822773186)*py);
IkReal x3126=(pp*x3124);
j0eval[0]=((1.66666666666667)+x3119+(((229.568411386593)*r11*x3126))+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+(((-1.0)*npy*x3117))+((npx*x3122))+((cj5*rxp0_1*x3116))+(((-40.4040404040404)*x3120))+((rxp1_1*sj4*x3122))+(((1.33333333333333)*r10*x3124))+(((-1.0)*x3118*x3119))+(((-1.0)*npx*x3123*x3124))+(((-1.33333333333333)*r11*x3121))+(((-306.091215182124)*pp*r11*x3121))+((r10*x3121))+(((-1.0)*rxp1_1*sj5*x3116))+(((-1.66666666666667)*x3118))+(((-1.0)*npx*x3121*x3125))+((rxp0_1*sj4*x3117))+(((229.568411386593)*pp*r10*x3121))+(((-1.0)*cj4*x3120*x3125))+((npy*x3121*x3123))+((r11*x3124))+(((306.091215182124)*r10*x3126)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x3127=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3127.valid){
continue;
}
CheckValue<IkReal> x3128=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3128.valid){
continue;
}
CheckValue<IkReal> x3129=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3129.valid){
continue;
}
CheckValue<IkReal> x3130=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3130.valid){
continue;
}
CheckValue<IkReal> x3131=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3131.valid){
continue;
}
CheckValue<IkReal> x3132=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3132.valid){
continue;
}
CheckValue<IkReal> x3133=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3133.valid){
continue;
}
CheckValue<IkReal> x3134=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3134.valid){
continue;
}
CheckValue<IkReal> x3135=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3135.valid){
continue;
}
CheckValue<IkReal> x3136=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3136.valid){
continue;
}
CheckValue<IkReal> x3137=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3137.valid){
continue;
}
CheckValue<IkReal> x3138=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3138.valid){
continue;
}
CheckValue<IkReal> x3139=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3139.valid){
continue;
}
CheckValue<IkReal> x3140=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3140.valid){
continue;
}
CheckValue<IkReal> x3141=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3141.valid){
continue;
}
CheckValue<IkReal> x3142=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3142.valid){
continue;
}
CheckValue<IkReal> x3143=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3143.valid){
continue;
}
CheckValue<IkReal> x3144=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3144.valid){
continue;
}
CheckValue<IkReal> x3145=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3145.valid){
continue;
}
CheckValue<IkReal> x3146=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3146.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x3127.value)))+(((-1.2)*cj4*npx*px*sj5*(x3128.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x3129.value)))+(((0.6)*cj4*cj5*pp*r01*(x3130.value)))+(((0.0026136)*cj4*cj5*r01*(x3131.value)))+(((0.0026136)*cj4*r00*sj5*(x3132.value)))+(((-1.2)*cj4*cj5*npy*px*(x3133.value)))+(((-1.6)*cj4*cj5*npx*px*(x3134.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x3135.value)))+(((-0.004356)*r02*sj4*(x3136.value)))+(((0.132)*cj4*rxp2_0*(x3137.value)))+(((-0.0034848)*cj4*r01*sj5*(x3138.value)))+(((0.0034848)*cj4*cj5*r00*(x3139.value)))+(((1.6)*cj4*npy*px*sj5*(x3140.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x3141.value)))+(((-0.8)*cj4*pp*r01*sj5*(x3142.value)))+(((2.0)*npz*px*sj4*(x3143.value)))+(((0.6)*cj4*pp*r00*sj5*(x3144.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x3145.value)))+(((0.8)*cj4*cj5*pp*r00*(x3146.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3147=((0.8)*cj4);
IkReal x3148=((1.0)*sj4);
IkReal x3149=((0.6)*cj4);
CheckValue<IkReal> x3156=IKPowWithIntegerCheck((((r00*sj5*x3149))+(((-1.0)*r01*sj5*x3147))+((cj5*r01*x3149))+(((-1.0)*r02*x3148))+((cj5*r00*x3147))),-1);
if(!x3156.valid){
continue;
}
IkReal x3150=x3156.value;
IkReal x3151=(sj5*x3150);
IkReal x3152=(r11*x3150);
IkReal x3153=((1.0)*x3150);
IkReal x3154=(r10*x3150);
IkReal x3155=(cj5*x3150);
CheckValue<IkReal> x3157=IKPowWithIntegerCheck((((r00*sj5*x3149))+((cj5*r01*x3149))+(((-1.0)*r02*x3148))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3157.valid){
continue;
}
CheckValue<IkReal> x3158=IKPowWithIntegerCheck((((r00*sj5*x3149))+((cj5*r01*x3149))+(((-1.0)*r02*x3148))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3158.valid){
continue;
}
CheckValue<IkReal> x3159=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3147))+(((-1.0)*r02*x3148))+((cj5*r00*x3147))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3159.valid){
continue;
}
CheckValue<IkReal> x3160=IKPowWithIntegerCheck((((r00*sj5*x3149))+(((-1.0)*r01*sj5*x3147))+((cj5*r01*x3149))+(((-1.0)*r02*sj4))+((cj5*r00*x3147))),-1);
if(!x3160.valid){
continue;
}
CheckValue<IkReal> x3161=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3147))+(((-1.0)*r02*x3148))+((cj5*r00*x3147))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3161.valid){
continue;
}
j0array[0]=((-2.0)*(atan((x3153+((r11*sj5*x3147*(x3157.value)))+(((-1.0)*cj5*r10*x3147*(x3158.value)))+(((-1.0)*r10*sj5*x3149*(x3159.value)))+((r12*x3148*(x3160.value)))+(((-1.0)*cj5*r11*x3149*(x3161.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3162=((0.6)*cj4);
IkReal x3163=((0.8)*cj4*sj5);
IkReal x3164=((0.8)*cj4*cj5);
CheckValue<IkReal> x3171=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x3162))+((r11*x3163))+((r12*sj4))+(((-1.0)*r10*x3164))+(((-1.0)*cj5*r11*x3162))),-1);
if(!x3171.valid){
continue;
}
IkReal x3165=x3171.value;
IkReal x3166=(r01*x3165);
IkReal x3167=((0.8)*cj4*x3165);
IkReal x3168=(cj4*sj5*x3165);
IkReal x3169=(cj4*r00*x3165);
CheckValue<IkReal> x3172=IKPowWithIntegerCheck(((-1.0)+((r11*x3163))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-1.0)*r10*x3164))+(((-0.6)*cj4*cj5*r11))),-1);
if(!x3172.valid){
continue;
}
IkReal x3170=(x3162*(x3172.value));
CheckValue<IkReal> x3173=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*sj5*x3162))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*x3164))+(((-1.0)*cj5*r11*x3162))),-1);
if(!x3173.valid){
continue;
}
CheckValue<IkReal> x3174=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+(((-1.0)*r10*sj5*x3162))+((r11*x3163))+((r12*sj4))+(((-1.0)*cj5*r11*x3162))),-1);
if(!x3174.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r02*sj4*x3165))+(((-1.0)*r01*x3163*(x3173.value)))+((r00*sj5*x3170))+((r00*x3164*(x3174.value)))+((cj5*r01*x3170))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3175=cj4*cj4;
IkReal x3176=(r22*rxp0_2);
IkReal x3177=(npz*r21);
IkReal x3178=(r22*rxp1_2);
IkReal x3179=(npy*r22);
IkReal x3180=(r20*rxp2_2);
IkReal x3181=(npx*pz);
IkReal x3182=(npz*r20);
IkReal x3183=(cj4*sj4);
IkReal x3184=((0.0792)*x3175);
IkReal x3185=((0.1056)*x3175);
IkReal x3186=((2.0)*x3175);
IkReal x3187=((1.6)*pz*x3183);
IkReal x3188=(r21*rxp2_2*x3175);
IkReal x3189=((1.2)*pz*x3183);
CheckValue<IkReal> x3190 = IKatan2WithCheck(IkReal(((((-0.1056)*x3176))+(((-1.0)*x3180*x3185))+(((-1.0)*r21*rxp2_2*x3184))+((x3176*x3185))+(((-1.0)*x3177*x3189))+(((-0.0792)*x3178))+(((1.6)*r22*x3181*x3183))+((x3178*x3184))+(((-1.0)*x3182*x3187))+((x3179*x3189)))),IkReal(((((0.0792)*x3176))+(((-0.1056)*x3178))+(((-1.0)*r21*rxp2_2*x3185))+(((-1.0)*x3176*x3184))+(((-1.0)*x3177*x3187))+((x3178*x3185))+((x3182*x3189))+((x3180*x3184))+(((-1.2)*r22*x3181*x3183))+((x3179*x3187)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3190.valid){
continue;
}
CheckValue<IkReal> x3191=IKPowWithIntegerCheck(IKsign((((npy*pz*r20*x3186))+(((0.132)*r21*rxp0_2*x3183))+(((-0.132)*r20*rxp1_2*x3183))+(((-1.0)*r21*x3181*x3186)))),-1);
if(!x3191.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3190.value)+(((1.5707963267949)*(x3191.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3192=IKcos(j5);
IkReal x3193=IKsin(j5);
IkReal x3194=((0.8)*pp);
IkReal x3195=(npy*pz);
IkReal x3196=(r22*sj4);
IkReal x3197=(npz*sj4);
IkReal x3198=(npx*pz);
IkReal x3199=((0.6)*pp);
IkReal x3200=(cj4*x3192);
IkReal x3201=(sj4*x3193);
IkReal x3202=(cj4*x3193);
IkReal x3203=(sj4*x3192);
IkReal x3204=(r21*x3200);
evalcond[0]=(x3196+(((0.8)*r21*x3202))+(((-0.6)*x3204))+(((-0.8)*r20*x3200))+(((-0.6)*r20*x3202)));
evalcond[1]=(x3197+(((-0.8)*npx*x3200))+(((-0.6)*npy*x3200))+(((-0.6)*npx*x3202))+(((0.8)*npy*x3202)));
evalcond[2]=((((-0.0792)*rxp0_2*x3201))+(((-0.0034848)*r20*x3200))+(((-1.0)*x3199*x3204))+(((1.2)*x3195*x3200))+(((0.0034848)*r21*x3202))+(((-0.1056)*rxp0_2*x3203))+(((1.6)*x3198*x3200))+(((-0.0026136)*x3204))+(((-1.0)*r20*x3194*x3200))+((r21*x3194*x3202))+(((-0.0792)*rxp1_2*x3203))+(((-2.0)*pz*x3197))+((pp*x3196))+(((0.004356)*x3196))+(((-1.6)*x3195*x3202))+(((-0.0026136)*r20*x3202))+(((1.2)*x3198*x3202))+(((0.1056)*rxp1_2*x3201))+(((-0.132)*cj4*rxp2_2))+(((-1.0)*r20*x3199*x3202)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x3205=(cj4*cj5);
IkReal x3206=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((1.66666666666667)*r12*sj4))+(((-1.33333333333333)*r10*x3205))+(((-1.0)*r10*x3206))+(((-1.0)*r11*x3205))+(((1.33333333333333)*r11*x3206)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3207=(cj4*sj5);
IkReal x3208=(cj4*cj5);
j0eval[0]=((((-1.66666666666667)*r02*sj4))+((r00*x3207))+((r01*x3208))+(((-1.33333333333333)*r01*x3207))+(((1.33333333333333)*r00*x3208)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3209=((40.4040404040404)*sj4);
IkReal x3210=((30.3030303030303)*sj5);
IkReal x3211=(r12*sj4);
IkReal x3212=((382.614018977655)*pp);
IkReal x3213=(cj5*npy);
IkReal x3214=(cj4*sj5);
IkReal x3215=((30.3030303030303)*cj5);
IkReal x3216=((612.182430364248)*py);
IkReal x3217=(cj4*cj5);
IkReal x3218=((459.136822773186)*py);
IkReal x3219=(pp*x3217);
j0eval[0]=((1.66666666666667)+(((-1.0)*x3211*x3212))+(((50.5050505050505)*cj4*rxp2_1))+(((-40.4040404040404)*x3213))+(((-40.4040404040404)*npx*sj5))+(((765.228037955311)*npz*py*sj4))+((npx*x3215))+(((-1.0)*npx*x3214*x3218))+(((-1.0)*rxp1_1*sj5*x3209))+((cj5*rxp0_1*x3209))+x3212+(((-1.0)*npx*x3216*x3217))+(((229.568411386593)*pp*r10*x3214))+((rxp0_1*sj4*x3210))+((r11*x3217))+((npy*x3214*x3216))+((rxp1_1*sj4*x3215))+(((306.091215182124)*r10*x3219))+(((-1.0)*cj4*x3213*x3218))+(((-1.66666666666667)*x3211))+(((-1.0)*npy*x3210))+((r10*x3214))+(((-306.091215182124)*pp*r11*x3214))+(((-1.33333333333333)*r11*x3214))+(((229.568411386593)*r11*x3219))+(((1.33333333333333)*r10*x3217)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x3220=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3220.valid){
continue;
}
CheckValue<IkReal> x3221=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3221.valid){
continue;
}
CheckValue<IkReal> x3222=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3222.valid){
continue;
}
CheckValue<IkReal> x3223=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3223.valid){
continue;
}
CheckValue<IkReal> x3224=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3224.valid){
continue;
}
CheckValue<IkReal> x3225=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3225.valid){
continue;
}
CheckValue<IkReal> x3226=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3226.valid){
continue;
}
CheckValue<IkReal> x3227=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3227.valid){
continue;
}
CheckValue<IkReal> x3228=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3228.valid){
continue;
}
CheckValue<IkReal> x3229=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3229.valid){
continue;
}
CheckValue<IkReal> x3230=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3230.valid){
continue;
}
CheckValue<IkReal> x3231=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3231.valid){
continue;
}
CheckValue<IkReal> x3232=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3232.valid){
continue;
}
CheckValue<IkReal> x3233=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3233.valid){
continue;
}
CheckValue<IkReal> x3234=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3234.valid){
continue;
}
CheckValue<IkReal> x3235=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3235.valid){
continue;
}
CheckValue<IkReal> x3236=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3236.valid){
continue;
}
CheckValue<IkReal> x3237=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3237.valid){
continue;
}
CheckValue<IkReal> x3238=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3238.valid){
continue;
}
CheckValue<IkReal> x3239=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3239.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x3220.value)))+(((-1.2)*cj4*npx*px*sj5*(x3221.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x3222.value)))+(((0.6)*cj4*cj5*pp*r01*(x3223.value)))+(((0.0026136)*cj4*cj5*r01*(x3224.value)))+(((0.0026136)*cj4*r00*sj5*(x3225.value)))+(((-1.2)*cj4*cj5*npy*px*(x3226.value)))+(((-1.6)*cj4*cj5*npx*px*(x3227.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x3228.value)))+(((-0.004356)*r02*sj4*(x3229.value)))+(((0.132)*cj4*rxp2_0*(x3230.value)))+(((-0.0034848)*cj4*r01*sj5*(x3231.value)))+(((0.0034848)*cj4*cj5*r00*(x3232.value)))+(((1.6)*cj4*npy*px*sj5*(x3233.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x3234.value)))+(((-0.8)*cj4*pp*r01*sj5*(x3235.value)))+(((2.0)*npz*px*sj4*(x3236.value)))+(((0.6)*cj4*pp*r00*sj5*(x3237.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x3238.value)))+(((0.8)*cj4*cj5*pp*r00*(x3239.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3240=((0.8)*cj4);
IkReal x3241=((1.0)*sj4);
IkReal x3242=((0.6)*cj4);
CheckValue<IkReal> x3249=IKPowWithIntegerCheck((((r00*sj5*x3242))+(((-1.0)*r01*sj5*x3240))+(((-1.0)*r02*x3241))+((cj5*r01*x3242))+((cj5*r00*x3240))),-1);
if(!x3249.valid){
continue;
}
IkReal x3243=x3249.value;
IkReal x3244=(sj5*x3243);
IkReal x3245=(r11*x3243);
IkReal x3246=((1.0)*x3243);
IkReal x3247=(r10*x3243);
IkReal x3248=(cj5*x3243);
CheckValue<IkReal> x3250=IKPowWithIntegerCheck((((r00*sj5*x3242))+(((-1.0)*r02*x3241))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x3242))),-1);
if(!x3250.valid){
continue;
}
CheckValue<IkReal> x3251=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3240))+(((-1.0)*r02*x3241))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x3240))),-1);
if(!x3251.valid){
continue;
}
CheckValue<IkReal> x3252=IKPowWithIntegerCheck((((r00*sj5*x3242))+(((-1.0)*r02*sj4))+(((-1.0)*r01*sj5*x3240))+((cj5*r01*x3242))+((cj5*r00*x3240))),-1);
if(!x3252.valid){
continue;
}
CheckValue<IkReal> x3253=IKPowWithIntegerCheck((((r00*sj5*x3242))+(((-1.0)*r02*x3241))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))+((cj5*r01*x3242))),-1);
if(!x3253.valid){
continue;
}
CheckValue<IkReal> x3254=IKPowWithIntegerCheck(((((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3240))+(((-1.0)*r02*x3241))+(((0.6)*cj4*cj5*r01))+((cj5*r00*x3240))),-1);
if(!x3254.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*cj5*r10*x3240*(x3250.value)))+(((-1.0)*r10*sj5*x3242*(x3251.value)))+x3246+((r12*x3241*(x3252.value)))+((r11*sj5*x3240*(x3253.value)))+(((-1.0)*cj5*r11*x3242*(x3254.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3255=((0.6)*cj4);
IkReal x3256=((0.8)*cj4*sj5);
IkReal x3257=((0.8)*cj4*cj5);
CheckValue<IkReal> x3264=IKPowWithIntegerCheck(((-1.0)+((r11*x3256))+((r12*sj4))+(((-1.0)*r10*x3257))+(((-1.0)*r10*sj5*x3255))+(((-1.0)*cj5*r11*x3255))),-1);
if(!x3264.valid){
continue;
}
IkReal x3258=x3264.value;
IkReal x3259=(r01*x3258);
IkReal x3260=((0.8)*cj4*x3258);
IkReal x3261=(cj4*sj5*x3258);
IkReal x3262=(cj4*r00*x3258);
CheckValue<IkReal> x3265=IKPowWithIntegerCheck(((-1.0)+((r11*x3256))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+(((-1.0)*r10*x3257))),-1);
if(!x3265.valid){
continue;
}
IkReal x3263=(x3255*(x3265.value));
CheckValue<IkReal> x3266=IKPowWithIntegerCheck(((-1.0)+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*x3257))+(((-1.0)*r10*sj5*x3255))+(((-1.0)*cj5*r11*x3255))),-1);
if(!x3266.valid){
continue;
}
CheckValue<IkReal> x3267=IKPowWithIntegerCheck(((-1.0)+(((-0.8)*cj4*cj5*r10))+((r11*x3256))+((r12*sj4))+(((-1.0)*r10*sj5*x3255))+(((-1.0)*cj5*r11*x3255))),-1);
if(!x3267.valid){
continue;
}
j0array[0]=((2.0)*(atan(((((-1.0)*r01*x3256*(x3266.value)))+((r00*sj5*x3263))+(((-1.0)*r02*sj4*x3258))+((cj5*r01*x3263))+((r00*x3257*(x3267.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x3268=cj4*cj4;
IkReal x3269=(cj4*sj4);
IkReal x3270=((0.6)*r22);
IkReal x3271=(npz*r20);
IkReal x3272=(npz*r21);
IkReal x3273=((0.8)*r22);
CheckValue<IkReal> x3274 = IKatan2WithCheck(IkReal(((((-1.0)*npy*x3269*x3270))+(((-1.0)*npx*x3269*x3273))+(((0.8)*x3269*x3271))+(((0.6)*x3269*x3272)))),IkReal(((((-0.6)*x3269*x3271))+(((-1.0)*npy*x3269*x3273))+((npx*x3269*x3270))+(((0.8)*x3269*x3272)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3274.valid){
continue;
}
CheckValue<IkReal> x3275=IKPowWithIntegerCheck(IKsign((((npx*r21*x3268))+(((-1.0)*npy*r20*x3268)))),-1);
if(!x3275.valid){
continue;
}
j5array[0]=((-1.5707963267949)+(x3274.value)+(((1.5707963267949)*(x3275.value))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x3276=IKcos(j5);
IkReal x3277=IKsin(j5);
IkReal x3278=((0.8)*pp);
IkReal x3279=(npy*pz);
IkReal x3280=(r22*sj4);
IkReal x3281=(npz*sj4);
IkReal x3282=(npx*pz);
IkReal x3283=((0.6)*pp);
IkReal x3284=(cj4*x3276);
IkReal x3285=(sj4*x3277);
IkReal x3286=(cj4*x3277);
IkReal x3287=(sj4*x3276);
IkReal x3288=(r21*x3284);
evalcond[0]=((((-0.8)*r20*x3284))+x3280+(((0.8)*r21*x3286))+(((-0.6)*x3288))+(((-0.6)*r20*x3286)));
evalcond[1]=(x3281+(((-0.6)*npx*x3286))+(((-0.6)*npy*x3284))+(((-0.8)*npx*x3284))+(((0.8)*npy*x3286)));
evalcond[2]=((((-1.6)*x3279*x3286))+(((1.6)*x3282*x3284))+(((1.2)*x3279*x3284))+(((-0.0026136)*x3288))+((r21*x3278*x3286))+(((1.2)*x3282*x3286))+(((-0.0034848)*r20*x3284))+(((-1.0)*x3283*x3288))+(((-0.0792)*rxp0_2*x3285))+(((-0.0792)*rxp1_2*x3287))+(((-1.0)*r20*x3278*x3284))+(((-0.0026136)*r20*x3286))+(((-0.1056)*rxp0_2*x3287))+(((0.1056)*rxp1_2*x3285))+(((-2.0)*pz*x3281))+(((-1.0)*r20*x3283*x3286))+(((0.004356)*x3280))+(((0.0034848)*r21*x3286))+(((-0.132)*cj4*rxp2_2))+((pp*x3280)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j0eval[1];
IkReal x3289=(cj4*cj5);
IkReal x3290=(cj4*sj5);
j0eval[0]=((-1.66666666666667)+(((-1.0)*r10*x3290))+(((1.33333333333333)*r11*x3290))+(((1.66666666666667)*r12*sj4))+(((-1.0)*r11*x3289))+(((-1.33333333333333)*r10*x3289)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3291=(cj4*sj5);
IkReal x3292=(cj4*cj5);
j0eval[0]=(((r01*x3292))+((r00*x3291))+(((-1.66666666666667)*r02*sj4))+(((1.33333333333333)*r00*x3292))+(((-1.33333333333333)*r01*x3291)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
{
IkReal j0eval[1];
IkReal x3293=((40.4040404040404)*sj4);
IkReal x3294=((30.3030303030303)*sj5);
IkReal x3295=(r12*sj4);
IkReal x3296=((382.614018977655)*pp);
IkReal x3297=(cj5*npy);
IkReal x3298=(cj4*sj5);
IkReal x3299=((30.3030303030303)*cj5);
IkReal x3300=((612.182430364248)*py);
IkReal x3301=(cj4*cj5);
IkReal x3302=((459.136822773186)*py);
IkReal x3303=(pp*x3301);
j0eval[0]=((1.66666666666667)+((cj5*rxp0_1*x3293))+(((-1.0)*npx*x3300*x3301))+(((50.5050505050505)*cj4*rxp2_1))+((rxp1_1*sj4*x3299))+(((-1.0)*npy*x3294))+(((-40.4040404040404)*npx*sj5))+(((229.568411386593)*r11*x3303))+(((765.228037955311)*npz*py*sj4))+(((-40.4040404040404)*x3297))+(((-1.0)*rxp1_1*sj5*x3293))+x3296+(((-1.33333333333333)*r11*x3298))+(((-1.0)*npx*x3298*x3302))+((r11*x3301))+(((-1.66666666666667)*x3295))+((npx*x3299))+((r10*x3298))+(((-1.0)*x3295*x3296))+(((-306.091215182124)*pp*r11*x3298))+(((-1.0)*cj4*x3297*x3302))+((npy*x3298*x3300))+(((306.091215182124)*r10*x3303))+(((1.33333333333333)*r10*x3301))+(((229.568411386593)*pp*r10*x3298))+((rxp0_1*sj4*x3294)));
if( IKabs(j0eval[0]) < 0.0000010000000000  )
{
continue; // no branches [j0]

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
CheckValue<IkReal> x3304=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3304.valid){
continue;
}
CheckValue<IkReal> x3305=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3305.valid){
continue;
}
CheckValue<IkReal> x3306=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3306.valid){
continue;
}
CheckValue<IkReal> x3307=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3307.valid){
continue;
}
CheckValue<IkReal> x3308=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3308.valid){
continue;
}
CheckValue<IkReal> x3309=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3309.valid){
continue;
}
CheckValue<IkReal> x3310=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3310.valid){
continue;
}
CheckValue<IkReal> x3311=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3311.valid){
continue;
}
CheckValue<IkReal> x3312=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3312.valid){
continue;
}
CheckValue<IkReal> x3313=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3313.valid){
continue;
}
CheckValue<IkReal> x3314=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3314.valid){
continue;
}
CheckValue<IkReal> x3315=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3315.valid){
continue;
}
CheckValue<IkReal> x3316=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3316.valid){
continue;
}
CheckValue<IkReal> x3317=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3317.valid){
continue;
}
CheckValue<IkReal> x3318=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3318.valid){
continue;
}
CheckValue<IkReal> x3319=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3319.valid){
continue;
}
CheckValue<IkReal> x3320=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3320.valid){
continue;
}
CheckValue<IkReal> x3321=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3321.valid){
continue;
}
CheckValue<IkReal> x3322=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3322.valid){
continue;
}
CheckValue<IkReal> x3323=IKPowWithIntegerCheck(((0.004356)+(((-0.8)*cj4*pp*r11*sj5))+(((0.8)*cj4*cj5*pp*r10))+(((-0.1056)*npx*sj5))+(((1.6)*cj4*npy*py*sj5))+(((0.6)*cj4*cj5*pp*r11))+(((2.0)*npz*py*sj4))+(((-0.004356)*r12*sj4))+(((0.1056)*cj5*rxp0_1*sj4))+(((-1.0)*pp*r12*sj4))+(((0.0026136)*cj4*cj5*r11))+(((0.6)*cj4*pp*r10*sj5))+(((-0.0792)*npy*sj5))+(((-0.1056)*cj5*npy))+(((-0.0034848)*cj4*r11*sj5))+(((-0.1056)*rxp1_1*sj4*sj5))+(((-1.2)*cj4*cj5*npy*py))+pp+(((0.0792)*cj5*npx))+(((0.0792)*rxp0_1*sj4*sj5))+(((-1.2)*cj4*npx*py*sj5))+(((0.0026136)*cj4*r10*sj5))+(((0.0034848)*cj4*cj5*r10))+(((0.0792)*cj5*rxp1_1*sj4))+(((-1.6)*cj4*cj5*npx*py))+(((0.132)*cj4*rxp2_1))),-1);
if(!x3323.valid){
continue;
}
j0array[0]=((-2.0)*(atan(((((-1.0)*pp*r02*sj4*(x3304.value)))+(((-1.2)*cj4*npx*px*sj5*(x3305.value)))+(((0.0792)*rxp0_0*sj4*sj5*(x3306.value)))+(((0.6)*cj4*cj5*pp*r01*(x3307.value)))+(((0.0026136)*cj4*cj5*r01*(x3308.value)))+(((0.0026136)*cj4*r00*sj5*(x3309.value)))+(((-1.2)*cj4*cj5*npy*px*(x3310.value)))+(((-1.6)*cj4*cj5*npx*px*(x3311.value)))+(((0.0792)*cj5*rxp1_0*sj4*(x3312.value)))+(((-0.004356)*r02*sj4*(x3313.value)))+(((0.132)*cj4*rxp2_0*(x3314.value)))+(((-0.0034848)*cj4*r01*sj5*(x3315.value)))+(((0.0034848)*cj4*cj5*r00*(x3316.value)))+(((1.6)*cj4*npy*px*sj5*(x3317.value)))+(((-0.1056)*rxp1_0*sj4*sj5*(x3318.value)))+(((-0.8)*cj4*pp*r01*sj5*(x3319.value)))+(((2.0)*npz*px*sj4*(x3320.value)))+(((0.6)*cj4*pp*r00*sj5*(x3321.value)))+(((0.1056)*cj5*rxp0_0*sj4*(x3322.value)))+(((0.8)*cj4*cj5*pp*r00*(x3323.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3324=((0.8)*cj4);
IkReal x3325=((1.0)*sj4);
IkReal x3326=((0.6)*cj4);
CheckValue<IkReal> x3333=IKPowWithIntegerCheck((((r00*sj5*x3326))+(((-1.0)*r02*x3325))+((cj5*r01*x3326))+(((-1.0)*r01*sj5*x3324))+((cj5*r00*x3324))),-1);
if(!x3333.valid){
continue;
}
IkReal x3327=x3333.value;
IkReal x3328=(sj5*x3327);
IkReal x3329=(r11*x3327);
IkReal x3330=((1.0)*x3327);
IkReal x3331=(r10*x3327);
IkReal x3332=(cj5*x3327);
CheckValue<IkReal> x3334=IKPowWithIntegerCheck((((r00*sj5*x3326))+(((-1.0)*r02*x3325))+((cj5*r01*x3326))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3334.valid){
continue;
}
CheckValue<IkReal> x3335=IKPowWithIntegerCheck((((r00*sj5*x3326))+((cj5*r01*x3326))+(((-1.0)*r01*sj5*x3324))+((cj5*r00*x3324))+(((-1.0)*r02*sj4))),-1);
if(!x3335.valid){
continue;
}
CheckValue<IkReal> x3336=IKPowWithIntegerCheck(((((-1.0)*r02*x3325))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3324))+((cj5*r00*x3324))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3336.valid){
continue;
}
CheckValue<IkReal> x3337=IKPowWithIntegerCheck(((((-1.0)*r02*x3325))+(((0.6)*cj4*r00*sj5))+(((-1.0)*r01*sj5*x3324))+((cj5*r00*x3324))+(((0.6)*cj4*cj5*r01))),-1);
if(!x3337.valid){
continue;
}
CheckValue<IkReal> x3338=IKPowWithIntegerCheck((((r00*sj5*x3326))+(((-1.0)*r02*x3325))+((cj5*r01*x3326))+(((0.8)*cj4*cj5*r00))+(((-0.8)*cj4*r01*sj5))),-1);
if(!x3338.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r10*x3324*(x3334.value)))+(((-1.0)*r12*x3325*(x3335.value)))+((cj5*r11*x3326*(x3336.value)))+(((-1.0)*x3330))+((r10*sj5*x3326*(x3337.value)))+(((-1.0)*r11*sj5*x3324*(x3338.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x3339=((0.6)*cj4);
IkReal x3340=((0.8)*cj4*sj5);
IkReal x3341=((0.8)*cj4*cj5);
CheckValue<IkReal> x3348=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3341))+(((-1.0)*cj5*r11*x3339))+((r12*sj4))+(((-1.0)*r10*sj5*x3339))+((r11*x3340))),-1);
if(!x3348.valid){
continue;
}
IkReal x3342=x3348.value;
IkReal x3343=(r01*x3342);
IkReal x3344=((0.8)*cj4*x3342);
IkReal x3345=(cj4*sj5*x3342);
IkReal x3346=(cj4*r00*x3342);
CheckValue<IkReal> x3349=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3341))+(((-0.6)*cj4*r10*sj5))+((r12*sj4))+(((-0.6)*cj4*cj5*r11))+((r11*x3340))),-1);
if(!x3349.valid){
continue;
}
IkReal x3347=(x3339*(x3349.value));
CheckValue<IkReal> x3350=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*r10*x3341))+(((-1.0)*cj5*r11*x3339))+(((0.8)*cj4*r11*sj5))+((r12*sj4))+(((-1.0)*r10*sj5*x3339))),-1);
if(!x3350.valid){
continue;
}
CheckValue<IkReal> x3351=IKPowWithIntegerCheck(((-1.0)+(((-1.0)*cj5*r11*x3339))+(((-0.8)*cj4*cj5*r10))+((r12*sj4))+(((-1.0)*r10*sj5*x3339))+((r11*x3340))),-1);
if(!x3351.valid){
continue;
}
j0array[0]=((2.0)*(atan((((cj5*r01*x3347))+(((-1.0)*r02*sj4*x3342))+((r00*sj5*x3347))+(((-1.0)*r01*x3340*(x3350.value)))+((r00*x3341*(x3351.value)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

innerfn(solutions);
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots2(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[3];
    const int maxsteps = 110;
    for(int i = 0; i < 3; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[3];
    IkReal err[3];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 3; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 3; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 3; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 3; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+3, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[3] = {false};
    for(int i = 0; i < 3; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 3; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int& numroots) {
    IkReal det = rawcoeffs[1]*rawcoeffs[1]-4*rawcoeffs[0]*rawcoeffs[2];
    if( det < 0 ) {
        numroots=0;
    }
    else if( det == 0 ) {
        rawroots[0] = -0.5*rawcoeffs[1]/rawcoeffs[0];
        numroots = 1;
    }
    else {
        det = IKsqrt(det);
        rawroots[0] = (-rawcoeffs[1]+det)/(2*rawcoeffs[0]);
        rawroots[1] = (-rawcoeffs[1]-det)/(2*rawcoeffs[0]);//rawcoeffs[2]/(rawcoeffs[0]*rawroots[0]);
        numroots = 2;
    }
}
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots4(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[5];
    const int maxsteps = 110;
    for(int i = 0; i < 5; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[5];
    IkReal err[5];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 5; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 5; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 5; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 5; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+5, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[5] = {false};
    for(int i = 0; i < 5; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 5; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots3(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[4];
    const int maxsteps = 110;
    for(int i = 0; i < 4; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[4];
    IkReal err[4];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 4; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 4; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 4; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 4; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+4, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[4] = {false};
    for(int i = 0; i < 4; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 4; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots7(IkReal rawcoeffs[7+1], IkReal rawroots[7], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots6(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[7];
    const int maxsteps = 110;
    for(int i = 0; i < 7; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[7];
    IkReal err[7];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 7; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 7; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 7; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 7; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+7, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[7] = {false};
    for(int i = 0; i < 7; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 7; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots5(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[6];
    const int maxsteps = 110;
    for(int i = 0; i < 6; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[6];
    IkReal err[6];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 6; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 6; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 6; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 6; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+6, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[6] = {false};
    for(int i = 0; i < 6; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 6; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
static inline void polyroots8(IkReal rawcoeffs[8+1], IkReal rawroots[8], int& numroots)
{
    using std::complex;
    if( rawcoeffs[0] == 0 ) {
        // solve with one reduced degree
        polyroots7(&rawcoeffs[1], &rawroots[0], numroots);
        return;
    }
    IKFAST_ASSERT(rawcoeffs[0] != 0);
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    const IkReal tolsqrt = sqrt(std::numeric_limits<IkReal>::epsilon());
    complex<IkReal> coeffs[8];
    const int maxsteps = 110;
    for(int i = 0; i < 8; ++i) {
        coeffs[i] = complex<IkReal>(rawcoeffs[i+1]/rawcoeffs[0]);
    }
    complex<IkReal> roots[8];
    IkReal err[8];
    roots[0] = complex<IkReal>(1,0);
    roots[1] = complex<IkReal>(0.4,0.9); // any complex number not a root of unity works
    err[0] = 1.0;
    err[1] = 1.0;
    for(int i = 2; i < 8; ++i) {
        roots[i] = roots[i-1]*roots[1];
        err[i] = 1.0;
    }
    for(int step = 0; step < maxsteps; ++step) {
        bool changed = false;
        for(int i = 0; i < 8; ++i) {
            if ( err[i] >= tol ) {
                changed = true;
                // evaluate
                complex<IkReal> x = roots[i] + coeffs[0];
                for(int j = 1; j < 8; ++j) {
                    x = roots[i] * x + coeffs[j];
                }
                for(int j = 0; j < 8; ++j) {
                    if( i != j ) {
                        if( roots[i] != roots[j] ) {
                            x /= (roots[i] - roots[j]);
                        }
                    }
                }
                roots[i] -= x;
                err[i] = abs(x);
            }
        }
        if( !changed ) {
            break;
        }
    }

    // sort roots hoping that it solution indices become more robust to slight change in coeffs
    std::sort(roots, roots+8, ComplexLess<IkReal>());

    numroots = 0;
    bool visited[8] = {false};
    for(int i = 0; i < 8; ++i) {
        if( !visited[i] ) {
            // might be a multiple root, in which case it will have more error than the other roots
            // find any neighboring roots, and take the average
            complex<IkReal> newroot=roots[i];
            int n = 1;
            for(int j = i+1; j < 8; ++j) {
                // care about error in real much more than imaginary
                if( abs(real(roots[i])-real(roots[j])) < tolsqrt && (abs(imag(roots[i])-imag(roots[j])) < 0.002 || abs(imag(roots[i])+imag(roots[j])) < 0.002) && abs(imag(roots[i])) < 0.002 ) {
                    newroot += roots[j];
                    n += 1;
                    visited[j] = true;
                }
            }
            if( n > 1 ) {
                newroot /= n;
            }
            // there are still cases where even the mean is not accurate enough, until a better multi-root algorithm is used, need to use the sqrt
            if( IKabs(imag(newroot)) < tolsqrt ) {
                rawroots[numroots++] = real(newroot);
            }
        }
    }
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
IkReal op[8+1], zeror[8];
int numroots;
IkReal x123=((1.0)*px);
IkReal x124=((0.565)*cj0);
IkReal x125=((0.085)*cj0);
IkReal x126=((0.0528)*sj5);
IkReal x127=((0.0528)*cj5);
IkReal x128=((0.0396)*cj5);
IkReal x129=((0.0396)*sj5);
IkReal x130=(r01*x127);
IkReal x131=(r01*x129);
IkReal x132=(r00*x126);
IkReal x133=(r00*x128);
IkReal x134=(x133+x123);
IkReal x135=(x131+x130+x132);
IkReal x136=((((-1.0)*r20*x128))+((r21*x129))+((r21*x127))+(((-1.0)*pz))+((r20*x126)));
IkReal x137=(x135+x124+(((-1.0)*x134)));
IkReal x138=(x135+x125+(((-1.0)*x134)));
IkReal x139=((((-1.0)*x124))+x135+(((-1.0)*x134)));
IkReal x140=((((-1.0)*x125))+x135+(((-1.0)*x134)));
IkReal gconst0=x137;
IkReal gconst1=x138;
IkReal gconst2=x136;
IkReal gconst3=x136;
IkReal gconst4=x137;
IkReal gconst5=x138;
IkReal gconst6=x136;
IkReal gconst7=x136;
IkReal gconst8=x139;
IkReal gconst9=x140;
IkReal gconst10=x136;
IkReal gconst11=x136;
IkReal gconst12=x139;
IkReal gconst13=x140;
IkReal gconst14=x136;
IkReal gconst15=x136;
IkReal x141=cj0*cj0;
IkReal x142=(gconst0*gconst11);
IkReal x143=(gconst5*gconst6);
IkReal x144=(gconst12*gconst15);
IkReal x145=(gconst4*gconst9);
IkReal x146=(gconst0*gconst13);
IkReal x147=((0.17)*gconst14);
IkReal x148=(gconst13*gconst14);
IkReal x149=(gconst14*gconst5);
IkReal x150=((1.13)*gconst9);
IkReal x151=(gconst12*gconst7);
IkReal x152=((1.0)*gconst2);
IkReal x153=((1.13)*gconst1);
IkReal x154=(gconst15*gconst4);
IkReal x155=(gconst1*gconst10);
IkReal x156=(gconst2*gconst5);
IkReal x157=(gconst13*gconst2);
IkReal x158=(gconst4*gconst7);
IkReal x159=(gconst11*gconst8);
IkReal x160=((1.13)*gconst13);
IkReal x161=(gconst13*gconst8);
IkReal x162=((0.17)*gconst8);
IkReal x163=((0.0289)*gconst4);
IkReal x164=(gconst3*gconst8);
IkReal x165=((0.17)*gconst6);
IkReal x166=((1.13)*gconst5);
IkReal x167=((1.2769)*gconst5);
IkReal x168=(gconst0*gconst5);
IkReal x169=((0.17)*gconst4);
IkReal x170=(gconst5*gconst8);
IkReal x171=(gconst12*gconst9);
IkReal x172=((0.6529)*gconst1);
IkReal x173=(gconst1*gconst2);
IkReal x174=((0.17)*gconst10);
IkReal x175=((0.17)*gconst12);
IkReal x176=((0.520704)*cj0);
IkReal x177=(cj0*gconst4);
IkReal x178=((0.4608)*gconst11);
IkReal x179=(gconst2*gconst9);
IkReal x180=((0.2304)*gconst1);
IkReal x181=(gconst0*gconst3);
IkReal x182=((0.17)*gconst0);
IkReal x183=(gconst1*gconst13);
IkReal x184=(gconst13*gconst6);
IkReal x185=(gconst10*gconst13);
IkReal x186=((0.17)*gconst2);
IkReal x187=(gconst10*gconst9);
IkReal x188=((0.4608)*gconst3);
IkReal x189=(gconst10*gconst5);
IkReal x190=(cj0*gconst12);
IkReal x191=((0.0289)*gconst12);
IkReal x192=(gconst3*gconst6);
IkReal x193=((0.078336)*x190);
IkReal x194=((0.2304)*x171);
IkReal x195=(gconst9*x176);
IkReal x196=((0.2304)*x145);
IkReal x197=(gconst12*x180);
IkReal x198=((0.078336)*x177);
IkReal x199=(gconst1*x176);
IkReal x200=(gconst4*x180);
IkReal x201=((0.4608)*cj0*gconst9);
IkReal x202=((1.0)*x181);
IkReal x203=((0.4608)*cj0*gconst1);
IkReal x204=((1.041408)*x141);
IkReal x205=((1.0)*x187);
IkReal x206=((0.9216)*x141);
IkReal x207=((0.156672)*x141);
IkReal x208=(gconst14*x201);
IkReal x209=(x178*x190);
IkReal x210=(gconst6*x201);
IkReal x211=(gconst14*x203);
IkReal x212=(x177*x178);
IkReal x213=(x188*x190);
IkReal x214=(gconst6*x203);
IkReal x215=(x177*x188);
IkReal x216=(gconst14*x206);
IkReal x217=(x193+x195);
IkReal x218=(x197+x196);
IkReal x219=(x199+x198);
IkReal x220=(x209+x208);
IkReal x221=(x214+x215);
IkReal x222=(x210+x211+x212+x213);
op[0]=(((x144*x187))+(((-1.0)*x144*x159))+(((-1.0)*x194))+(((-1.0)*x148*x205))+((x148*x159)));
op[1]=((((-1.0)*x159*x175))+((x144*x150))+(((-1.0)*x144*x162))+(((-1.0)*x150*x185))+((x147*x161))+x220+((x171*x174))+(((-1.0)*x148*x150))+((x159*x160)));
op[2]=(((x149*x159))+((x142*x148))+(((-1.0)*gconst11*x216))+((x144*x179))+((x151*x187))+(((-1.0)*x184*x205))+(((0.1921)*x161))+((x144*x155))+(((-1.0)*x142*x144))+(((-1.2769)*gconst13*gconst9))+((gconst10*gconst15*x145))+(((-1.0)*x144*x164))+(((0.6529)*x171))+(((-1.0)*x149*x205))+((x148*x164))+(((-1.0)*x151*x159))+x217+(((-1.0)*gconst8*x191))+(((-1.0)*x218))+(((-1.0)*x154*x159))+(((-1.0)*x148*x155))+(((-1.0)*gconst9*x148*x152))+((x159*x184)));
op[3]=((((-1.0)*x154*x162))+((x161*x165))+(((-1.0)*x142*x175))+(((-1.0)*x144*x182))+(((-1.0)*gconst14*x207))+(((-1.0)*x153*x185))+(((-1.0)*gconst12*gconst3*x162))+(((-1.0)*x159*x169))+((x144*x153))+(((-1.0)*x150*x184))+(((-1.0)*x150*x189))+((x150*x151))+(((-1.0)*x150*x157))+(((-1.0)*x151*x162))+x222+((x145*x174))+((x171*x186))+((x147*x170))+(((-1.0)*x148*x153))+((x155*x175))+((x146*x147))+(((-1.0)*x149*x150))+(((-1.0)*gconst11*x204))+((x159*x166))+((x160*x164))+(((-1.0)*x220))+((x142*x160))+(((1.13)*gconst15*x145)));
op[4]=((((-1.0)*gconst0*x191))+(((-1.0)*x144*x202))+((x142*x149))+((x144*x173))+(((-1.0)*x142*x154))+(((-1.0)*x142*x151))+(((0.1921)*x170))+(((-1.0)*x149*x155))+((x161*x192))+((x149*x164))+((x151*x179))+(((0.1921)*x146))+(((-1.2769)*x183))+(((-1.0)*x194))+(((-1.0)*gconst9*x167))+((x151*x155))+(((-1.0)*x151*x164))+((gconst12*x172))+(((-1.0)*x200))+(((-1.0)*gconst3*x216))+(((-1.0)*gconst8*x163))+((gconst14*gconst3*x146))+(((-0.17703936)*x141))+(((-1.0)*x158*x159))+x219+((x154*x155))+(((-1.0)*gconst9*x152*x184))+(((-1.0)*gconst11*gconst6*x206))+(((-1.0)*x154*x164))+((gconst15*gconst2*x145))+((gconst10*gconst7*x145))+(((0.6529)*x145))+(((-1.0)*x143*x205))+(((-1.0)*x217))+((x142*x184))+((x143*x159))+(((-1.0)*gconst9*x149*x152))+(((-1.0)*x155*x184))+(((-1.0)*gconst1*x148*x152)));
op[5]=(((x153*x154))+(((-1.0)*x142*x169))+((x143*x162))+(((-1.0)*x158*x162))+(((-1.0)*x153*x189))+(((-1.0)*x153*x184))+(((-1.0)*x153*x157))+(((-1.0)*x143*x150))+(((-1.0)*x154*x182))+(((1.13)*gconst3*x146))+(((-1.0)*gconst3*x204))+(((-1.0)*x151*x182))+(((-1.0)*x150*x156))+((x173*x175))+((x151*x153))+((x147*x168))+((x164*x166))+x221+((x146*x165))+((x145*x186))+(((-1.0)*gconst3*gconst4*x162))+((x155*x169))+(((-1.0)*x175*x181))+(((1.13)*gconst7*x145))+(((-1.0)*gconst6*x207))+(((-1.0)*x149*x153))+(((-1.0)*x222))+((x142*x166)));
op[6]=(((gconst4*x172))+((x142*x143))+(((-1.0)*x154*x202))+((x143*x164))+(((-1.0)*gconst9*x143*x152))+(((-1.0)*x192*x206))+(((-1.0)*x142*x158))+(((0.1921)*x168))+(((-1.0)*x143*x155))+((gconst2*gconst7*x145))+((x151*x173))+((x149*x181))+((x155*x158))+(((-1.0)*x158*x164))+((x146*x192))+(((-1.0)*gconst1*x167))+((x154*x173))+(((-1.0)*gconst0*x163))+(((-1.0)*x219))+(((-1.0)*x218))+(((-1.0)*gconst6*x152*x183))+(((-1.0)*gconst1*x149*x152))+(((-1.0)*x151*x202)));
op[7]=(((x153*x158))+(((-1.0)*x153*x156))+(((-1.0)*x143*x153))+((x169*x173))+(((-1.0)*x158*x182))+((x166*x181))+(((-1.0)*x169*x181))+(((-1.0)*x221))+((x143*x182)));
op[8]=((((-1.0)*x158*x202))+(((-1.0)*gconst1*x143*x152))+(((-1.0)*x200))+((x158*x173))+((x143*x181)));
polyroots8(op,zeror,numroots);
IkReal j1array[8], cj1array[8], sj1array[8], tempj1array[1];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ++ij1)
{
IkReal htj1 = zeror[ij1];
tempj1array[0]=((2.0)*(atan(htj1)));
for(int kj1 = 0; kj1 < 1; ++kj1)
{
j1array[numsolutions] = tempj1array[kj1];
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
sj1array[numsolutions] = IKsin(j1array[numsolutions]);
cj1array[numsolutions] = IKcos(j1array[numsolutions]);
numsolutions++;
}
}
bool j1valid[8]={true,true,true,true,true,true,true,true};
_nj1 = 8;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
htj1 = IKtan(j1/2);

_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x223=(sj1*sj5);
IkReal x224=((0.22)*r00);
IkReal x225=((4.16666666666667)*cj1);
IkReal x226=(cj1*cj5);
IkReal x227=((0.165)*r20);
IkReal x228=((4.16666666666667)*sj1);
IkReal x229=((0.22)*r01);
IkReal x230=((0.165)*r21);
IkReal x231=((0.22)*r20);
IkReal x232=((0.165)*r01);
IkReal x233=(cj5*sj1);
IkReal x234=((0.165)*r00);
IkReal x235=(cj1*sj5);
IkReal x236=((0.22)*r21);
if( IKabs(((((-1.0)*x233*x234))+(((-1.0)*x230*x235))+((x229*x233))+((pz*x225))+((x223*x224))+(((-1.0)*x226*x236))+(((-1.0)*x231*x235))+((x226*x227))+(((-1.0)*px*x228))+((x223*x232)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35416666666667)+(((-1.0)*x233*x236))+(((-1.0)*x224*x235))+((pz*x228))+((x226*x234))+((px*x225))+((x227*x233))+(((-1.0)*x223*x230))+(((-1.0)*x223*x231))+(((-1.0)*x226*x229))+(((-1.0)*x232*x235)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x233*x234))+(((-1.0)*x230*x235))+((x229*x233))+((pz*x225))+((x223*x224))+(((-1.0)*x226*x236))+(((-1.0)*x231*x235))+((x226*x227))+(((-1.0)*px*x228))+((x223*x232))))+IKsqr(((-1.35416666666667)+(((-1.0)*x233*x236))+(((-1.0)*x224*x235))+((pz*x228))+((x226*x234))+((px*x225))+((x227*x233))+(((-1.0)*x223*x230))+(((-1.0)*x223*x231))+(((-1.0)*x226*x229))+(((-1.0)*x232*x235))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x233*x234))+(((-1.0)*x230*x235))+((x229*x233))+((pz*x225))+((x223*x224))+(((-1.0)*x226*x236))+(((-1.0)*x231*x235))+((x226*x227))+(((-1.0)*px*x228))+((x223*x232))), ((-1.35416666666667)+(((-1.0)*x233*x236))+(((-1.0)*x224*x235))+((pz*x228))+((x226*x234))+((px*x225))+((x227*x233))+(((-1.0)*x223*x230))+(((-1.0)*x223*x231))+(((-1.0)*x226*x229))+(((-1.0)*x232*x235))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x237=IKcos(j2);
IkReal x238=IKsin(j2);
IkReal x239=((0.24)*sj1);
IkReal x240=((0.0528)*sj5);
IkReal x241=((0.0528)*cj5);
IkReal x242=((0.0396)*cj5);
IkReal x243=((0.0396)*sj5);
IkReal x244=((0.24)*cj1);
evalcond[0]=(((x237*x239))+(((0.325)*sj1))+((x238*x244))+(((-1.0)*pz))+((r21*x241))+((r21*x243))+((r20*x240))+(((-1.0)*r20*x242)));
evalcond[1]=(((x237*x244))+(((-1.0)*x238*x239))+(((-1.0)*px))+(((0.325)*cj1))+(((-1.0)*r00*x242))+((r01*x241))+((r01*x243))+((r00*x240)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x245=(r02*sj4);
IkReal x246=((0.8)*cj4);
IkReal x247=(cj5*r00);
IkReal x248=(r01*sj5);
IkReal x249=((1.33333333333333)*cj4);
IkReal x250=((0.6)*cj4);
IkReal x251=(cj5*r01);
IkReal x252=(r00*sj5);
IkReal x253=((1.0)*cj4);
j3eval[0]=((((-1.0)*x252*x253))+(((-1.0)*x251*x253))+((x248*x249))+(((1.66666666666667)*x245))+(((-1.0)*x247*x249)));
j3eval[1]=IKsign(((((-1.0)*x250*x251))+(((-1.0)*x250*x252))+x245+(((-1.0)*x246*x247))+((x246*x248))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x254=cj4*cj4;
IkReal x255=cj5*cj5;
IkReal x256=(cj5*r01);
IkReal x257=(r00*sj5);
IkReal x258=(r01*sj5);
IkReal x259=(r01*r11);
IkReal x260=(r00*r10);
IkReal x261=(cj5*r00);
IkReal x262=(cj4*r12*sj4);
IkReal x263=(r11*x254);
IkReal x264=(r10*x254);
IkReal x265=(r00*x255);
IkReal x266=(r01*x255);
IkReal x267=(cj4*cj5*r02*sj4);
IkReal x268=(r02*r12*x254);
IkReal x269=(cj4*r02*r11*sj4*sj5);
IkReal x270=(cj4*r02*r10*sj4*sj5);
j3eval[0]=((((3.42857142857143)*sj5*x256*x263))+(((-2.85714285714286)*x258*x262))+((sj5*x256*x264))+(((1.71428571428571)*r00*x263))+(((-1.28571428571429)*x254*x260))+(((2.14285714285714)*x257*x262))+(((-3.42857142857143)*cj5*x257*x264))+(((-3.42857142857143)*x264*x266))+(((3.57142857142857)*x260))+(((3.57142857142857)*x268))+(((-3.42857142857143)*x263*x265))+(((2.85714285714286)*r10*x267))+(((-2.85714285714286)*x269))+(((2.85714285714286)*x261*x262))+(((2.14285714285714)*r11*x267))+(((3.57142857142857)*x259))+(((-1.0)*x254*x255*x260))+(((2.14285714285714)*x270))+(((-2.28571428571429)*x254*x259))+(((1.71428571428571)*r01*x264))+((cj5*x257*x263))+(((2.14285714285714)*x256*x262))+((x254*x255*x259)));
j3eval[1]=IKsign(((((-0.96)*cj5*x257*x264))+(((0.8)*x261*x262))+(((-0.96)*x264*x266))+(((0.28)*sj5*x256*x264))+(((0.8)*r10*x267))+(((-0.8)*x269))+(((-0.8)*x258*x262))+(((-0.96)*x263*x265))+(((0.48)*r01*x264))+(((0.28)*x254*x255*x259))+(((0.6)*x256*x262))+x259+x260+x268+(((-0.64)*x254*x259))+(((-0.36)*x254*x260))+(((0.6)*x257*x262))+(((0.6)*x270))+(((-0.28)*x254*x255*x260))+(((0.28)*cj5*x257*x263))+(((0.96)*sj5*x256*x263))+(((0.48)*r00*x263))+(((0.6)*r11*x267))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x271=cj4*cj4;
IkReal x272=cj5*cj5;
IkReal x273=(cj1*cj2);
IkReal x274=((0.8)*r10);
IkReal x275=(cj5*sj4);
IkReal x276=((0.6)*r11);
IkReal x277=(r01*r11);
IkReal x278=(cj4*r12);
IkReal x279=(r01*r10);
IkReal x280=(cj4*r02);
IkReal x281=((0.6)*r10);
IkReal x282=(sj1*sj2);
IkReal x283=(r00*r11);
IkReal x284=(sj4*sj5);
IkReal x285=((0.8)*r11);
IkReal x286=(cj5*sj5);
IkReal x287=(r00*r10);
IkReal x288=((0.48)*x271);
IkReal x289=((0.96)*x271);
IkReal x290=((0.28)*x271);
CheckValue<IkReal> x291=IKPowWithIntegerCheck(IKsign((((x279*x286*x290))+(((-0.64)*x271*x277))+(((-1.0)*x286*x287*x289))+((x279*x288))+((x280*x281*x284))+(((-0.36)*x271*x287))+(((-1.0)*x272*x287*x290))+(((-0.8)*r01*x278*x284))+((x272*x277*x290))+((x275*x276*x280))+((x283*x286*x290))+(((0.6)*r01*x275*x278))+x277+x287+(((0.8)*r00*x275*x278))+(((-1.0)*x272*x279*x289))+(((-1.0)*x280*x284*x285))+((x274*x275*x280))+(((0.6)*r00*x278*x284))+((x277*x286*x289))+(((-1.0)*x272*x283*x289))+((x283*x288))+((r02*r12*x271)))),-1);
if(!x291.valid){
continue;
}
CheckValue<IkReal> x292 = IKatan2WithCheck(IkReal(((((-1.0)*sj5*x273*x276))+(((-1.0)*sj5*x273*x274))+((sj5*x276*x282))+((cj5*x282*x285))+((sj5*x274*x282))+(((-1.0)*cj5*x281*x282))+(((-1.0)*cj5*x273*x285))+((cj5*x273*x281)))),IkReal((((x273*x278))+(((-1.0)*x275*x276*x282))+(((-1.0)*x274*x275*x282))+((x273*x281*x284))+(((-1.0)*x273*x284*x285))+((x273*x275*x276))+(((-1.0)*x278*x282))+((x282*x284*x285))+((x273*x274*x275))+(((-1.0)*x281*x282*x284)))),IKFAST_ATAN2_MAGTHRESH);
if(!x292.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x291.value)))+(x292.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x293=IKcos(j3);
IkReal x294=IKsin(j3);
IkReal x295=(sj1*sj2);
IkReal x296=((1.0)*cj1);
IkReal x297=((0.6)*r20);
IkReal x298=((0.8)*r21);
IkReal x299=(sj4*sj5);
IkReal x300=((0.8)*r11);
IkReal x301=((0.8)*sj4);
IkReal x302=((0.6)*sj4);
IkReal x303=(r01*sj5);
IkReal x304=((0.8)*r01);
IkReal x305=(cj2*sj1);
IkReal x306=((0.6)*r10);
IkReal x307=((0.8)*r00);
IkReal x308=((0.6)*r00);
IkReal x309=((0.8)*r10);
IkReal x310=((0.8)*r20);
IkReal x311=(cj2*x296);
IkReal x312=(cj5*x294);
IkReal x313=(cj5*x293);
IkReal x314=((0.6)*x293);
IkReal x315=(cj4*x294);
IkReal x316=(sj5*x294);
IkReal x317=(cj4*x293);
IkReal x318=(sj5*x293);
evalcond[0]=(((x300*x313))+((r11*sj5*x314))+((x309*x318))+(((-1.0)*x306*x313))+((r10*x301*x312))+((x294*x299*x306))+((r11*x302*x312))+((r12*x315))+(((-1.0)*x294*x299*x300)));
evalcond[1]=(((x293*x299*x306))+(((-0.6)*r11*x316))+((r10*x301*x313))+((x306*x312))+(((-1.0)*x300*x312))+(((-1.0)*x293*x299*x300))+((r11*x302*x313))+(((-1.0)*x309*x316))+((r12*x317)));
evalcond[2]=(((r01*x302*x312))+((x304*x313))+((r02*x315))+((cj1*sj2))+(((-1.0)*x308*x313))+x305+((x307*x318))+((x294*x299*x308))+((r00*x301*x312))+((x303*x314))+(((-1.0)*x294*x299*x304)));
evalcond[3]=(((x310*x318))+(((-1.0)*x297*x313))+((x294*x297*x299))+((r20*x301*x312))+((x298*x313))+((r21*sj5*x314))+x295+((r21*x302*x312))+(((-1.0)*x311))+(((-1.0)*x294*x298*x299))+((r22*x315)));
evalcond[4]=(((r01*x302*x313))+(((-0.6)*x294*x303))+((x293*x299*x308))+((r02*x317))+((x308*x312))+x295+(((-1.0)*x311))+(((-1.0)*x304*x312))+(((-1.0)*x307*x316))+(((-1.0)*x293*x299*x304))+((r00*x301*x313)));
evalcond[5]=((((-0.6)*r21*x316))+(((-1.0)*x310*x316))+(((-1.0)*x293*x298*x299))+((r20*x301*x313))+((x297*x312))+(((-1.0)*x305))+((r21*x302*x313))+(((-1.0)*sj2*x296))+((x293*x297*x299))+(((-1.0)*x298*x312))+((r22*x317)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x319=((0.8)*sj5);
IkReal x320=((0.6)*cj5);
IkReal x321=((0.6)*sj5);
IkReal x322=(sj1*sj2);
IkReal x323=(cj4*r12);
IkReal x324=(r11*sj4);
IkReal x325=((0.8)*cj5);
IkReal x326=(cj1*cj2*r10);
IkReal x327=(r10*x322);
IkReal x328=(sj4*x325);
IkReal x329=(cj1*cj2*r11);
CheckValue<IkReal> x330 = IKatan2WithCheck(IkReal(((((-1.0)*x321*x329))+((x320*x326))+(((-1.0)*x325*x329))+((r11*x321*x322))+(((-1.0)*x320*x327))+(((-1.0)*x319*x326))+((r11*x322*x325))+((x319*x327)))),IkReal(((((-1.0)*x322*x323))+((sj4*x321*x326))+((x326*x328))+(((-1.0)*cj1*cj2*x319*x324))+(((-1.0)*x327*x328))+((x319*x322*x324))+(((-1.0)*sj4*x321*x327))+((cj1*cj2*x320*x324))+((cj1*cj2*x323))+(((-1.0)*x320*x322*x324)))),IKFAST_ATAN2_MAGTHRESH);
if(!x330.valid){
continue;
}
CheckValue<IkReal> x331=IKPowWithIntegerCheck(IKsign((((r01*((((cj4*x319))+(((-1.0)*cj4*x320))))))+((r02*sj4))+((r00*(((((-1.0)*cj4*x321))+(((-1.0)*cj4*x325)))))))),-1);
if(!x331.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x330.value)+(((1.5707963267949)*(x331.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x332=IKcos(j3);
IkReal x333=IKsin(j3);
IkReal x334=(sj1*sj2);
IkReal x335=((1.0)*cj1);
IkReal x336=((0.6)*r20);
IkReal x337=((0.8)*r21);
IkReal x338=(sj4*sj5);
IkReal x339=((0.8)*r11);
IkReal x340=((0.8)*sj4);
IkReal x341=((0.6)*sj4);
IkReal x342=(r01*sj5);
IkReal x343=((0.8)*r01);
IkReal x344=(cj2*sj1);
IkReal x345=((0.6)*r10);
IkReal x346=((0.8)*r00);
IkReal x347=((0.6)*r00);
IkReal x348=((0.8)*r10);
IkReal x349=((0.8)*r20);
IkReal x350=(cj2*x335);
IkReal x351=(cj5*x333);
IkReal x352=(cj5*x332);
IkReal x353=((0.6)*x332);
IkReal x354=(cj4*x333);
IkReal x355=(sj5*x333);
IkReal x356=(cj4*x332);
IkReal x357=(sj5*x332);
evalcond[0]=(((r12*x354))+((r11*x341*x351))+(((-1.0)*x345*x352))+((r10*x340*x351))+((r11*sj5*x353))+((x348*x357))+((x333*x338*x345))+(((-1.0)*x333*x338*x339))+((x339*x352)));
evalcond[1]=(((r12*x356))+((x345*x351))+((r11*x341*x352))+(((-1.0)*x348*x355))+((r10*x340*x352))+(((-1.0)*x339*x351))+((x332*x338*x345))+(((-1.0)*x332*x338*x339))+(((-0.6)*r11*x355)));
evalcond[2]=(((cj1*sj2))+((x346*x357))+(((-1.0)*x333*x338*x343))+x344+((x342*x353))+(((-1.0)*x347*x352))+((x343*x352))+((x333*x338*x347))+((r01*x341*x351))+((r02*x354))+((r00*x340*x351)));
evalcond[3]=(((x333*x336*x338))+((r21*sj5*x353))+((x337*x352))+(((-1.0)*x350))+x334+((r22*x354))+((x349*x357))+((r21*x341*x351))+(((-1.0)*x336*x352))+(((-1.0)*x333*x337*x338))+((r20*x340*x351)));
evalcond[4]=((((-1.0)*x350))+(((-1.0)*x346*x355))+x334+(((-1.0)*x343*x351))+((x347*x351))+((x332*x338*x347))+(((-0.6)*x333*x342))+((r01*x341*x352))+(((-1.0)*x332*x338*x343))+((r02*x356))+((r00*x340*x352)));
evalcond[5]=((((-1.0)*sj2*x335))+(((-1.0)*x332*x337*x338))+(((-1.0)*x349*x355))+((x336*x351))+((r22*x356))+((r21*x341*x352))+(((-0.6)*r21*x355))+(((-1.0)*x337*x351))+((x332*x336*x338))+((r20*x340*x352))+(((-1.0)*x344)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x358=(sj1*sj5);
IkReal x359=((0.22)*r00);
IkReal x360=((4.16666666666667)*cj1);
IkReal x361=(cj1*cj5);
IkReal x362=((0.165)*r20);
IkReal x363=((4.16666666666667)*sj1);
IkReal x364=((0.22)*r01);
IkReal x365=((0.165)*r21);
IkReal x366=((0.22)*r20);
IkReal x367=((0.165)*r01);
IkReal x368=(cj5*sj1);
IkReal x369=((0.165)*r00);
IkReal x370=(cj1*sj5);
IkReal x371=((0.22)*r21);
if( IKabs((((x361*x362))+(((-1.0)*x361*x371))+(((-1.0)*x358*x367))+(((-1.0)*x366*x370))+(((-1.0)*x358*x359))+((px*x363))+((pz*x360))+(((-1.0)*x364*x368))+((x368*x369))+(((-1.0)*x365*x370)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35416666666667)+((x361*x364))+((x367*x370))+(((-1.0)*x368*x371))+(((-1.0)*x361*x369))+(((-1.0)*x358*x366))+(((-1.0)*x358*x365))+((x359*x370))+((pz*x363))+(((-1.0)*px*x360))+((x362*x368)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x361*x362))+(((-1.0)*x361*x371))+(((-1.0)*x358*x367))+(((-1.0)*x366*x370))+(((-1.0)*x358*x359))+((px*x363))+((pz*x360))+(((-1.0)*x364*x368))+((x368*x369))+(((-1.0)*x365*x370))))+IKsqr(((-1.35416666666667)+((x361*x364))+((x367*x370))+(((-1.0)*x368*x371))+(((-1.0)*x361*x369))+(((-1.0)*x358*x366))+(((-1.0)*x358*x365))+((x359*x370))+((pz*x363))+(((-1.0)*px*x360))+((x362*x368))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x361*x362))+(((-1.0)*x361*x371))+(((-1.0)*x358*x367))+(((-1.0)*x366*x370))+(((-1.0)*x358*x359))+((px*x363))+((pz*x360))+(((-1.0)*x364*x368))+((x368*x369))+(((-1.0)*x365*x370))), ((-1.35416666666667)+((x361*x364))+((x367*x370))+(((-1.0)*x368*x371))+(((-1.0)*x361*x369))+(((-1.0)*x358*x366))+(((-1.0)*x358*x365))+((x359*x370))+((pz*x363))+(((-1.0)*px*x360))+((x362*x368))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x372=IKsin(j2);
IkReal x373=IKcos(j2);
IkReal x374=((0.24)*sj1);
IkReal x375=((0.0528)*cj5);
IkReal x376=((0.0396)*cj5);
IkReal x377=((0.0396)*sj5);
IkReal x378=((0.24)*cj1);
IkReal x379=((0.0528)*sj5);
evalcond[0]=((((-1.0)*r20*x376))+((r20*x379))+(((0.325)*sj1))+((x372*x378))+(((-1.0)*pz))+((r21*x375))+((r21*x377))+((x373*x374)));
evalcond[1]=((((-1.0)*r00*x376))+((r00*x379))+((r01*x377))+((r01*x375))+((x372*x374))+(((-1.0)*px))+(((-1.0)*x373*x378))+(((-0.325)*cj1)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x380=(r02*sj4);
IkReal x381=((0.8)*cj4);
IkReal x382=(cj5*r00);
IkReal x383=(r01*sj5);
IkReal x384=((1.33333333333333)*cj4);
IkReal x385=((0.6)*cj4);
IkReal x386=(cj5*r01);
IkReal x387=(r00*sj5);
IkReal x388=((1.0)*cj4);
j3eval[0]=(((x383*x384))+(((-1.0)*x387*x388))+(((1.66666666666667)*x380))+(((-1.0)*x386*x388))+(((-1.0)*x382*x384)));
j3eval[1]=IKsign(((((-1.0)*x381*x382))+x380+(((-1.0)*x385*x387))+(((-1.0)*x385*x386))+((x381*x383))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x389=cj4*cj4;
IkReal x390=cj5*cj5;
IkReal x391=(cj5*r01);
IkReal x392=(r00*sj5);
IkReal x393=(r01*sj5);
IkReal x394=(r01*r11);
IkReal x395=(r00*r10);
IkReal x396=(cj5*r00);
IkReal x397=(cj4*r12*sj4);
IkReal x398=(r11*x389);
IkReal x399=(r10*x389);
IkReal x400=(r00*x390);
IkReal x401=(r01*x390);
IkReal x402=(cj4*cj5*r02*sj4);
IkReal x403=(r02*r12*x389);
IkReal x404=(cj4*r02*r11*sj4*sj5);
IkReal x405=(cj4*r02*r10*sj4*sj5);
j3eval[0]=((((2.14285714285714)*r11*x402))+(((1.71428571428571)*r00*x398))+(((2.14285714285714)*x392*x397))+(((-2.85714285714286)*x404))+(((-3.42857142857143)*x399*x401))+(((-1.0)*x389*x390*x395))+(((1.71428571428571)*r01*x399))+(((2.14285714285714)*x405))+(((3.42857142857143)*sj5*x391*x398))+(((3.57142857142857)*x403))+(((2.14285714285714)*x391*x397))+(((-2.85714285714286)*x393*x397))+(((2.85714285714286)*r10*x402))+((x389*x390*x394))+((cj5*x392*x398))+(((3.57142857142857)*x394))+(((3.57142857142857)*x395))+(((2.85714285714286)*x396*x397))+(((-2.28571428571429)*x389*x394))+(((-3.42857142857143)*cj5*x392*x399))+(((-1.28571428571429)*x389*x395))+((sj5*x391*x399))+(((-3.42857142857143)*x398*x400)));
j3eval[1]=IKsign(((((0.6)*x392*x397))+(((0.8)*x396*x397))+(((0.96)*sj5*x391*x398))+(((-0.96)*x398*x400))+(((-0.96)*x399*x401))+(((-0.28)*x389*x390*x395))+(((0.28)*x389*x390*x394))+(((-0.36)*x389*x395))+x395+x394+(((0.48)*r00*x398))+x403+(((0.6)*x391*x397))+(((0.28)*sj5*x391*x399))+(((-0.64)*x389*x394))+(((-0.8)*x393*x397))+(((0.48)*r01*x399))+(((0.6)*x405))+(((-0.8)*x404))+(((0.28)*cj5*x392*x398))+(((-0.96)*cj5*x392*x399))+(((0.6)*r11*x402))+(((0.8)*r10*x402))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x406=cj4*cj4;
IkReal x407=cj5*cj5;
IkReal x408=(cj1*cj2);
IkReal x409=((0.8)*r10);
IkReal x410=(cj5*sj4);
IkReal x411=((0.6)*r11);
IkReal x412=(r01*r11);
IkReal x413=(cj4*r12);
IkReal x414=(r01*r10);
IkReal x415=(cj4*r02);
IkReal x416=((0.6)*r10);
IkReal x417=(sj1*sj2);
IkReal x418=(r00*r11);
IkReal x419=(sj4*sj5);
IkReal x420=((0.8)*r11);
IkReal x421=(cj5*sj5);
IkReal x422=(r00*r10);
IkReal x423=((0.48)*x406);
IkReal x424=((0.96)*x406);
IkReal x425=((0.28)*x406);
CheckValue<IkReal> x426=IKPowWithIntegerCheck(IKsign(((((-0.64)*x406*x412))+(((0.8)*r00*x410*x413))+((x410*x411*x415))+((x418*x421*x425))+(((-1.0)*x407*x414*x424))+(((-1.0)*x415*x419*x420))+((x412*x421*x424))+((x414*x423))+(((-0.8)*r01*x413*x419))+(((-1.0)*x407*x418*x424))+((x415*x416*x419))+((x418*x423))+((x409*x410*x415))+((x414*x421*x425))+x412+x422+(((-0.36)*x406*x422))+(((0.6)*r01*x410*x413))+(((-1.0)*x421*x422*x424))+((x407*x412*x425))+(((-1.0)*x407*x422*x425))+((r02*r12*x406))+(((0.6)*r00*x413*x419)))),-1);
if(!x426.valid){
continue;
}
CheckValue<IkReal> x427 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*x417*x420))+(((-1.0)*sj5*x409*x417))+((cj5*x416*x417))+(((-1.0)*cj5*x408*x416))+((sj5*x408*x409))+((sj5*x408*x411))+((cj5*x408*x420))+(((-1.0)*sj5*x411*x417)))),IkReal((((x410*x411*x417))+(((-1.0)*x408*x409*x410))+((x413*x417))+((x416*x417*x419))+(((-1.0)*x408*x416*x419))+((x409*x410*x417))+(((-1.0)*x408*x410*x411))+(((-1.0)*x408*x413))+(((-1.0)*x417*x419*x420))+((x408*x419*x420)))),IKFAST_ATAN2_MAGTHRESH);
if(!x427.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x426.value)))+(x427.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x428=IKcos(j3);
IkReal x429=IKsin(j3);
IkReal x430=((1.0)*cj1);
IkReal x431=((0.6)*r20);
IkReal x432=((0.8)*r21);
IkReal x433=((0.8)*r11);
IkReal x434=(sj1*sj2);
IkReal x435=((0.6)*r00);
IkReal x436=((0.8)*sj4);
IkReal x437=((0.6)*r01);
IkReal x438=((0.6)*r11);
IkReal x439=((0.8)*r01);
IkReal x440=((0.6)*r10);
IkReal x441=((0.8)*r00);
IkReal x442=((0.6)*r21);
IkReal x443=((0.8)*r10);
IkReal x444=((0.8)*r20);
IkReal x445=(sj2*x430);
IkReal x446=((1.0)*cj2*sj1);
IkReal x447=(cj5*x429);
IkReal x448=(cj5*x428);
IkReal x449=(sj5*x428);
IkReal x450=(cj4*x429);
IkReal x451=(sj5*x429);
IkReal x452=(cj4*x428);
IkReal x453=(sj4*x451);
IkReal x454=(x445+x446);
evalcond[0]=(((x440*x453))+(((-1.0)*x433*x453))+((sj4*x438*x447))+((r10*x436*x447))+((r12*x450))+((x438*x449))+((x443*x449))+(((-1.0)*x440*x448))+((x433*x448)));
evalcond[1]=((((-1.0)*x443*x451))+(((-1.0)*x433*x447))+((x440*x447))+((sj4*x440*x449))+(((-1.0)*sj4*x433*x449))+((sj4*x438*x448))+((r10*x436*x448))+((r12*x452))+(((-1.0)*x438*x451)));
evalcond[2]=((((-1.0)*cj2*x430))+((sj4*x442*x447))+(((-1.0)*x431*x448))+(((-1.0)*x432*x453))+x434+((x431*x453))+((x444*x449))+((x442*x449))+((r20*x436*x447))+((r22*x450))+((x432*x448)));
evalcond[3]=(((x435*x447))+((r00*x436*x448))+(((-1.0)*r01*x436*x449))+(((-1.0)*x434))+(((-1.0)*x437*x451))+(((-1.0)*x439*x447))+((r02*x452))+((cj1*cj2))+((sj4*x435*x449))+((sj4*x437*x448))+(((-1.0)*x441*x451)));
evalcond[4]=(((sj4*x442*x448))+(((-1.0)*x432*x447))+(((-1.0)*sj4*x432*x449))+((sj4*x431*x449))+(((-1.0)*x454))+(((-1.0)*x442*x451))+((x431*x447))+(((-1.0)*x444*x451))+((r20*x436*x448))+((r22*x452)));
evalcond[5]=(((x439*x448))+((r00*x436*x447))+(((-1.0)*x435*x448))+(((-1.0)*x454))+((x441*x449))+((r02*x450))+(((-1.0)*r01*x436*x451))+((x435*x453))+((sj4*x437*x447))+((x437*x449)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x455=((0.8)*sj5);
IkReal x456=((0.6)*cj5);
IkReal x457=((0.6)*sj5);
IkReal x458=(sj1*sj2);
IkReal x459=(cj4*r12);
IkReal x460=(r11*sj4);
IkReal x461=((0.8)*cj5);
IkReal x462=(cj1*cj2*r10);
IkReal x463=(r10*x458);
IkReal x464=(sj4*x461);
IkReal x465=(cj1*cj2*r11);
CheckValue<IkReal> x466 = IKatan2WithCheck(IkReal((((x456*x462))+((x455*x463))+((r11*x457*x458))+(((-1.0)*x456*x463))+(((-1.0)*x455*x462))+(((-1.0)*x461*x465))+((r11*x458*x461))+(((-1.0)*x457*x465)))),IkReal(((((-1.0)*sj4*x457*x463))+(((-1.0)*x463*x464))+(((-1.0)*x456*x458*x460))+(((-1.0)*cj1*cj2*x455*x460))+((cj1*cj2*x459))+((x455*x458*x460))+((sj4*x457*x462))+(((-1.0)*x458*x459))+((x462*x464))+((cj1*cj2*x456*x460)))),IKFAST_ATAN2_MAGTHRESH);
if(!x466.valid){
continue;
}
CheckValue<IkReal> x467=IKPowWithIntegerCheck(IKsign((((r01*((((cj4*x455))+(((-1.0)*cj4*x456))))))+((r02*sj4))+((r00*(((((-1.0)*cj4*x461))+(((-1.0)*cj4*x457)))))))),-1);
if(!x467.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x466.value)+(((1.5707963267949)*(x467.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x468=IKcos(j3);
IkReal x469=IKsin(j3);
IkReal x470=((1.0)*cj1);
IkReal x471=((0.6)*r20);
IkReal x472=((0.8)*r21);
IkReal x473=((0.8)*r11);
IkReal x474=(sj1*sj2);
IkReal x475=((0.6)*r00);
IkReal x476=((0.8)*sj4);
IkReal x477=((0.6)*r01);
IkReal x478=((0.6)*r11);
IkReal x479=((0.8)*r01);
IkReal x480=((0.6)*r10);
IkReal x481=((0.8)*r00);
IkReal x482=((0.6)*r21);
IkReal x483=((0.8)*r10);
IkReal x484=((0.8)*r20);
IkReal x485=(sj2*x470);
IkReal x486=((1.0)*cj2*sj1);
IkReal x487=(cj5*x469);
IkReal x488=(cj5*x468);
IkReal x489=(sj5*x468);
IkReal x490=(cj4*x469);
IkReal x491=(sj5*x469);
IkReal x492=(cj4*x468);
IkReal x493=(sj4*x491);
IkReal x494=(x485+x486);
evalcond[0]=(((sj4*x478*x487))+((x483*x489))+((r12*x490))+((x480*x493))+((x478*x489))+(((-1.0)*x480*x488))+(((-1.0)*x473*x493))+((r10*x476*x487))+((x473*x488)));
evalcond[1]=(((sj4*x480*x489))+((sj4*x478*x488))+(((-1.0)*x483*x491))+((r12*x492))+((x480*x487))+((r10*x476*x488))+(((-1.0)*x478*x491))+(((-1.0)*x473*x487))+(((-1.0)*sj4*x473*x489)));
evalcond[2]=(((x484*x489))+((r20*x476*x487))+((x471*x493))+((r22*x490))+x474+((sj4*x482*x487))+(((-1.0)*x471*x488))+(((-1.0)*x472*x493))+((x482*x489))+(((-1.0)*cj2*x470))+((x472*x488)));
evalcond[3]=(((r02*x492))+((x475*x487))+(((-1.0)*r01*x476*x489))+(((-1.0)*x474))+((r00*x476*x488))+(((-1.0)*x479*x487))+(((-1.0)*x481*x491))+((cj1*cj2))+((sj4*x475*x489))+((sj4*x477*x488))+(((-1.0)*x477*x491)));
evalcond[4]=((((-1.0)*x482*x491))+(((-1.0)*sj4*x472*x489))+((x471*x487))+((r20*x476*x488))+(((-1.0)*x494))+((r22*x492))+((sj4*x482*x488))+(((-1.0)*x484*x491))+((sj4*x471*x489))+(((-1.0)*x472*x487)));
evalcond[5]=(((x475*x493))+(((-1.0)*x494))+(((-1.0)*x475*x488))+((r02*x490))+(((-1.0)*r01*x476*x491))+((r00*x476*x487))+((x481*x489))+((x479*x488))+((sj4*x477*x487))+((x477*x489)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x495=((0.22)*sj1);
IkReal x496=(cj5*r11);
IkReal x497=((4.16666666666667)*pz);
IkReal x498=((0.165)*cj1);
IkReal x499=(cj5*r20);
IkReal x500=((0.22)*cj1);
IkReal x501=(r10*sj5);
IkReal x502=(r20*sj5);
IkReal x503=((4.16666666666667)*py);
IkReal x504=((0.165)*sj1);
IkReal x505=(cj5*r21);
IkReal x506=(cj5*r10);
IkReal x507=(sj5*x504);
if( IKabs(((((-1.0)*sj1*x503))+((x495*x496))+((x495*x501))+((r11*x507))+((x498*x499))+(((-1.0)*x504*x506))+((cj1*x497))+(((-1.0)*r21*sj5*x498))+(((-1.0)*x500*x505))+(((-1.0)*x500*x502)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35416666666667)+((cj1*x503))+(((-1.0)*x496*x500))+(((-1.0)*x495*x505))+(((-1.0)*x495*x502))+((sj1*x497))+(((-1.0)*r11*sj5*x498))+((x498*x506))+((x499*x504))+(((-1.0)*x500*x501))+(((-1.0)*r21*x507)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x503))+((x495*x496))+((x495*x501))+((r11*x507))+((x498*x499))+(((-1.0)*x504*x506))+((cj1*x497))+(((-1.0)*r21*sj5*x498))+(((-1.0)*x500*x505))+(((-1.0)*x500*x502))))+IKsqr(((-1.35416666666667)+((cj1*x503))+(((-1.0)*x496*x500))+(((-1.0)*x495*x505))+(((-1.0)*x495*x502))+((sj1*x497))+(((-1.0)*r11*sj5*x498))+((x498*x506))+((x499*x504))+(((-1.0)*x500*x501))+(((-1.0)*r21*x507))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x503))+((x495*x496))+((x495*x501))+((r11*x507))+((x498*x499))+(((-1.0)*x504*x506))+((cj1*x497))+(((-1.0)*r21*sj5*x498))+(((-1.0)*x500*x505))+(((-1.0)*x500*x502))), ((-1.35416666666667)+((cj1*x503))+(((-1.0)*x496*x500))+(((-1.0)*x495*x505))+(((-1.0)*x495*x502))+((sj1*x497))+(((-1.0)*r11*sj5*x498))+((x498*x506))+((x499*x504))+(((-1.0)*x500*x501))+(((-1.0)*r21*x507))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x508=IKcos(j2);
IkReal x509=IKsin(j2);
IkReal x510=((0.24)*sj1);
IkReal x511=((0.0528)*sj5);
IkReal x512=((0.24)*cj1);
IkReal x513=((0.0396)*sj5);
IkReal x514=((0.0396)*cj5);
IkReal x515=((0.0528)*cj5);
evalcond[0]=((((0.325)*sj1))+((r20*x511))+(((-1.0)*pz))+(((-1.0)*r20*x514))+((r21*x513))+((r21*x515))+((x508*x510))+((x509*x512)));
evalcond[1]=(((r11*x513))+((r11*x515))+(((-1.0)*py))+((r10*x511))+(((0.325)*cj1))+((x508*x512))+(((-1.0)*x509*x510))+(((-1.0)*r10*x514)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x516=(r12*sj4);
IkReal x517=(cj4*r11);
IkReal x518=(cj4*cj5*r10);
IkReal x519=(cj4*r10*sj5);
j3eval[0]=(((cj5*x517))+(((-1.33333333333333)*sj5*x517))+(((-1.66666666666667)*x516))+(((1.33333333333333)*x518))+x519);
j3eval[1]=IKsign(((((0.8)*x518))+(((0.6)*x519))+(((-1.0)*x516))+(((0.6)*cj5*x517))+(((-0.8)*sj5*x517))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x520=cj4*cj4;
IkReal x521=cj5*cj5;
IkReal x522=(cj5*r01);
IkReal x523=(r00*sj5);
IkReal x524=(r01*sj5);
IkReal x525=(r01*r11);
IkReal x526=(r00*r10);
IkReal x527=(cj5*r00);
IkReal x528=(cj4*r12*sj4);
IkReal x529=(r11*x520);
IkReal x530=(r10*x520);
IkReal x531=(r00*x521);
IkReal x532=(r01*x521);
IkReal x533=(cj4*cj5*r02*sj4);
IkReal x534=(r02*r12*x520);
IkReal x535=(cj4*r02*r11*sj4*sj5);
IkReal x536=(cj4*r02*r10*sj4*sj5);
j3eval[0]=((((2.85714285714286)*x527*x528))+(((-1.28571428571429)*x520*x526))+(((3.57142857142857)*x526))+(((3.57142857142857)*x525))+(((3.57142857142857)*x534))+(((1.71428571428571)*r00*x529))+(((2.14285714285714)*x523*x528))+(((2.14285714285714)*x522*x528))+((cj5*x523*x529))+(((-3.42857142857143)*x529*x531))+(((1.71428571428571)*r01*x530))+(((-2.28571428571429)*x520*x525))+(((-1.0)*x520*x521*x526))+(((-2.85714285714286)*x524*x528))+((sj5*x522*x530))+((x520*x521*x525))+(((2.14285714285714)*x536))+(((3.42857142857143)*sj5*x522*x529))+(((-3.42857142857143)*cj5*x523*x530))+(((-3.42857142857143)*x530*x532))+(((2.85714285714286)*r10*x533))+(((2.14285714285714)*r11*x533))+(((-2.85714285714286)*x535)));
j3eval[1]=IKsign(((((0.6)*x523*x528))+(((-0.96)*cj5*x523*x530))+(((0.28)*cj5*x523*x529))+(((0.28)*sj5*x522*x530))+(((0.6)*x536))+(((0.96)*sj5*x522*x529))+(((-0.96)*x529*x531))+(((0.8)*x527*x528))+(((0.6)*x522*x528))+x534+x526+x525+(((-0.96)*x530*x532))+(((0.6)*r11*x533))+(((-0.8)*x524*x528))+(((0.8)*r10*x533))+(((0.28)*x520*x521*x525))+(((-0.28)*x520*x521*x526))+(((-0.64)*x520*x525))+(((0.48)*r00*x529))+(((-0.36)*x520*x526))+(((0.48)*r01*x530))+(((-0.8)*x535))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x537=cj4*cj4;
IkReal x538=cj5*cj5;
IkReal x539=(r00*sj5);
IkReal x540=(cj4*r02);
IkReal x541=(sj1*sj2);
IkReal x542=(cj5*r01);
IkReal x543=(cj1*cj2);
IkReal x544=(r01*r11);
IkReal x545=(cj4*r12);
IkReal x546=((0.6)*sj4);
IkReal x547=(r01*r10);
IkReal x548=(r01*sj5);
IkReal x549=((0.8)*sj4);
IkReal x550=(r00*r11);
IkReal x551=(cj5*r00);
IkReal x552=(cj5*r11);
IkReal x553=(r11*sj5);
IkReal x554=(r00*r10);
IkReal x555=(r10*sj5);
IkReal x556=((0.8)*x543);
IkReal x557=(cj5*x549);
IkReal x558=((0.48)*x537);
IkReal x559=((0.96)*x537);
IkReal x560=((0.28)*x537);
CheckValue<IkReal> x561=IKPowWithIntegerCheck(IKsign((((x542*x555*x560))+((r02*r12*x537))+((x538*x544*x560))+((r10*x540*x557))+((x542*x545*x546))+((x545*x549*x551))+(((-1.0)*x540*x549*x553))+(((-1.0)*x538*x547*x559))+((x539*x552*x560))+(((-1.0)*x538*x550*x559))+((x547*x558))+((x542*x553*x559))+x554+x544+((x550*x558))+(((-1.0)*cj5*r10*x539*x559))+((x539*x545*x546))+(((-0.64)*x537*x544))+(((-1.0)*x545*x548*x549))+((x540*x546*x552))+((x540*x546*x555))+(((-0.36)*x537*x554))+(((-1.0)*x538*x554*x560)))),-1);
if(!x561.valid){
continue;
}
CheckValue<IkReal> x562 = IKatan2WithCheck(IkReal(((((-0.6)*x541*x551))+(((0.8)*x541*x542))+(((-1.0)*x539*x556))+(((0.6)*x543*x551))+(((0.6)*x541*x548))+(((0.8)*x539*x541))+(((-0.6)*x543*x548))+(((-1.0)*x542*x556)))),IkReal((((x543*x549*x551))+((x542*x543*x546))+(((-1.0)*x539*x541*x546))+(((-1.0)*x543*x548*x549))+((x540*x543))+((x539*x543*x546))+(((-1.0)*x540*x541))+(((-1.0)*x541*x542*x546))+(((-1.0)*x541*x549*x551))+((x541*x548*x549)))),IKFAST_ATAN2_MAGTHRESH);
if(!x562.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x561.value)))+(x562.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x563=IKsin(j3);
IkReal x564=IKcos(j3);
IkReal x565=(sj1*sj2);
IkReal x566=((1.0)*cj1);
IkReal x567=((0.6)*r20);
IkReal x568=(cj4*r12);
IkReal x569=((0.8)*r21);
IkReal x570=(sj4*sj5);
IkReal x571=((0.8)*r11);
IkReal x572=((0.8)*sj4);
IkReal x573=((0.6)*sj4);
IkReal x574=((0.8)*r01);
IkReal x575=(cj2*sj1);
IkReal x576=((0.6)*r10);
IkReal x577=((0.8)*r00);
IkReal x578=((0.6)*r00);
IkReal x579=(cj4*r22);
IkReal x580=(cj4*r02);
IkReal x581=((0.8)*r10);
IkReal x582=((0.8)*r20);
IkReal x583=(cj2*x566);
IkReal x584=(cj5*x563);
IkReal x585=(cj5*x564);
IkReal x586=((0.6)*x564);
IkReal x587=(sj5*x563);
IkReal x588=(sj5*x564);
evalcond[0]=(((x577*x588))+(((-1.0)*x578*x585))+((r00*x572*x584))+((r01*x573*x584))+((x574*x585))+((x563*x580))+((r01*sj5*x586))+(((-1.0)*x563*x570*x574))+((x563*x570*x578)));
evalcond[1]=(((x578*x584))+((x564*x580))+(((-0.6)*r01*x587))+((r00*x572*x585))+((r01*x573*x585))+(((-1.0)*x577*x587))+(((-1.0)*x574*x584))+((x564*x570*x578))+(((-1.0)*x564*x570*x574)));
evalcond[2]=(((x581*x588))+((r11*x573*x584))+((cj1*sj2))+((x563*x568))+((r10*x572*x584))+x575+(((-1.0)*x576*x585))+((x571*x585))+((r11*sj5*x586))+(((-1.0)*x563*x570*x571))+((x563*x570*x576)));
evalcond[3]=(((x563*x567*x570))+((r21*x573*x584))+(((-1.0)*x563*x569*x570))+((x582*x588))+((x563*x579))+((r21*sj5*x586))+x565+((r20*x572*x584))+((x569*x585))+(((-1.0)*x583))+(((-1.0)*x567*x585)));
evalcond[4]=(((r11*x573*x585))+((x564*x568))+(((-0.6)*r11*x587))+((r10*x572*x585))+(((-1.0)*x571*x584))+x565+((x564*x570*x576))+((x576*x584))+(((-1.0)*x583))+(((-1.0)*x564*x570*x571))+(((-1.0)*x581*x587)));
evalcond[5]=(((r21*x573*x585))+(((-1.0)*x582*x587))+((x567*x584))+(((-0.6)*r21*x587))+((x564*x567*x570))+(((-1.0)*x575))+(((-1.0)*x564*x569*x570))+((x564*x579))+((r20*x572*x585))+(((-1.0)*sj2*x566))+(((-1.0)*x569*x584)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x589=((0.8)*sj5);
IkReal x590=(cj1*cj2);
IkReal x591=((0.6)*cj5);
IkReal x592=(cj4*r02);
IkReal x593=(sj1*sj2);
IkReal x594=(r01*sj4);
IkReal x595=(r00*sj4);
IkReal x596=((0.6)*sj5);
IkReal x597=((0.8)*cj5);
IkReal x598=(r01*x597);
IkReal x599=(r01*x596);
CheckValue<IkReal> x600=IKPowWithIntegerCheck(IKsign((((r11*(((((-1.0)*cj4*x589))+((cj4*x591))))))+((r10*((((cj4*x596))+((cj4*x597))))))+(((-1.0)*r12*sj4)))),-1);
if(!x600.valid){
continue;
}
CheckValue<IkReal> x601 = IKatan2WithCheck(IkReal((((r00*x590*x591))+(((-1.0)*x590*x598))+(((-1.0)*x590*x599))+((r00*x589*x593))+(((-1.0)*r00*x589*x590))+(((-1.0)*r00*x591*x593))+((x593*x598))+((x593*x599)))),IkReal(((((-1.0)*x589*x590*x594))+(((-1.0)*x592*x593))+((x589*x593*x594))+(((-1.0)*x593*x595*x596))+(((-1.0)*x593*x595*x597))+((x590*x591*x594))+(((-1.0)*x591*x593*x594))+((x590*x595*x597))+((x590*x595*x596))+((x590*x592)))),IKFAST_ATAN2_MAGTHRESH);
if(!x601.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x600.value)))+(x601.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x602=IKsin(j3);
IkReal x603=IKcos(j3);
IkReal x604=(sj1*sj2);
IkReal x605=((1.0)*cj1);
IkReal x606=((0.6)*r20);
IkReal x607=(cj4*r12);
IkReal x608=((0.8)*r21);
IkReal x609=(sj4*sj5);
IkReal x610=((0.8)*r11);
IkReal x611=((0.8)*sj4);
IkReal x612=((0.6)*sj4);
IkReal x613=((0.8)*r01);
IkReal x614=(cj2*sj1);
IkReal x615=((0.6)*r10);
IkReal x616=((0.8)*r00);
IkReal x617=((0.6)*r00);
IkReal x618=(cj4*r22);
IkReal x619=(cj4*r02);
IkReal x620=((0.8)*r10);
IkReal x621=((0.8)*r20);
IkReal x622=(cj2*x605);
IkReal x623=(cj5*x602);
IkReal x624=(cj5*x603);
IkReal x625=((0.6)*x603);
IkReal x626=(sj5*x602);
IkReal x627=(sj5*x603);
evalcond[0]=((((-1.0)*x602*x609*x613))+((x616*x627))+((x613*x624))+(((-1.0)*x617*x624))+((r00*x611*x623))+((x602*x609*x617))+((r01*sj5*x625))+((x602*x619))+((r01*x612*x623)));
evalcond[1]=(((x617*x623))+((x603*x619))+(((-1.0)*x603*x609*x613))+((r00*x611*x624))+(((-0.6)*r01*x626))+(((-1.0)*x616*x626))+(((-1.0)*x613*x623))+((r01*x612*x624))+((x603*x609*x617)));
evalcond[2]=((((-1.0)*x602*x609*x610))+((cj1*sj2))+x614+((x602*x609*x615))+((x610*x624))+((x602*x607))+((r11*sj5*x625))+(((-1.0)*x615*x624))+((r10*x611*x623))+((r11*x612*x623))+((x620*x627)));
evalcond[3]=(((x602*x606*x609))+((r21*sj5*x625))+((r20*x611*x623))+(((-1.0)*x622))+(((-1.0)*x606*x624))+((r21*x612*x623))+((x608*x624))+x604+((x621*x627))+((x602*x618))+(((-1.0)*x602*x608*x609)));
evalcond[4]=((((-0.6)*r11*x626))+(((-1.0)*x622))+(((-1.0)*x620*x626))+(((-1.0)*x610*x623))+(((-1.0)*x603*x609*x610))+((x603*x607))+x604+((r10*x611*x624))+((r11*x612*x624))+((x603*x609*x615))+((x615*x623)));
evalcond[5]=(((r20*x611*x624))+(((-1.0)*x603*x608*x609))+((x603*x606*x609))+(((-1.0)*x621*x626))+(((-0.6)*r21*x626))+(((-1.0)*sj2*x605))+(((-1.0)*x614))+((x603*x618))+((r21*x612*x624))+((x606*x623))+(((-1.0)*x608*x623)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x628=((4.16666666666667)*sj1);
IkReal x629=((0.165)*cj5);
IkReal x630=(r10*sj1);
IkReal x631=(cj1*r20);
IkReal x632=((0.22)*sj5);
IkReal x633=(cj1*r10);
IkReal x634=(r20*sj1);
IkReal x635=((4.16666666666667)*cj1);
IkReal x636=(cj1*r21);
IkReal x637=((0.22)*cj5);
IkReal x638=((0.165)*sj5);
IkReal x639=(sj1*x638);
IkReal x640=(r11*x637);
if( IKabs((((py*x628))+(((-1.0)*x631*x632))+(((-1.0)*x630*x632))+(((-1.0)*r11*x639))+((pz*x635))+(((-1.0)*sj1*x640))+((x629*x631))+((x629*x630))+(((-1.0)*x636*x638))+(((-1.0)*x636*x637)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((-1.35416666666667)+(((-1.0)*x629*x633))+((pz*x628))+((cj1*r11*x638))+((x629*x634))+((cj1*x640))+(((-1.0)*r21*x639))+((x632*x633))+(((-1.0)*py*x635))+(((-1.0)*r21*sj1*x637))+(((-1.0)*x632*x634)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((py*x628))+(((-1.0)*x631*x632))+(((-1.0)*x630*x632))+(((-1.0)*r11*x639))+((pz*x635))+(((-1.0)*sj1*x640))+((x629*x631))+((x629*x630))+(((-1.0)*x636*x638))+(((-1.0)*x636*x637))))+IKsqr(((-1.35416666666667)+(((-1.0)*x629*x633))+((pz*x628))+((cj1*r11*x638))+((x629*x634))+((cj1*x640))+(((-1.0)*r21*x639))+((x632*x633))+(((-1.0)*py*x635))+(((-1.0)*r21*sj1*x637))+(((-1.0)*x632*x634))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((py*x628))+(((-1.0)*x631*x632))+(((-1.0)*x630*x632))+(((-1.0)*r11*x639))+((pz*x635))+(((-1.0)*sj1*x640))+((x629*x631))+((x629*x630))+(((-1.0)*x636*x638))+(((-1.0)*x636*x637))), ((-1.35416666666667)+(((-1.0)*x629*x633))+((pz*x628))+((cj1*r11*x638))+((x629*x634))+((cj1*x640))+(((-1.0)*r21*x639))+((x632*x633))+(((-1.0)*py*x635))+(((-1.0)*r21*sj1*x637))+(((-1.0)*x632*x634))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x641=IKsin(j2);
IkReal x642=IKcos(j2);
IkReal x643=((0.24)*sj1);
IkReal x644=((0.0528)*sj5);
IkReal x645=((0.24)*cj1);
IkReal x646=((0.0396)*sj5);
IkReal x647=((0.0396)*cj5);
IkReal x648=((0.0528)*cj5);
evalcond[0]=(((r20*x644))+(((0.325)*sj1))+((x641*x645))+(((-1.0)*pz))+((r21*x646))+((r21*x648))+(((-1.0)*r20*x647))+((x642*x643)));
evalcond[1]=((((-1.0)*x642*x645))+(((-1.0)*r10*x647))+((x641*x643))+(((-1.0)*py))+((r10*x644))+(((-0.325)*cj1))+((r11*x648))+((r11*x646)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x649=(r12*sj4);
IkReal x650=(cj4*r11);
IkReal x651=(cj4*cj5*r10);
IkReal x652=(cj4*r10*sj5);
j3eval[0]=(((cj5*x650))+(((1.33333333333333)*x651))+x652+(((-1.33333333333333)*sj5*x650))+(((-1.66666666666667)*x649)));
j3eval[1]=IKsign(((((-1.0)*x649))+(((0.6)*x652))+(((0.6)*cj5*x650))+(((-0.8)*sj5*x650))+(((0.8)*x651))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x653=cj4*cj4;
IkReal x654=cj5*cj5;
IkReal x655=(cj5*r01);
IkReal x656=(r00*sj5);
IkReal x657=(r01*sj5);
IkReal x658=(r01*r11);
IkReal x659=(r00*r10);
IkReal x660=(cj5*r00);
IkReal x661=(cj4*r12*sj4);
IkReal x662=(r11*x653);
IkReal x663=(r10*x653);
IkReal x664=(r00*x654);
IkReal x665=(r01*x654);
IkReal x666=(cj4*cj5*r02*sj4);
IkReal x667=(r02*r12*x653);
IkReal x668=(cj4*r02*r11*sj4*sj5);
IkReal x669=(cj4*r02*r10*sj4*sj5);
j3eval[0]=((((-3.42857142857143)*cj5*x656*x663))+(((3.57142857142857)*x659))+(((3.57142857142857)*x658))+(((-1.0)*x653*x654*x659))+(((-3.42857142857143)*x663*x665))+(((2.85714285714286)*x660*x661))+(((-2.85714285714286)*x657*x661))+(((3.57142857142857)*x667))+(((2.85714285714286)*r10*x666))+(((-1.28571428571429)*x653*x659))+(((2.14285714285714)*x656*x661))+(((2.14285714285714)*x669))+(((-3.42857142857143)*x662*x664))+(((3.42857142857143)*sj5*x655*x662))+(((2.14285714285714)*x655*x661))+((x653*x654*x658))+((cj5*x656*x662))+((sj5*x655*x663))+(((1.71428571428571)*r00*x662))+(((-2.85714285714286)*x668))+(((1.71428571428571)*r01*x663))+(((-2.28571428571429)*x653*x658))+(((2.14285714285714)*r11*x666)));
j3eval[1]=IKsign(((((-0.28)*x653*x654*x659))+(((-0.96)*cj5*x656*x663))+(((0.8)*r10*x666))+(((0.48)*r00*x662))+(((0.8)*x660*x661))+(((0.6)*x656*x661))+(((0.28)*x653*x654*x658))+(((0.6)*x669))+(((-0.96)*x662*x664))+(((0.28)*sj5*x655*x663))+(((0.96)*sj5*x655*x662))+(((-0.96)*x663*x665))+(((-0.8)*x668))+(((0.28)*cj5*x656*x662))+(((0.6)*r11*x666))+(((0.48)*r01*x663))+(((-0.36)*x653*x659))+(((0.6)*x655*x661))+x658+x659+x667+(((-0.8)*x657*x661))+(((-0.64)*x653*x658))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x670=cj4*cj4;
IkReal x671=cj5*cj5;
IkReal x672=(r00*sj5);
IkReal x673=(cj5*r01);
IkReal x674=(r01*r11);
IkReal x675=(r01*r10);
IkReal x676=(r02*r10);
IkReal x677=((0.8)*sj4);
IkReal x678=(r00*r11);
IkReal x679=(cj4*r02);
IkReal x680=(sj1*sj2);
IkReal x681=(cj5*r00);
IkReal x682=(cj5*r11);
IkReal x683=((0.6)*sj4);
IkReal x684=(r11*sj5);
IkReal x685=(r00*r10);
IkReal x686=(cj4*r12);
IkReal x687=(r01*sj5);
IkReal x688=((0.8)*cj1*cj2);
IkReal x689=((0.6)*cj1*cj2);
IkReal x690=((0.48)*x670);
IkReal x691=((0.96)*x670);
IkReal x692=((0.28)*x670);
IkReal x693=(cj4*cj5*x677);
IkReal x694=(x680*x687);
CheckValue<IkReal> x695 = IKatan2WithCheck(IkReal(((((0.6)*x680*x681))+((x687*x689))+(((-1.0)*x681*x689))+(((-0.8)*x673*x680))+(((-0.8)*x672*x680))+((x673*x688))+((x672*x688))+(((-0.6)*x694)))),IkReal(((((-1.0)*cj1*cj2*x677*x681))+(((-1.0)*cj1*cj2*x679))+((x672*x680*x683))+((x679*x680))+(((-1.0)*x677*x694))+(((-1.0)*cj1*cj2*x673*x683))+((cj1*cj2*x677*x687))+((x673*x680*x683))+(((-1.0)*cj1*cj2*x672*x683))+((x677*x680*x681)))),IKFAST_ATAN2_MAGTHRESH);
if(!x695.valid){
continue;
}
CheckValue<IkReal> x696=IKPowWithIntegerCheck(IKsign(((((-0.36)*x670*x685))+((r02*r12*x670))+((x671*x674*x692))+(((-1.0)*x671*x678*x691))+(((-1.0)*x677*x686*x687))+((x673*x683*x686))+((x675*x690))+(((-1.0)*x671*x675*x691))+(((-1.0)*cj5*r10*x672*x691))+((x679*x682*x683))+(((-1.0)*x677*x679*x684))+x674+x685+((x673*x684*x691))+((x672*x682*x692))+((x676*x693))+((r10*sj5*x673*x692))+(((-1.0)*x671*x685*x692))+((x677*x681*x686))+((x672*x683*x686))+(((-0.64)*x670*x674))+((x678*x690))+((cj4*sj5*x676*x683)))),-1);
if(!x696.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x695.value)+(((1.5707963267949)*(x696.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x697=IKsin(j3);
IkReal x698=IKcos(j3);
IkReal x699=((1.0)*cj1);
IkReal x700=((0.6)*r20);
IkReal x701=(cj4*r12);
IkReal x702=((0.8)*r21);
IkReal x703=(sj4*sj5);
IkReal x704=((0.8)*r11);
IkReal x705=(sj1*sj2);
IkReal x706=((0.8)*sj4);
IkReal x707=((0.6)*sj4);
IkReal x708=((0.8)*r01);
IkReal x709=(r11*sj5);
IkReal x710=(r01*sj5);
IkReal x711=((0.6)*r10);
IkReal x712=((0.6)*r00);
IkReal x713=(cj4*r22);
IkReal x714=(cj4*r02);
IkReal x715=((0.8)*sj5);
IkReal x716=(r21*sj5);
IkReal x717=(sj2*x699);
IkReal x718=((1.0)*cj2*sj1);
IkReal x719=(cj5*x697);
IkReal x720=(cj5*x698);
IkReal x721=((0.6)*x698);
IkReal x722=((0.6)*x697);
IkReal x723=(r00*x715);
IkReal x724=(x718+x717);
evalcond[0]=(((x708*x720))+((r00*x706*x719))+((x710*x721))+((x697*x703*x712))+(((-1.0)*x697*x703*x708))+((r01*x707*x719))+((x697*x714))+((x698*x723))+(((-1.0)*x712*x720)));
evalcond[1]=((((-1.0)*x698*x703*x708))+(((-1.0)*x710*x722))+((r00*x706*x720))+(((-1.0)*x697*x723))+((r01*x707*x720))+(((-1.0)*x708*x719))+((x698*x714))+((x712*x719))+((x698*x703*x712)));
evalcond[2]=(((x702*x720))+(((-1.0)*x700*x720))+((r20*x698*x715))+(((-1.0)*x697*x702*x703))+((r21*x707*x719))+(((-1.0)*cj2*x699))+((x697*x713))+x705+((x697*x700*x703))+((x716*x721))+((r20*x706*x719)));
evalcond[3]=((((-1.0)*x698*x703*x704))+(((-1.0)*x709*x722))+((x711*x719))+(((-1.0)*x705))+(((-1.0)*x704*x719))+(((-1.0)*r10*x697*x715))+((x698*x701))+((cj1*cj2))+((r11*x707*x720))+((r10*x706*x720))+((x698*x703*x711)));
evalcond[4]=(((x700*x719))+(((-1.0)*x702*x719))+((r21*x707*x720))+((x698*x700*x703))+(((-1.0)*x724))+(((-1.0)*r20*x697*x715))+(((-1.0)*x716*x722))+((r20*x706*x720))+((x698*x713))+(((-1.0)*x698*x702*x703)));
evalcond[5]=(((x709*x721))+((x697*x703*x711))+(((-1.0)*x697*x703*x704))+(((-1.0)*x724))+((x697*x701))+((r11*x707*x719))+((r10*x698*x715))+((x704*x720))+(((-1.0)*x711*x720))+((r10*x706*x719)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x725=((0.8)*sj5);
IkReal x726=(cj1*cj2);
IkReal x727=((0.6)*cj5);
IkReal x728=(cj4*r02);
IkReal x729=(sj1*sj2);
IkReal x730=(r01*sj4);
IkReal x731=(r00*sj4);
IkReal x732=((0.6)*sj5);
IkReal x733=((0.8)*cj5);
IkReal x734=(r01*x733);
IkReal x735=(r01*x732);
CheckValue<IkReal> x736=IKPowWithIntegerCheck(IKsign((((r11*((((cj4*x727))+(((-1.0)*cj4*x725))))))+(((-1.0)*r12*sj4))+((r10*((((cj4*x733))+((cj4*x732)))))))),-1);
if(!x736.valid){
continue;
}
CheckValue<IkReal> x737 = IKatan2WithCheck(IkReal(((((-1.0)*r00*x725*x726))+((x729*x734))+((x729*x735))+((r00*x726*x727))+((r00*x725*x729))+(((-1.0)*x726*x735))+(((-1.0)*x726*x734))+(((-1.0)*r00*x727*x729)))),IkReal((((x726*x728))+(((-1.0)*x725*x726*x730))+(((-1.0)*x728*x729))+((x726*x727*x730))+((x725*x729*x730))+((x726*x731*x733))+((x726*x731*x732))+(((-1.0)*x727*x729*x730))+(((-1.0)*x729*x731*x733))+(((-1.0)*x729*x731*x732)))),IKFAST_ATAN2_MAGTHRESH);
if(!x737.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x736.value)))+(x737.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x738=IKsin(j3);
IkReal x739=IKcos(j3);
IkReal x740=((1.0)*cj1);
IkReal x741=((0.6)*r20);
IkReal x742=(cj4*r12);
IkReal x743=((0.8)*r21);
IkReal x744=(sj4*sj5);
IkReal x745=((0.8)*r11);
IkReal x746=(sj1*sj2);
IkReal x747=((0.8)*sj4);
IkReal x748=((0.6)*sj4);
IkReal x749=((0.8)*r01);
IkReal x750=(r11*sj5);
IkReal x751=(r01*sj5);
IkReal x752=((0.6)*r10);
IkReal x753=((0.6)*r00);
IkReal x754=(cj4*r22);
IkReal x755=(cj4*r02);
IkReal x756=((0.8)*sj5);
IkReal x757=(r21*sj5);
IkReal x758=(sj2*x740);
IkReal x759=((1.0)*cj2*sj1);
IkReal x760=(cj5*x738);
IkReal x761=(cj5*x739);
IkReal x762=((0.6)*x739);
IkReal x763=((0.6)*x738);
IkReal x764=(r00*x756);
IkReal x765=(x759+x758);
evalcond[0]=(((x739*x764))+(((-1.0)*x738*x744*x749))+((x738*x755))+((r01*x748*x760))+(((-1.0)*x753*x761))+((x738*x744*x753))+((x751*x762))+((r00*x747*x760))+((x749*x761)));
evalcond[1]=(((x739*x744*x753))+((x739*x755))+(((-1.0)*x751*x763))+((r01*x748*x761))+(((-1.0)*x738*x764))+((r00*x747*x761))+((x753*x760))+(((-1.0)*x739*x744*x749))+(((-1.0)*x749*x760)));
evalcond[2]=(((x757*x762))+(((-1.0)*cj2*x740))+(((-1.0)*x741*x761))+((r20*x739*x756))+((x738*x754))+((x743*x761))+(((-1.0)*x738*x743*x744))+((r20*x747*x760))+((x738*x741*x744))+x746+((r21*x748*x760)));
evalcond[3]=(((x739*x744*x752))+(((-1.0)*r10*x738*x756))+(((-1.0)*x750*x763))+((r11*x748*x761))+((r10*x747*x761))+((x739*x742))+((x752*x760))+(((-1.0)*x745*x760))+(((-1.0)*x746))+((cj1*cj2))+(((-1.0)*x739*x744*x745)));
evalcond[4]=((((-1.0)*r20*x738*x756))+(((-1.0)*x743*x760))+((x739*x754))+(((-1.0)*x765))+(((-1.0)*x739*x743*x744))+((x741*x760))+(((-1.0)*x757*x763))+((r20*x747*x761))+((r21*x748*x761))+((x739*x741*x744)));
evalcond[5]=((((-1.0)*x738*x744*x745))+((x738*x742))+(((-1.0)*x752*x761))+((r11*x748*x760))+((r10*x747*x760))+(((-1.0)*x765))+((x738*x744*x752))+((r10*x739*x756))+((x750*x762))+((x745*x761)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2, j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x766=((0.99)*r21);
IkReal x767=((1.32)*r20);
IkReal x768=(r21*sj0);
IkReal x769=(cj1*sj5);
IkReal x770=((0.99)*r11);
IkReal x771=(sj0*sj1);
IkReal x772=((1.32)*r10);
IkReal x773=(cj1*sj0);
IkReal x774=(sj1*sj5);
IkReal x775=((25.0)*pz);
IkReal x776=((25.0)*py);
IkReal x777=(sj0*x769);
IkReal x778=((1.32)*cj1*cj5);
IkReal x779=((1.32)*cj5*sj1);
IkReal x780=((0.99)*cj5*r20);
IkReal x781=((0.99)*cj5*r10);
CheckValue<IkReal> x782=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x782.valid){
continue;
}
CheckValue<IkReal> x783 = IKatan2WithCheck(IkReal((((x773*x780))+(((-1.0)*x768*x778))+((x770*x774))+((x772*x774))+((x773*x775))+(((-1.0)*x767*x777))+(((-1.0)*x766*x777))+((r11*x779))+(((-1.0)*sj1*x781))+(((-1.0)*sj1*x776)))),IkReal(((((-1.0)*x768*x779))+((x771*x775))+(((-1.0)*r11*x778))+(((-1.0)*sj5*x767*x771))+((cj1*x781))+(((-8.125)*sj0))+((cj1*x776))+(((-1.0)*sj5*x766*x771))+(((-1.0)*x769*x770))+(((-1.0)*x769*x772))+((x771*x780)))),IKFAST_ATAN2_MAGTHRESH);
if(!x783.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x782.value)))+(x783.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x784=IKcos(j2);
IkReal x785=IKsin(j2);
IkReal x786=((0.0396)*sj5);
IkReal x787=(cj1*sj0);
IkReal x788=((0.0396)*cj5);
IkReal x789=((0.0528)*sj5);
IkReal x790=((0.0528)*cj5);
IkReal x791=(cj0*cj1);
IkReal x792=((0.24)*x784);
IkReal x793=((0.24)*x785);
evalcond[0]=(((r20*x789))+(((0.325)*sj1))+((cj1*x793))+((sj1*x792))+((r21*x790))+(((-1.0)*pz))+(((-1.0)*r20*x788))+((r21*x786)));
evalcond[1]=(((r00*x789))+((r01*x786))+((r01*x790))+(((-1.0)*r00*x788))+(((0.325)*x791))+(((-1.0)*px))+((x791*x792))+(((-1.0)*cj0*sj1*x793)));
evalcond[2]=((((-1.0)*sj0*sj1*x793))+((r10*x789))+(((0.325)*x787))+((x787*x792))+(((-1.0)*py))+(((-1.0)*r10*x788))+((r11*x786))+((r11*x790)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
IkReal x794=(r02*sj4);
IkReal x795=((0.8)*cj4);
IkReal x796=(cj5*r00);
IkReal x797=(r01*sj5);
IkReal x798=((1.33333333333333)*cj4);
IkReal x799=((0.6)*cj4);
IkReal x800=(cj5*r01);
IkReal x801=(r00*sj5);
IkReal x802=((1.0)*cj4);
j3eval[0]=((((-1.0)*x796*x798))+(((1.66666666666667)*x794))+(((-1.0)*x800*x802))+(((-1.0)*x801*x802))+((x797*x798)));
j3eval[1]=IKsign(((((-1.0)*x799*x801))+(((-1.0)*x799*x800))+(((-1.0)*x795*x796))+x794+((x795*x797))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x803=(r12*sj4);
IkReal x804=(cj4*r11);
IkReal x805=(cj4*cj5*r10);
IkReal x806=(cj4*r10*sj5);
j3eval[0]=(((cj5*x804))+(((1.33333333333333)*x805))+(((-1.66666666666667)*x803))+x806+(((-1.33333333333333)*sj5*x804)));
j3eval[1]=IKsign(((((-1.0)*x803))+(((-0.8)*sj5*x804))+(((0.8)*x805))+(((0.6)*cj5*x804))+(((0.6)*x806))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x807=cj4*cj4;
IkReal x808=r20*r20;
IkReal x809=cj5*cj5;
IkReal x810=r21*r21;
IkReal x811=r22*r22;
IkReal x812=(r20*r21);
IkReal x813=(cj5*sj5);
IkReal x814=((3.42857142857143)*x813);
IkReal x815=((1.0)*x810);
IkReal x816=((0.96)*x807);
IkReal x817=(x807*x809);
IkReal x818=(x807*x810);
IkReal x819=(cj4*cj5*r22*sj4);
IkReal x820=(x807*x808);
IkReal x821=(x807*x811);
IkReal x822=(cj4*r21*r22*sj4*sj5);
IkReal x823=(cj4*r20*r22*sj4*sj5);
j3eval[0]=((((-4.28571428571429)*r21*x819))+(((-3.57142857142857)*x808))+(((5.71428571428571)*x822))+(((-4.28571428571429)*x823))+(((2.28571428571429)*x818))+(((-3.42857142857143)*x807*x812))+((x808*x817))+((x814*x820))+(((-1.0)*x815*x817))+(((-1.0)*x814*x818))+(((-3.57142857142857)*x821))+(((-3.57142857142857)*x810))+(((-5.71428571428571)*r20*x819))+(((1.28571428571429)*x820))+(((6.85714285714286)*x812*x817))+(((-2.0)*x807*x812*x813)));
j3eval[1]=IKsign(((((-1.0)*x812*x816))+(((-1.0)*x808))+(((-1.2)*r21*x819))+(((0.64)*x818))+(((0.36)*x820))+(((-1.6)*r20*x819))+(((1.92)*x812*x817))+((x808*x813*x816))+(((1.6)*x822))+(((-1.0)*x815))+(((-0.56)*x807*x812*x813))+(((-0.28)*x810*x817))+(((-1.0)*x821))+(((0.28)*x808*x817))+(((-1.0)*x810*x813*x816))+(((-1.2)*x823))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x824=cj4*cj4;
IkReal x825=r20*r20;
IkReal x826=cj5*cj5;
IkReal x827=r21*r21;
IkReal x828=(cj2*sj1);
IkReal x829=(cj1*cj2);
IkReal x830=(cj4*r22);
IkReal x831=(cj5*sj4);
IkReal x832=((0.8)*r20);
IkReal x833=(cj1*sj2);
IkReal x834=((0.8)*r21);
IkReal x835=(sj4*sj5);
IkReal x836=(sj1*sj2);
IkReal x837=((0.6)*r20);
IkReal x838=((0.6)*r21);
IkReal x839=(sj5*x838);
IkReal x840=((0.96)*cj5*sj5);
IkReal x841=((0.28)*x826);
IkReal x842=(x824*x827);
IkReal x843=(r20*r21*x824);
IkReal x844=(x824*x825);
CheckValue<IkReal> x845 = IKatan2WithCheck(IkReal((((cj5*x828*x834))+((x835*x836*x837))+(((-1.0)*cj5*x828*x837))+((sj5*x832*x833))+((x833*x839))+((sj5*x828*x832))+((x831*x836*x838))+((x829*x834*x835))+((x830*x836))+(((-1.0)*x829*x830))+(((-1.0)*cj5*x833*x837))+(((-1.0)*x829*x831*x832))+(((-1.0)*x829*x831*x838))+((cj5*x833*x834))+((x828*x839))+(((-1.0)*x829*x835*x837))+(((-1.0)*x834*x835*x836))+((x831*x832*x836)))),IkReal((((cj5*x829*x837))+((x833*x834*x835))+((sj5*x832*x836))+(((-1.0)*x833*x835*x837))+((x836*x839))+(((-1.0)*x831*x833*x838))+(((-1.0)*x831*x832*x833))+(((-1.0)*cj5*x836*x837))+(((-1.0)*x828*x831*x832))+(((-1.0)*x828*x831*x838))+(((-1.0)*x828*x835*x837))+(((-1.0)*sj5*x829*x832))+(((-1.0)*x830*x833))+(((-1.0)*cj5*x829*x834))+(((-1.0)*x828*x830))+(((-1.0)*x829*x839))+((x828*x834*x835))+((cj5*x834*x836)))),IKFAST_ATAN2_MAGTHRESH);
if(!x845.valid){
continue;
}
CheckValue<IkReal> x846=IKPowWithIntegerCheck(IKsign(((((-1.0)*x824*(r22*r22)))+(((-1.2)*r21*x830*x831))+(((-1.2)*r20*x830*x835))+(((-1.0)*x841*x842))+(((0.36)*x844))+((x840*x844))+(((-0.56)*cj5*sj5*x843))+(((-1.0)*x840*x842))+(((-1.0)*x825))+(((-1.0)*x827))+(((-0.96)*x843))+(((1.6)*r21*x830*x835))+(((1.92)*x826*x843))+(((-1.6)*r20*x830*x831))+(((0.64)*x842))+((x841*x844)))),-1);
if(!x846.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x845.value)+(((1.5707963267949)*(x846.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x847=IKsin(j3);
IkReal x848=IKcos(j3);
IkReal x849=((0.8)*r01);
IkReal x850=((0.6)*r20);
IkReal x851=((0.8)*r21);
IkReal x852=(sj4*sj5);
IkReal x853=(cj2*sj1);
IkReal x854=((0.8)*r11);
IkReal x855=(sj1*sj2);
IkReal x856=((0.8)*sj4);
IkReal x857=((0.6)*sj4);
IkReal x858=(cj1*sj2);
IkReal x859=((0.6)*r10);
IkReal x860=((0.8)*r00);
IkReal x861=((0.6)*r00);
IkReal x862=((0.8)*r10);
IkReal x863=((0.8)*r20);
IkReal x864=(cj5*x847);
IkReal x865=((1.0)*cj1*cj2);
IkReal x866=(cj4*x848);
IkReal x867=(cj5*x848);
IkReal x868=((0.6)*x848);
IkReal x869=(sj5*x847);
IkReal x870=(cj4*x847);
IkReal x871=(sj5*x848);
evalcond[0]=((((-1.0)*x865))+((x863*x871))+(((-1.0)*x850*x867))+((x851*x867))+((r21*x857*x864))+((r22*x870))+((x847*x850*x852))+(((-1.0)*x847*x851*x852))+((r21*sj5*x868))+((r20*x856*x864))+x855);
evalcond[1]=(((x850*x864))+(((-1.0)*x858))+(((-1.0)*x853))+((r22*x866))+((r21*x857*x867))+(((-0.6)*r21*x869))+(((-1.0)*x851*x864))+(((-1.0)*x848*x851*x852))+((r20*x856*x867))+((x848*x850*x852))+(((-1.0)*x863*x869)));
evalcond[2]=(((r01*x857*x864))+((r01*sj5*x868))+(((-1.0)*x861*x867))+((x847*x852*x861))+((r02*x870))+((x860*x871))+((r00*x856*x864))+((x849*x867))+((cj0*x853))+((cj0*x858))+(((-1.0)*x847*x849*x852)));
evalcond[3]=(((r11*x857*x864))+((r11*sj5*x868))+((r12*x870))+((sj0*x858))+((sj0*x853))+((r10*x856*x864))+((x847*x852*x859))+(((-1.0)*x847*x852*x854))+((x862*x871))+(((-1.0)*x859*x867))+((x854*x867)));
evalcond[4]=((((-1.0)*x848*x849*x852))+((r01*x857*x867))+(((-1.0)*cj0*x865))+(((-0.6)*r01*x869))+(((-1.0)*x860*x869))+(((-1.0)*x849*x864))+((r02*x866))+((x861*x864))+((r00*x856*x867))+((cj0*x855))+((x848*x852*x861)));
evalcond[5]=(((r11*x857*x867))+(((-1.0)*x854*x864))+((r12*x866))+(((-1.0)*x862*x869))+((sj0*x855))+((r10*x856*x867))+(((-0.6)*r11*x869))+((x859*x864))+((x848*x852*x859))+(((-1.0)*sj0*x865))+(((-1.0)*x848*x852*x854)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x872=((0.8)*cj2);
IkReal x873=(cj1*r00);
IkReal x874=(cj0*cj5);
IkReal x875=(r21*sj1);
IkReal x876=((0.6)*cj1);
IkReal x877=(r20*sj2);
IkReal x878=(cj0*sj5);
IkReal x879=(r20*sj1);
IkReal x880=((0.6)*cj5);
IkReal x881=(cj5*sj4);
IkReal x882=(cj5*r01);
IkReal x883=(cj4*r02);
IkReal x884=(r01*sj5);
IkReal x885=((0.6)*cj2);
IkReal x886=(sj1*sj2);
IkReal x887=((0.8)*sj4);
IkReal x888=(r21*sj2);
IkReal x889=((0.8)*sj5);
IkReal x890=(sj4*sj5);
IkReal x891=((0.8)*cj1);
IkReal x892=(cj0*cj4*r22);
CheckValue<IkReal> x893=IKPowWithIntegerCheck(IKsign((((r10*(((((0.8)*cj4*cj5))+(((0.6)*cj4*sj5))))))+((r11*((((cj4*x880))+(((-1.0)*cj4*x889))))))+(((-1.0)*r12*sj4)))),-1);
if(!x893.valid){
continue;
}
CheckValue<IkReal> x894 = IKatan2WithCheck(IkReal(((((-1.0)*x874*x888*x891))+(((-1.0)*r00*x880*x886))+(((-1.0)*x875*x878*x885))+((x874*x876*x877))+((x874*x879*x885))+((r00*x886*x889))+(((-1.0)*x876*x878*x888))+((cj2*x873*x880))+(((-1.0)*x872*x874*x875))+(((-1.0)*cj1*x872*x882))+(((0.8)*x882*x886))+(((-1.0)*cj2*x876*x884))+(((-1.0)*x877*x878*x891))+(((0.6)*x884*x886))+(((-1.0)*x872*x878*x879))+(((-1.0)*sj5*x872*x873)))),IkReal((((x873*x885*x890))+(((-0.8)*r00*x881*x886))+((sj4*x874*x876*x888))+(((-1.0)*x883*x886))+((cj1*sj2*x892))+((sj4*x872*x874*x879))+((cj1*x874*x877*x887))+((sj4*x874*x875*x885))+(((-0.6)*r00*x886*x890))+((cj1*cj2*x883))+((x872*x873*x881))+((cj2*sj1*x892))+((sj4*x878*x879*x885))+((x884*x886*x887))+((sj4*x876*x877*x878))+(((-1.0)*r01*sj4*x880*x886))+(((-1.0)*cj1*x878*x887*x888))+((cj2*r01*x876*x881))+(((-1.0)*sj4*x872*x875*x878))+(((-1.0)*cj1*sj4*x872*x884)))),IKFAST_ATAN2_MAGTHRESH);
if(!x894.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x893.value)))+(x894.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x895=IKsin(j3);
IkReal x896=IKcos(j3);
IkReal x897=((0.8)*r01);
IkReal x898=((0.6)*r20);
IkReal x899=((0.8)*r21);
IkReal x900=(sj4*sj5);
IkReal x901=(cj2*sj1);
IkReal x902=((0.8)*r11);
IkReal x903=(sj1*sj2);
IkReal x904=((0.8)*sj4);
IkReal x905=((0.6)*sj4);
IkReal x906=(cj1*sj2);
IkReal x907=((0.6)*r10);
IkReal x908=((0.8)*r00);
IkReal x909=((0.6)*r00);
IkReal x910=((0.8)*r10);
IkReal x911=((0.8)*r20);
IkReal x912=(cj5*x895);
IkReal x913=((1.0)*cj1*cj2);
IkReal x914=(cj4*x896);
IkReal x915=(cj5*x896);
IkReal x916=((0.6)*x896);
IkReal x917=(sj5*x895);
IkReal x918=(cj4*x895);
IkReal x919=(sj5*x896);
evalcond[0]=((((-1.0)*x895*x899*x900))+((x895*x898*x900))+(((-1.0)*x913))+(((-1.0)*x898*x915))+((r21*sj5*x916))+((r21*x905*x912))+((x911*x919))+((x899*x915))+((r22*x918))+((r20*x904*x912))+x903);
evalcond[1]=(((x898*x912))+((r21*x905*x915))+(((-1.0)*x896*x899*x900))+((r22*x914))+(((-1.0)*x906))+(((-1.0)*x901))+(((-1.0)*x899*x912))+(((-0.6)*r21*x917))+((r20*x904*x915))+(((-1.0)*x911*x917))+((x896*x898*x900)));
evalcond[2]=((((-1.0)*x895*x897*x900))+((r01*sj5*x916))+((r02*x918))+((r00*x904*x912))+((x897*x915))+((x908*x919))+((cj0*x901))+((cj0*x906))+((r01*x905*x912))+(((-1.0)*x909*x915))+((x895*x900*x909)));
evalcond[3]=(((r11*sj5*x916))+((sj0*x901))+((sj0*x906))+((x902*x915))+((x910*x919))+(((-1.0)*x895*x900*x902))+((r12*x918))+((r11*x905*x912))+((r10*x904*x912))+(((-1.0)*x907*x915))+((x895*x900*x907)));
evalcond[4]=(((x909*x912))+(((-1.0)*cj0*x913))+(((-1.0)*x908*x917))+(((-0.6)*r01*x917))+(((-1.0)*x896*x897*x900))+((r02*x914))+(((-1.0)*x897*x912))+((r00*x904*x915))+((x896*x900*x909))+((cj0*x903))+((r01*x905*x915)));
evalcond[5]=((((-1.0)*sj0*x913))+(((-0.6)*r11*x917))+((sj0*x903))+((r12*x914))+((r11*x905*x915))+(((-1.0)*x902*x912))+((x896*x900*x907))+((r10*x904*x915))+(((-1.0)*x910*x917))+((x907*x912))+(((-1.0)*x896*x900*x902)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x920=((0.6)*sj4);
IkReal x921=((0.8)*sj5);
IkReal x922=((0.6)*cj5);
IkReal x923=(cj4*r22);
IkReal x924=(r20*sj5);
IkReal x925=((0.8)*cj5);
IkReal x926=((0.6)*sj5);
IkReal x927=(r20*sj4);
IkReal x928=(sj1*sj2);
IkReal x929=(cj4*r12);
IkReal x930=(cj5*r21);
IkReal x931=(r21*sj4);
IkReal x932=(cj2*sj0*sj1);
IkReal x933=(r10*x928);
IkReal x934=(cj1*cj2*r10);
IkReal x935=(cj1*cj2*r11);
IkReal x936=(cj1*sj0*sj2);
IkReal x937=(sj5*x934);
CheckValue<IkReal> x938 = IKatan2WithCheck(IkReal((((r11*x926*x928))+(((-1.0)*x925*x935))+(((-1.0)*r21*x925*x936))+(((-1.0)*r21*x925*x932))+(((-1.0)*r21*x926*x932))+(((-1.0)*r21*x926*x936))+((x921*x933))+(((-1.0)*x926*x935))+(((-1.0)*r20*x921*x936))+(((-1.0)*r20*x921*x932))+((x922*x934))+(((-1.0)*x921*x934))+((r20*x922*x932))+((r20*x922*x936))+(((-1.0)*x922*x933))+((r11*x925*x928)))),IkReal(((((-1.0)*x928*x929))+((x920*x937))+(((-1.0)*sj5*x920*x933))+((cj1*cj2*x929))+((sj4*x925*x934))+((x920*x930*x932))+((x920*x930*x936))+((cj5*x920*x935))+((x925*x927*x936))+((x925*x927*x932))+((r11*sj4*x921*x928))+(((-1.0)*sj4*x925*x933))+((x923*x932))+((x923*x936))+(((-1.0)*x921*x931*x936))+(((-1.0)*x921*x931*x932))+(((-1.0)*cj5*r11*x920*x928))+((x920*x924*x936))+((x920*x924*x932))+(((-1.0)*sj4*x921*x935)))),IKFAST_ATAN2_MAGTHRESH);
if(!x938.valid){
continue;
}
CheckValue<IkReal> x939=IKPowWithIntegerCheck(IKsign((((r02*sj4))+((r00*(((((-1.0)*cj4*x926))+(((-1.0)*cj4*x925))))))+((r01*(((((-1.0)*cj4*x922))+((cj4*x921)))))))),-1);
if(!x939.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x938.value)+(((1.5707963267949)*(x939.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x940=IKsin(j3);
IkReal x941=IKcos(j3);
IkReal x942=((0.8)*r01);
IkReal x943=((0.6)*r20);
IkReal x944=((0.8)*r21);
IkReal x945=(sj4*sj5);
IkReal x946=(cj2*sj1);
IkReal x947=((0.8)*r11);
IkReal x948=(sj1*sj2);
IkReal x949=((0.8)*sj4);
IkReal x950=((0.6)*sj4);
IkReal x951=(cj1*sj2);
IkReal x952=((0.6)*r10);
IkReal x953=((0.8)*r00);
IkReal x954=((0.6)*r00);
IkReal x955=((0.8)*r10);
IkReal x956=((0.8)*r20);
IkReal x957=(cj5*x940);
IkReal x958=((1.0)*cj1*cj2);
IkReal x959=(cj4*x941);
IkReal x960=(cj5*x941);
IkReal x961=((0.6)*x941);
IkReal x962=(sj5*x940);
IkReal x963=(cj4*x940);
IkReal x964=(sj5*x941);
evalcond[0]=(((r20*x949*x957))+((x944*x960))+(((-1.0)*x943*x960))+((x940*x943*x945))+((x956*x964))+((r21*x950*x957))+(((-1.0)*x958))+x948+(((-1.0)*x940*x944*x945))+((r21*sj5*x961))+((r22*x963)));
evalcond[1]=(((r22*x959))+(((-1.0)*x941*x944*x945))+((r20*x949*x960))+(((-1.0)*x944*x957))+(((-0.6)*r21*x962))+(((-1.0)*x951))+((x943*x957))+((x941*x943*x945))+(((-1.0)*x956*x962))+(((-1.0)*x946))+((r21*x950*x960)));
evalcond[2]=(((cj0*x946))+((r01*x950*x957))+((r01*sj5*x961))+((x942*x960))+((r00*x949*x957))+((x940*x945*x954))+(((-1.0)*x940*x942*x945))+((r02*x963))+(((-1.0)*x954*x960))+((x953*x964))+((cj0*x951)));
evalcond[3]=(((r10*x949*x957))+((sj0*x946))+((r11*x950*x957))+((r11*sj5*x961))+((x940*x945*x952))+((sj0*x951))+((x947*x960))+((r12*x963))+(((-1.0)*x940*x945*x947))+(((-1.0)*x952*x960))+((x955*x964)));
evalcond[4]=(((x941*x945*x954))+((cj0*x948))+((r01*x950*x960))+(((-1.0)*x941*x942*x945))+(((-1.0)*x942*x957))+((r00*x949*x960))+(((-1.0)*x953*x962))+(((-1.0)*cj0*x958))+((r02*x959))+(((-0.6)*r01*x962))+((x954*x957)));
evalcond[5]=(((x941*x945*x952))+((r10*x949*x960))+((x952*x957))+((sj0*x948))+(((-0.6)*r11*x962))+((r11*x950*x960))+(((-1.0)*sj0*x958))+(((-1.0)*x947*x957))+((r12*x959))+(((-1.0)*x941*x945*x947))+(((-1.0)*x955*x962)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x965=((1.32)*cj5);
IkReal x966=(cj0*sj1);
IkReal x967=(cj1*r00);
IkReal x968=((0.99)*cj5);
IkReal x969=((25.0)*px);
IkReal x970=(cj1*r01);
IkReal x971=((1.32)*sj5);
IkReal x972=(cj0*cj1);
IkReal x973=((25.0)*pz);
IkReal x974=((0.99)*sj5);
IkReal x975=(r01*sj1);
IkReal x976=(r00*sj1);
CheckValue<IkReal> x977 = IKatan2WithCheck(IkReal((((x965*x975))+(((-1.0)*r21*x965*x972))+(((-1.0)*r20*x971*x972))+((r20*x968*x972))+(((-1.0)*sj1*x969))+((x971*x976))+(((-1.0)*r21*x972*x974))+((x974*x975))+(((-1.0)*x968*x976))+((x972*x973)))),IkReal(((((-1.0)*x965*x970))+((r20*x966*x968))+(((-8.125)*cj0))+(((-1.0)*r20*x966*x971))+(((-1.0)*r21*x965*x966))+(((-1.0)*r21*x966*x974))+((cj1*x969))+((x967*x968))+(((-1.0)*x967*x971))+((x966*x973))+(((-1.0)*x970*x974)))),IKFAST_ATAN2_MAGTHRESH);
if(!x977.valid){
continue;
}
CheckValue<IkReal> x978=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x978.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x977.value)+(((1.5707963267949)*(x978.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[3];
IkReal x979=IKcos(j2);
IkReal x980=IKsin(j2);
IkReal x981=((0.0396)*sj5);
IkReal x982=(cj1*sj0);
IkReal x983=((0.0396)*cj5);
IkReal x984=((0.0528)*sj5);
IkReal x985=((0.0528)*cj5);
IkReal x986=(cj0*cj1);
IkReal x987=((0.24)*x979);
IkReal x988=((0.24)*x980);
evalcond[0]=((((-1.0)*r20*x983))+((cj1*x988))+(((0.325)*sj1))+((sj1*x987))+((r21*x981))+((r21*x985))+(((-1.0)*pz))+((r20*x984)));
evalcond[1]=((((-1.0)*cj0*sj1*x988))+(((-1.0)*r00*x983))+((x986*x987))+((r00*x984))+((r01*x981))+((r01*x985))+(((-1.0)*px))+(((0.325)*x986)));
evalcond[2]=((((-1.0)*r10*x983))+(((-1.0)*sj0*sj1*x988))+(((-1.0)*py))+((x982*x987))+((r11*x985))+((r11*x981))+((r10*x984))+(((0.325)*x982)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j3eval[2];
IkReal x989=(r02*sj4);
IkReal x990=((0.8)*cj4);
IkReal x991=(cj5*r00);
IkReal x992=(r01*sj5);
IkReal x993=((1.33333333333333)*cj4);
IkReal x994=((0.6)*cj4);
IkReal x995=(cj5*r01);
IkReal x996=(r00*sj5);
IkReal x997=((1.0)*cj4);
j3eval[0]=(((x992*x993))+(((-1.0)*x991*x993))+(((-1.0)*x995*x997))+(((-1.0)*x996*x997))+(((1.66666666666667)*x989)));
j3eval[1]=IKsign(((((-1.0)*x994*x996))+(((-1.0)*x994*x995))+((x990*x992))+(((-1.0)*x990*x991))+x989));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x998=(r12*sj4);
IkReal x999=(cj4*r11);
IkReal x1000=(cj4*cj5*r10);
IkReal x1001=(cj4*r10*sj5);
j3eval[0]=(x1001+((cj5*x999))+(((-1.33333333333333)*sj5*x999))+(((1.33333333333333)*x1000))+(((-1.66666666666667)*x998)));
j3eval[1]=IKsign(((((-1.0)*x998))+(((0.6)*x1001))+(((-0.8)*sj5*x999))+(((0.8)*x1000))+(((0.6)*cj5*x999))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x1002=cj4*cj4;
IkReal x1003=r20*r20;
IkReal x1004=cj5*cj5;
IkReal x1005=r21*r21;
IkReal x1006=r22*r22;
IkReal x1007=(r20*r21);
IkReal x1008=(cj5*sj5);
IkReal x1009=((3.42857142857143)*x1008);
IkReal x1010=((1.0)*x1005);
IkReal x1011=((0.96)*x1002);
IkReal x1012=(x1002*x1004);
IkReal x1013=(x1002*x1005);
IkReal x1014=(cj4*cj5*r22*sj4);
IkReal x1015=(x1002*x1003);
IkReal x1016=(x1002*x1006);
IkReal x1017=(cj4*r21*r22*sj4*sj5);
IkReal x1018=(cj4*r20*r22*sj4*sj5);
j3eval[0]=((((-1.0)*x1010*x1012))+(((-2.0)*x1002*x1007*x1008))+((x1009*x1015))+((x1003*x1012))+(((-1.0)*x1009*x1013))+(((2.28571428571429)*x1013))+(((5.71428571428571)*x1017))+(((-4.28571428571429)*x1018))+(((-3.57142857142857)*x1005))+(((-3.57142857142857)*x1003))+(((-3.57142857142857)*x1016))+(((-5.71428571428571)*r20*x1014))+(((-4.28571428571429)*r21*x1014))+(((-3.42857142857143)*x1002*x1007))+(((1.28571428571429)*x1015))+(((6.85714285714286)*x1007*x1012)));
j3eval[1]=IKsign(((((-1.0)*x1003))+(((-0.28)*x1005*x1012))+(((-1.0)*x1010))+(((-1.0)*x1005*x1008*x1011))+(((0.28)*x1003*x1012))+(((0.64)*x1013))+((x1003*x1008*x1011))+(((1.92)*x1007*x1012))+(((-1.2)*r21*x1014))+(((-0.56)*x1002*x1007*x1008))+(((0.36)*x1015))+(((-1.0)*x1007*x1011))+(((1.6)*x1017))+(((-1.6)*r20*x1014))+(((-1.0)*x1016))+(((-1.2)*x1018))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1019=cj4*cj4;
IkReal x1020=r20*r20;
IkReal x1021=cj5*cj5;
IkReal x1022=r21*r21;
IkReal x1023=(cj2*sj1);
IkReal x1024=(cj1*cj2);
IkReal x1025=(cj4*r22);
IkReal x1026=(cj5*sj4);
IkReal x1027=((0.8)*r20);
IkReal x1028=(cj1*sj2);
IkReal x1029=((0.8)*r21);
IkReal x1030=(sj4*sj5);
IkReal x1031=(sj1*sj2);
IkReal x1032=((0.6)*r20);
IkReal x1033=((0.6)*r21);
IkReal x1034=(sj5*x1033);
IkReal x1035=((0.96)*cj5*sj5);
IkReal x1036=((0.28)*x1021);
IkReal x1037=(x1019*x1022);
IkReal x1038=(r20*r21*x1019);
IkReal x1039=(x1019*x1020);
CheckValue<IkReal> x1040 = IKatan2WithCheck(IkReal((((sj5*x1023*x1027))+(((-1.0)*cj5*x1028*x1032))+((x1024*x1029*x1030))+(((-1.0)*cj5*x1023*x1032))+((x1028*x1034))+((cj5*x1023*x1029))+(((-1.0)*x1024*x1026*x1027))+(((-1.0)*x1024*x1026*x1033))+((cj5*x1028*x1029))+(((-1.0)*x1024*x1025))+((x1023*x1034))+((x1030*x1031*x1032))+((x1025*x1031))+(((-1.0)*x1029*x1030*x1031))+((sj5*x1027*x1028))+((x1026*x1027*x1031))+((x1026*x1031*x1033))+(((-1.0)*x1024*x1030*x1032)))),IkReal(((((-1.0)*x1024*x1034))+((x1031*x1034))+(((-1.0)*cj5*x1024*x1029))+(((-1.0)*sj5*x1024*x1027))+(((-1.0)*x1023*x1026*x1027))+((x1028*x1029*x1030))+(((-1.0)*x1026*x1028*x1033))+(((-1.0)*x1023*x1030*x1032))+((x1023*x1029*x1030))+(((-1.0)*x1023*x1026*x1033))+(((-1.0)*x1023*x1025))+(((-1.0)*x1028*x1030*x1032))+((cj5*x1029*x1031))+(((-1.0)*x1025*x1028))+(((-1.0)*x1026*x1027*x1028))+(((-1.0)*cj5*x1031*x1032))+((cj5*x1024*x1032))+((sj5*x1027*x1031)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1040.valid){
continue;
}
CheckValue<IkReal> x1041=IKPowWithIntegerCheck(IKsign(((((-1.2)*r20*x1025*x1030))+(((-1.2)*r21*x1025*x1026))+((x1036*x1039))+(((-1.0)*x1022))+(((-1.0)*x1020))+(((-1.0)*x1035*x1037))+(((-1.0)*x1036*x1037))+(((-1.0)*x1019*(r22*r22)))+(((-0.96)*x1038))+(((1.92)*x1021*x1038))+(((-0.56)*cj5*sj5*x1038))+(((0.64)*x1037))+((x1035*x1039))+(((-1.6)*r20*x1025*x1026))+(((0.36)*x1039))+(((1.6)*r21*x1025*x1030)))),-1);
if(!x1041.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1040.value)+(((1.5707963267949)*(x1041.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1042=IKsin(j3);
IkReal x1043=IKcos(j3);
IkReal x1044=((0.8)*r01);
IkReal x1045=((0.6)*r20);
IkReal x1046=((0.8)*r21);
IkReal x1047=(sj4*sj5);
IkReal x1048=(cj2*sj1);
IkReal x1049=((0.8)*r11);
IkReal x1050=(sj1*sj2);
IkReal x1051=((0.8)*sj4);
IkReal x1052=((0.6)*sj4);
IkReal x1053=(cj1*sj2);
IkReal x1054=((0.6)*r10);
IkReal x1055=((0.8)*r00);
IkReal x1056=((0.6)*r00);
IkReal x1057=((0.8)*r10);
IkReal x1058=((0.8)*r20);
IkReal x1059=(cj5*x1042);
IkReal x1060=((1.0)*cj1*cj2);
IkReal x1061=(cj4*x1043);
IkReal x1062=(cj5*x1043);
IkReal x1063=((0.6)*x1043);
IkReal x1064=(sj5*x1042);
IkReal x1065=(cj4*x1042);
IkReal x1066=(sj5*x1043);
evalcond[0]=(x1050+((r20*x1051*x1059))+(((-1.0)*x1045*x1062))+((x1042*x1045*x1047))+((r21*x1052*x1059))+((r21*sj5*x1063))+(((-1.0)*x1042*x1046*x1047))+((r22*x1065))+((x1046*x1062))+(((-1.0)*x1060))+((x1058*x1066)));
evalcond[1]=((((-1.0)*x1043*x1046*x1047))+(((-0.6)*r21*x1064))+(((-1.0)*x1046*x1059))+((x1043*x1045*x1047))+((r20*x1051*x1062))+(((-1.0)*x1058*x1064))+((r21*x1052*x1062))+(((-1.0)*x1053))+(((-1.0)*x1048))+((r22*x1061))+((x1045*x1059)));
evalcond[2]=(((cj0*x1048))+((x1044*x1062))+((x1055*x1066))+((cj0*x1053))+((r00*x1051*x1059))+((x1042*x1047*x1056))+((r01*sj5*x1063))+(((-1.0)*x1056*x1062))+((r02*x1065))+(((-1.0)*x1042*x1044*x1047))+((r01*x1052*x1059)));
evalcond[3]=(((r11*x1052*x1059))+((r11*sj5*x1063))+((r12*x1065))+((sj0*x1048))+((r10*x1051*x1059))+((x1057*x1066))+((sj0*x1053))+((x1042*x1047*x1054))+(((-1.0)*x1042*x1047*x1049))+((x1049*x1062))+(((-1.0)*x1054*x1062)));
evalcond[4]=(((cj0*x1050))+(((-0.6)*r01*x1064))+((r00*x1051*x1062))+((x1056*x1059))+(((-1.0)*x1044*x1059))+(((-1.0)*x1043*x1044*x1047))+((x1043*x1047*x1056))+((r01*x1052*x1062))+(((-1.0)*cj0*x1060))+(((-1.0)*x1055*x1064))+((r02*x1061)));
evalcond[5]=(((r11*x1052*x1062))+((r12*x1061))+(((-1.0)*x1043*x1047*x1049))+((x1054*x1059))+(((-0.6)*r11*x1064))+((x1043*x1047*x1054))+(((-1.0)*x1057*x1064))+((sj0*x1050))+((r10*x1051*x1062))+(((-1.0)*sj0*x1060))+(((-1.0)*x1049*x1059)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1067=((0.8)*cj2);
IkReal x1068=(cj1*r00);
IkReal x1069=(cj0*cj5);
IkReal x1070=(r21*sj1);
IkReal x1071=((0.6)*cj1);
IkReal x1072=(r20*sj2);
IkReal x1073=(cj0*sj5);
IkReal x1074=(r20*sj1);
IkReal x1075=((0.6)*cj5);
IkReal x1076=(cj5*sj4);
IkReal x1077=(cj5*r01);
IkReal x1078=(cj4*r02);
IkReal x1079=(r01*sj5);
IkReal x1080=((0.6)*cj2);
IkReal x1081=(sj1*sj2);
IkReal x1082=((0.8)*sj4);
IkReal x1083=(r21*sj2);
IkReal x1084=((0.8)*sj5);
IkReal x1085=(sj4*sj5);
IkReal x1086=((0.8)*cj1);
IkReal x1087=(cj0*cj4*r22);
CheckValue<IkReal> x1088=IKPowWithIntegerCheck(IKsign((((r11*(((((-1.0)*cj4*x1084))+((cj4*x1075))))))+((r10*(((((0.8)*cj4*cj5))+(((0.6)*cj4*sj5))))))+(((-1.0)*r12*sj4)))),-1);
if(!x1088.valid){
continue;
}
CheckValue<IkReal> x1089 = IKatan2WithCheck(IkReal(((((0.8)*x1077*x1081))+(((-1.0)*x1067*x1073*x1074))+(((-1.0)*x1069*x1083*x1086))+(((-1.0)*cj1*x1067*x1077))+(((-1.0)*r00*x1075*x1081))+(((-1.0)*x1072*x1073*x1086))+((x1069*x1074*x1080))+(((-1.0)*x1067*x1069*x1070))+(((-1.0)*sj5*x1067*x1068))+(((-1.0)*x1071*x1073*x1083))+(((0.6)*x1079*x1081))+((cj2*x1068*x1075))+((r00*x1081*x1084))+(((-1.0)*x1070*x1073*x1080))+(((-1.0)*cj2*x1071*x1079))+((x1069*x1071*x1072)))),IkReal(((((-1.0)*x1078*x1081))+((x1067*x1068*x1076))+((sj4*x1069*x1071*x1083))+((x1079*x1081*x1082))+((sj4*x1069*x1070*x1080))+((cj2*sj1*x1087))+((cj2*r01*x1071*x1076))+(((-1.0)*cj1*sj4*x1067*x1079))+(((-1.0)*r01*sj4*x1075*x1081))+(((-0.8)*r00*x1076*x1081))+((x1068*x1080*x1085))+((sj4*x1071*x1072*x1073))+(((-1.0)*sj4*x1067*x1070*x1073))+(((-1.0)*cj1*x1073*x1082*x1083))+((cj1*x1069*x1072*x1082))+((cj1*sj2*x1087))+((sj4*x1073*x1074*x1080))+((sj4*x1067*x1069*x1074))+((cj1*cj2*x1078))+(((-0.6)*r00*x1081*x1085)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1089.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1088.value)))+(x1089.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1090=IKsin(j3);
IkReal x1091=IKcos(j3);
IkReal x1092=((0.8)*r01);
IkReal x1093=((0.6)*r20);
IkReal x1094=((0.8)*r21);
IkReal x1095=(sj4*sj5);
IkReal x1096=(cj2*sj1);
IkReal x1097=((0.8)*r11);
IkReal x1098=(sj1*sj2);
IkReal x1099=((0.8)*sj4);
IkReal x1100=((0.6)*sj4);
IkReal x1101=(cj1*sj2);
IkReal x1102=((0.6)*r10);
IkReal x1103=((0.8)*r00);
IkReal x1104=((0.6)*r00);
IkReal x1105=((0.8)*r10);
IkReal x1106=((0.8)*r20);
IkReal x1107=(cj5*x1090);
IkReal x1108=((1.0)*cj1*cj2);
IkReal x1109=(cj4*x1091);
IkReal x1110=(cj5*x1091);
IkReal x1111=((0.6)*x1091);
IkReal x1112=(sj5*x1090);
IkReal x1113=(cj4*x1090);
IkReal x1114=(sj5*x1091);
evalcond[0]=(((x1094*x1110))+((r21*sj5*x1111))+x1098+(((-1.0)*x1093*x1110))+((r22*x1113))+((x1090*x1093*x1095))+((r20*x1099*x1107))+(((-1.0)*x1090*x1094*x1095))+(((-1.0)*x1108))+((r21*x1100*x1107))+((x1106*x1114)));
evalcond[1]=(((x1093*x1107))+(((-0.6)*r21*x1112))+((x1091*x1093*x1095))+(((-1.0)*x1091*x1094*x1095))+(((-1.0)*x1101))+(((-1.0)*x1096))+(((-1.0)*x1094*x1107))+((r22*x1109))+(((-1.0)*x1106*x1112))+((r20*x1099*x1110))+((r21*x1100*x1110)));
evalcond[2]=(((r01*x1100*x1107))+((x1092*x1110))+((r01*sj5*x1111))+((r00*x1099*x1107))+((x1090*x1095*x1104))+((cj0*x1096))+(((-1.0)*x1104*x1110))+((x1103*x1114))+(((-1.0)*x1090*x1092*x1095))+((cj0*x1101))+((r02*x1113)));
evalcond[3]=(((sj0*x1096))+((x1105*x1114))+((x1090*x1095*x1102))+((x1097*x1110))+(((-1.0)*x1090*x1095*x1097))+((r11*sj5*x1111))+((r11*x1100*x1107))+((sj0*x1101))+((r12*x1113))+(((-1.0)*x1102*x1110))+((r10*x1099*x1107)));
evalcond[4]=(((r02*x1109))+(((-1.0)*x1091*x1092*x1095))+(((-1.0)*x1103*x1112))+(((-1.0)*x1092*x1107))+((r00*x1099*x1110))+((x1104*x1107))+((cj0*x1098))+((x1091*x1095*x1104))+(((-1.0)*cj0*x1108))+((r01*x1100*x1110))+(((-0.6)*r01*x1112)));
evalcond[5]=(((x1102*x1107))+((sj0*x1098))+(((-0.6)*r11*x1112))+(((-1.0)*x1091*x1095*x1097))+((r11*x1100*x1110))+((r12*x1109))+((x1091*x1095*x1102))+(((-1.0)*x1097*x1107))+(((-1.0)*x1105*x1112))+(((-1.0)*sj0*x1108))+((r10*x1099*x1110)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1115=((0.6)*sj4);
IkReal x1116=((0.8)*sj5);
IkReal x1117=((0.6)*cj5);
IkReal x1118=(cj4*r22);
IkReal x1119=(r20*sj5);
IkReal x1120=((0.8)*cj5);
IkReal x1121=((0.6)*sj5);
IkReal x1122=(r20*sj4);
IkReal x1123=(sj1*sj2);
IkReal x1124=(cj4*r12);
IkReal x1125=(cj5*r21);
IkReal x1126=(r21*sj4);
IkReal x1127=(cj2*sj0*sj1);
IkReal x1128=(r10*x1123);
IkReal x1129=(cj1*cj2*r10);
IkReal x1130=(cj1*cj2*r11);
IkReal x1131=(cj1*sj0*sj2);
IkReal x1132=(sj5*x1129);
CheckValue<IkReal> x1133 = IKatan2WithCheck(IkReal((((r11*x1121*x1123))+(((-1.0)*r20*x1116*x1127))+((r20*x1117*x1131))+(((-1.0)*r20*x1116*x1131))+((r20*x1117*x1127))+(((-1.0)*x1117*x1128))+(((-1.0)*x1116*x1129))+(((-1.0)*x1121*x1130))+(((-1.0)*r21*x1121*x1127))+(((-1.0)*r21*x1121*x1131))+(((-1.0)*r21*x1120*x1127))+(((-1.0)*r21*x1120*x1131))+((x1117*x1129))+((x1116*x1128))+(((-1.0)*x1120*x1130))+((r11*x1120*x1123)))),IkReal(((((-1.0)*x1116*x1126*x1127))+((cj5*x1115*x1130))+((x1115*x1119*x1127))+(((-1.0)*sj5*x1115*x1128))+((x1115*x1119*x1131))+((x1120*x1122*x1131))+((x1120*x1122*x1127))+(((-1.0)*sj4*x1116*x1130))+(((-1.0)*sj4*x1120*x1128))+(((-1.0)*cj5*r11*x1115*x1123))+(((-1.0)*x1123*x1124))+((cj1*cj2*x1124))+((sj4*x1120*x1129))+((r11*sj4*x1116*x1123))+((x1115*x1125*x1131))+((x1118*x1127))+(((-1.0)*x1116*x1126*x1131))+((x1115*x1125*x1127))+((x1115*x1132))+((x1118*x1131)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1133.valid){
continue;
}
CheckValue<IkReal> x1134=IKPowWithIntegerCheck(IKsign((((r01*(((((-1.0)*cj4*x1117))+((cj4*x1116))))))+((r02*sj4))+((r00*(((((-1.0)*cj4*x1121))+(((-1.0)*cj4*x1120)))))))),-1);
if(!x1134.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1133.value)+(((1.5707963267949)*(x1134.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1135=IKsin(j3);
IkReal x1136=IKcos(j3);
IkReal x1137=((0.8)*r01);
IkReal x1138=((0.6)*r20);
IkReal x1139=((0.8)*r21);
IkReal x1140=(sj4*sj5);
IkReal x1141=(cj2*sj1);
IkReal x1142=((0.8)*r11);
IkReal x1143=(sj1*sj2);
IkReal x1144=((0.8)*sj4);
IkReal x1145=((0.6)*sj4);
IkReal x1146=(cj1*sj2);
IkReal x1147=((0.6)*r10);
IkReal x1148=((0.8)*r00);
IkReal x1149=((0.6)*r00);
IkReal x1150=((0.8)*r10);
IkReal x1151=((0.8)*r20);
IkReal x1152=(cj5*x1135);
IkReal x1153=((1.0)*cj1*cj2);
IkReal x1154=(cj4*x1136);
IkReal x1155=(cj5*x1136);
IkReal x1156=((0.6)*x1136);
IkReal x1157=(sj5*x1135);
IkReal x1158=(cj4*x1135);
IkReal x1159=(sj5*x1136);
evalcond[0]=(x1143+(((-1.0)*x1138*x1155))+((r22*x1158))+(((-1.0)*x1153))+((x1135*x1138*x1140))+((r20*x1144*x1152))+((r21*sj5*x1156))+((r21*x1145*x1152))+(((-1.0)*x1135*x1139*x1140))+((x1151*x1159))+((x1139*x1155)));
evalcond[1]=(((r22*x1154))+(((-1.0)*x1136*x1139*x1140))+((r20*x1144*x1155))+((r21*x1145*x1155))+(((-1.0)*x1141))+(((-1.0)*x1146))+(((-1.0)*x1139*x1152))+((x1138*x1152))+(((-0.6)*r21*x1157))+(((-1.0)*x1151*x1157))+((x1136*x1138*x1140)));
evalcond[2]=((((-1.0)*x1149*x1155))+((x1137*x1155))+((r01*sj5*x1156))+((r00*x1144*x1152))+((r02*x1158))+((x1135*x1140*x1149))+((r01*x1145*x1152))+((x1148*x1159))+(((-1.0)*x1135*x1137*x1140))+((cj0*x1146))+((cj0*x1141)));
evalcond[3]=(((r12*x1158))+((r10*x1144*x1152))+((x1142*x1155))+(((-1.0)*x1135*x1140*x1142))+((r11*x1145*x1152))+(((-1.0)*x1147*x1155))+((x1135*x1140*x1147))+((sj0*x1146))+((sj0*x1141))+((x1150*x1159))+((r11*sj5*x1156)));
evalcond[4]=(((x1149*x1152))+(((-1.0)*x1136*x1137*x1140))+((r00*x1144*x1155))+((r02*x1154))+(((-1.0)*cj0*x1153))+((r01*x1145*x1155))+(((-1.0)*x1148*x1157))+((x1136*x1140*x1149))+(((-0.6)*r01*x1157))+((cj0*x1143))+(((-1.0)*x1137*x1152)));
evalcond[5]=((((-1.0)*sj0*x1153))+((r12*x1154))+((r10*x1144*x1155))+((r11*x1145*x1155))+((x1147*x1152))+((sj0*x1143))+((x1136*x1140*x1147))+(((-0.6)*r11*x1157))+(((-1.0)*x1136*x1140*x1142))+(((-1.0)*x1150*x1157))+(((-1.0)*x1142*x1152)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }
}
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - engineer_arm_urdf (735b3cf717ea6321ffe09cdcdebd6c30)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x1000004b"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main_ikfast(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
